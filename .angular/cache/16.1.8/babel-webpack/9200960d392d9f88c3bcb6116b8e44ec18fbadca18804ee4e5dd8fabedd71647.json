{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductsService = /*#__PURE__*/(() => {\n  class ProductsService {\n    constructor(http) {\n      this.http = http;\n      this.url = 'http://15.185.46.105:5045/api';\n    }\n    getProductList(year) {\n      return this.http.get(this.url + '/products/' + year);\n    }\n    searchProduct(code) {\n      return this.http.get(this.url + '/products/searchProduct/' + code);\n    }\n    getProduct(pcode, year) {\n      return this.http.get(this.url + '/product/' + pcode + '/' + year);\n    }\n    getLocationWiseProduct(pcode, year) {\n      return this.http.get(this.url + '/product/location/stock/' + pcode + '/' + year);\n    }\n    checkLocationWiseProduct(pcode, year, locid) {\n      return this.http.get(this.url + '/product/location/stock/' + pcode + '/' + locid + '/' + year);\n    }\n    postProduct(pcode, description, subCatId, costPrice, retailPrice, barcode, manufacturerId, reorder, supplierId, qoh, year, dealerPrice, remarks, qoo, brand, model, dealer, desc4) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n      const newTran = {\n        pcode: pcode,\n        description: description,\n        subCatId: subCatId,\n        costPrice: costPrice,\n        retailPrice: retailPrice,\n        barcode: barcode,\n        manufacturerId: manufacturerId,\n        reorder: reorder,\n        supplierId: supplierId,\n        qoh: qoh,\n        year: year,\n        dealerPrice: dealerPrice,\n        remarks: remarks,\n        qoo: qoo,\n        brand: brand,\n        model: model,\n        dealer: dealer,\n        desc4: desc4\n      };\n      this.http.post(this.url + '/product/new', JSON.stringify(newTran), {\n        headers: headers\n      }).subscribe(res => {\n        console.log(res);\n      });\n    }\n    updateProduct(pcode, description, subCatId, costPrice, retailPrice, barcode, manufacturerId, reorder, supplierId, qoh, year, dealerPrice, remarks, qoo, brand, model, dealer, desc4) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n      const newTran = {\n        pcode: pcode,\n        description: description,\n        subCatId: subCatId,\n        costPrice: costPrice,\n        retailPrice: retailPrice,\n        barcode: barcode,\n        manufacturerId: manufacturerId,\n        reorder: reorder,\n        supplierId: supplierId,\n        qoh: qoh,\n        year: year,\n        dealerPrice: dealerPrice,\n        remarks: remarks,\n        qoo: qoo,\n        brand: brand,\n        model: model,\n        dealer: dealer,\n        desc4: desc4\n      };\n      this.http.post(this.url + '/product/update', JSON.stringify(newTran), {\n        headers: headers\n      }).subscribe(res => {\n        console.log(res);\n      });\n    }\n    postProductLocations(pcode, locid, opeQty, year) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n      const newTran = {\n        pcode: pcode,\n        locid: locid,\n        opeQty: opeQty,\n        year: year\n      };\n      this.http.post(this.url + '/product/locations/new', JSON.stringify(newTran), {\n        headers: headers\n      }).subscribe(res => {\n        console.log(res);\n      });\n    }\n    updateProductLocations(pcode, locid, opeQty, year) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n      const newTran = {\n        pcode: pcode,\n        locid: locid,\n        opeQty: opeQty,\n        year: year\n      };\n      this.http.post(this.url + '/product/locations/update', JSON.stringify(newTran), {\n        headers: headers\n      }).subscribe(res => {\n        console.log(res);\n      });\n    }\n    getProductDocuments(pcode, type) {\n      return this.http.get(this.url + '/product/documents/' + pcode + '/' + type);\n    }\n    postProductDocuments(pcode, documentname, documenttype, filetype) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n      const newTran = {\n        pcode: pcode,\n        documentname: documentname,\n        documenttype: documenttype,\n        filetype: filetype\n      };\n      this.http.post(this.url + '/product/documents/new', JSON.stringify(newTran), {\n        headers: headers\n      }).subscribe(res => {\n        console.log(res);\n      });\n    }\n    deleteProductDocument(pcode, type) {\n      return this.http.get(this.url + '/product/documents/delete/' + pcode + '/' + type);\n    }\n    static #_ = this.ɵfac = function ProductsService_Factory(t) {\n      return new (t || ProductsService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProductsService,\n      factory: ProductsService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ProductsService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}