{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material';\nexport let ContactDetailsComponent = class ContactDetailsComponent {\n  constructor(financeService, route, dialog, _snackBar) {\n    this.financeService = financeService;\n    this.route = route;\n    this.dialog = dialog;\n    this._snackBar = _snackBar;\n    this.custArr = [];\n    this.selectedRowIndex = 0;\n    this.currentYear = new Date().getFullYear();\n    this.custDisplayedColumns = [\"PCODE\", \"CUST_NAME\", \"TAX_1_NO\"];\n    this.custDataSource = new MatTableDataSource(this.custArr);\n    this.contactForm = new UntypedFormGroup({\n      pcode: new UntypedFormControl('', [Validators.required]),\n      custName: new UntypedFormControl('', [Validators.required]),\n      custCR: new UntypedFormControl('', [Validators.required]),\n      custStatus: new UntypedFormControl('', [Validators.required]),\n      custTaxNo: new UntypedFormControl('', [Validators.required]),\n      custPhone1: new UntypedFormControl('', [Validators.required]),\n      custPhone2: new UntypedFormControl('', [Validators.required]),\n      custEmail: new UntypedFormControl('', [Validators.required]),\n      custAdd1: new UntypedFormControl('', [Validators.required]),\n      custAdd2: new UntypedFormControl('', [Validators.required]),\n      custAdd3: new UntypedFormControl('', [Validators.required]),\n      contactId: new UntypedFormControl('', [Validators.required]),\n      contactPerson: new UntypedFormControl('', [Validators.required]),\n      contactPhone1: new UntypedFormControl('', [Validators.required]),\n      contactPhone2: new UntypedFormControl('', [Validators.required]),\n      contactEmail: new UntypedFormControl('', [Validators.required]),\n      contactAddress1: new UntypedFormControl('', [Validators.required]),\n      contactAddress2: new UntypedFormControl('', [Validators.required]),\n      contactAddress3: new UntypedFormControl('', [Validators.required]),\n      cType: new UntypedFormControl('', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    if (this.route.snapshot.params.id === 'new') {\n      this.newForm();\n    } else {\n      this.getData(this.route.snapshot.params.id);\n    }\n  }\n  getData(partyid) {\n    this.refreshForm();\n    this.financeService.getPartyDetailFromPartyId(partyid).subscribe(res => {\n      console.log(res);\n      this.financeService.getCustomerDetailFromPcode(String(this.currentYear), res.recordset[0].PCODE).subscribe(resp => {\n        console.log(resp);\n        this.contactForm.patchValue({\n          pcode: res.recordset[0].PCODE,\n          custName: resp.recordset[0].CUST_NAME,\n          custCR: resp.recordset[0].CR_CPR,\n          custStatus: resp.recordset[0].STATUS,\n          custTaxNo: resp.recordset[0].TAX_1_NO,\n          custPhone1: resp.recordset[0].PHONE1,\n          custPhone2: resp.recordset[0].PHONE2,\n          custEmail: resp.recordset[0].EMAIL,\n          custAdd1: resp.recordset[0].ADD1,\n          custAdd2: resp.recordset[0].ADD2,\n          custAdd3: resp.recordset[0].ADD3,\n          contactId: res.recordset[0].PARTY_ID,\n          contactPerson: res.recordset[0].NAME,\n          contactPhone1: res.recordset[0].PHONE1,\n          contactPhone2: res.recordset[0].PHONE2,\n          contactEmail: res.recordset[0].EMAIL_ID,\n          contactAddress1: res.recordset[0].ADD1,\n          contactAddress2: res.recordset[0].ADD2,\n          contactAddress3: res.recordset[0].ADD3,\n          cType: res.recordset[0].TYPE\n        });\n      }, err => {\n        console.log(err);\n        this.contactForm.patchValue({\n          pcode: res.recordset[0].PCODE,\n          contactId: res.recordset[0].PARTY_ID,\n          contactPerson: res.recordset[0].NAME,\n          contactPhone1: res.recordset[0].PHONE1,\n          contactPhone2: res.recordset[0].PHONE2,\n          contactEmail: res.recordset[0].EMAIL_ID,\n          contactAddress1: res.recordset[0].ADD1,\n          contactAddress2: res.recordset[0].ADD2,\n          contactAddress3: res.recordset[0].ADD3,\n          cType: res.recordset[0].TYPE\n        });\n      });\n    }, err => {\n      this.newForm();\n    });\n  }\n  newForm() {\n    this.financeService.getMaxParty().subscribe(resp => {\n      console.log(resp);\n      const partyid = Number(resp.recordset[0].COUNT) + 1;\n      this.contactForm = new UntypedFormGroup({\n        pcode: new UntypedFormControl('', [Validators.required]),\n        custName: new UntypedFormControl('', [Validators.required]),\n        custCR: new UntypedFormControl('', [Validators.required]),\n        custStatus: new UntypedFormControl('', [Validators.required]),\n        custTaxNo: new UntypedFormControl('', [Validators.required]),\n        custPhone1: new UntypedFormControl('', [Validators.required]),\n        custPhone2: new UntypedFormControl('', [Validators.required]),\n        custEmail: new UntypedFormControl('', [Validators.required]),\n        custAdd1: new UntypedFormControl('', [Validators.required]),\n        custAdd2: new UntypedFormControl('', [Validators.required]),\n        custAdd3: new UntypedFormControl('', [Validators.required]),\n        contactId: new UntypedFormControl(String(partyid), [Validators.required]),\n        contactPerson: new UntypedFormControl('', [Validators.required]),\n        contactPhone1: new UntypedFormControl('', [Validators.required]),\n        contactPhone2: new UntypedFormControl('', [Validators.required]),\n        contactEmail: new UntypedFormControl('', [Validators.required]),\n        contactAddress1: new UntypedFormControl('', [Validators.required]),\n        contactAddress2: new UntypedFormControl('', [Validators.required]),\n        contactAddress3: new UntypedFormControl('', [Validators.required]),\n        cType: new UntypedFormControl('', [Validators.required])\n      });\n    });\n  }\n  submitForm() {\n    const data = this.contactForm.value;\n    this.financeService.getPartyDetailFromPartyId(data.contactId).subscribe(res => {\n      console.log(res);\n      this.financeService.updateContact(data.contactId, data.contactPerson, data.cType, data.contactAddress1, data.contactAddress2, data.contactAddress3, data.contactPhone1, data.contactPhone2, data.contactEmail, data.pcode);\n      this._snackBar.open(\"Data Successfully Updated!\", \"OK\");\n      this.getData(data.contactId);\n    }, err => {\n      console.log(err);\n      this.financeService.postContact(data.contactId, data.contactPerson, data.cType, data.contactAddress1, data.contactAddress2, data.contactAddress3, data.contactPhone1, data.contactPhone2, data.contactEmail, data.pcode);\n      this._snackBar.open(\"Data Successfully Inserted!\", \"OK\");\n      this.getData(data.contactId);\n    });\n  }\n  refreshForm() {\n    this.contactForm = new UntypedFormGroup({\n      pcode: new UntypedFormControl('', [Validators.required]),\n      custName: new UntypedFormControl('', [Validators.required]),\n      custCR: new UntypedFormControl('', [Validators.required]),\n      custStatus: new UntypedFormControl('', [Validators.required]),\n      custTaxNo: new UntypedFormControl('', [Validators.required]),\n      custPhone1: new UntypedFormControl('', [Validators.required]),\n      custPhone2: new UntypedFormControl('', [Validators.required]),\n      custEmail: new UntypedFormControl('', [Validators.required]),\n      custAdd1: new UntypedFormControl('', [Validators.required]),\n      custAdd2: new UntypedFormControl('', [Validators.required]),\n      custAdd3: new UntypedFormControl('', [Validators.required]),\n      contactId: new UntypedFormControl('', [Validators.required]),\n      contactPerson: new UntypedFormControl('', [Validators.required]),\n      contactPhone1: new UntypedFormControl('', [Validators.required]),\n      contactPhone2: new UntypedFormControl('', [Validators.required]),\n      contactEmail: new UntypedFormControl('', [Validators.required]),\n      contactAddress1: new UntypedFormControl('', [Validators.required]),\n      contactAddress2: new UntypedFormControl('', [Validators.required]),\n      contactAddress3: new UntypedFormControl('', [Validators.required]),\n      cType: new UntypedFormControl('', [Validators.required])\n    });\n  }\n  getCustomerDetails(code) {\n    this.selectedRowIndex = 0;\n    let dialogRef = this.dialog.open(this.custLookupDialog);\n    this.financeService.searchCustomer(code).subscribe(res => {\n      console.log(res);\n      this.custArr = res.recordset;\n      this.custDataSource = new MatTableDataSource(this.custArr);\n    }, err => {\n      console.log(err);\n    });\n  }\n  onViewCellClicked(event) {\n    this.contactForm.patchValue({\n      pcode: event.PCODE,\n      custName: event.CUST_NAME,\n      custCR: event.CR_CPR,\n      custStatus: event.STATUS,\n      custTaxNo: event.TAX_1_NO,\n      custPhone1: event.PHONE1,\n      custPhone2: event.PHONE2,\n      custEmail: event.EMAIL,\n      custAdd1: event.ADD1,\n      custAdd2: event.ADD2,\n      custAdd3: event.ADD3,\n      cType: event.TYPE\n    });\n    let dialogRef = this.dialog.closeAll();\n  }\n  highlight(index) {\n    console.log(index);\n    if (index >= 0 && index <= this.custArr.length - 1) this.selectedRowIndex = index;\n  }\n  arrowUpEvent(index) {\n    this.highlight(--index);\n  }\n  arrowDownEvent(index) {\n    this.highlight(++index);\n  }\n};\n__decorate([ViewChild('custLookupDialog', {\n  static: false\n})], ContactDetailsComponent.prototype, \"custLookupDialog\", void 0);\nContactDetailsComponent = __decorate([Component({\n  selector: 'app-contact-details',\n  templateUrl: './contact-details.component.html',\n  styleUrls: ['./contact-details.component.scss']\n})], ContactDetailsComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}