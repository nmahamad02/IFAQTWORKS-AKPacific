{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let QuotationsService = /*#__PURE__*/(() => {\n  class QuotationsService {\n    constructor(http) {\n      this.http = http;\n      this.url = 'http://15.185.46.105:5045/api';\n    }\n    getQuotationList() {\n      return this.http.get(this.url + '/quotations');\n    }\n    getQuotNoFromDoc(year) {\n      return this.http.get(this.url + '/quot/doc/' + year);\n    }\n    getQuotationMaster(quotno) {\n      return this.http.get(this.url + '/quot/master/' + quotno);\n    }\n    getQuotationDetails(quotno) {\n      return this.http.get(this.url + '/quot/details/' + quotno);\n    }\n    postQuotationMaster(quotnbr, quotdate, status, expdate, pcode, party, custname, add1, add2, add3, phone1, total, discount, vatamt, gtotal, subject, description, remarks, year, createduser) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n      const newTran = {\n        quotno: quotnbr,\n        quotdate: quotdate,\n        status: status,\n        expdate: expdate,\n        pcode: pcode,\n        party: party,\n        custname: custname,\n        add1: add1,\n        add2: add2,\n        add3: add3,\n        phone1: phone1,\n        total: total,\n        discount: discount,\n        vatamt: vatamt,\n        gtotal: gtotal,\n        subject: subject,\n        description: description,\n        remarks: remarks,\n        year: year,\n        createduser: createduser\n      };\n      console.log(newTran);\n      this.http.post(this.url + '/quot/master/new', JSON.stringify(newTran), {\n        headers: headers\n      }).subscribe(res => {\n        console.log(res);\n      });\n    }\n    updateQuotDocNo(value, year) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n      const newTran = {\n        value: value,\n        year: year\n      };\n      this.http.post(this.url + '/quot/doc/update', JSON.stringify(newTran), {\n        headers: headers\n      }).subscribe(res => {\n        console.log(res);\n      });\n    }\n    updateQuotationMaster(quotno, status, expdate, pcode, party, custname, add1, add2, add3, phone1, total, discount, vatamt, gtotal, subject, description, remarks) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n      const newTran = {\n        quotno: quotno,\n        status: status,\n        expdate: expdate,\n        pcode: pcode,\n        party: party,\n        custname: custname,\n        add1: add1,\n        add2: add2,\n        add3: add3,\n        phone1: phone1,\n        total: total,\n        discount: discount,\n        vatamt: vatamt,\n        gtotal: gtotal,\n        subject: subject,\n        description: description,\n        remarks: remarks\n      };\n      this.http.post(this.url + '/quot/master/update', JSON.stringify(newTran), {\n        headers: headers\n      }).subscribe(res => {\n        console.log(res);\n      });\n    }\n    postQuotationDetails(quotno, desc, remarks, totqty, pcode, price, amount, disper, disamt, taxtype, taxper, taxamt, unittype, boqno, createduser, year) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n      const newTran = {\n        quotno: quotno,\n        pcode: pcode,\n        desc: desc,\n        remarks: remarks,\n        totqty: totqty,\n        price: price,\n        amount: amount,\n        disper: disper,\n        disamt: disamt,\n        taxtype: taxtype,\n        taxper: taxper,\n        taxamt: taxamt,\n        unittype: unittype,\n        boqno: boqno,\n        createduser: createduser,\n        year: year\n      };\n      this.http.post(this.url + '/quot/details/new', JSON.stringify(newTran), {\n        headers: headers\n      }).subscribe(res => {\n        console.log(res);\n      });\n    }\n    deleteQuotationDetails(quotno) {\n      return this.http.get(this.url + '/quot/details/delete/' + quotno);\n    }\n    static #_ = this.ɵfac = function QuotationsService_Factory(t) {\n      return new (t || QuotationsService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: QuotationsService,\n      factory: QuotationsService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return QuotationsService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}