{"ast":null,"code":"// Inspired in: https://devblogs.microsoft.com/premier-developer/angular-how-to-editable-config-files/\nimport { isDevMode } from '@angular/core';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AppShellConfig = /*#__PURE__*/(() => {\n  class AppShellConfig {\n    constructor(http) {\n      this.http = http;\n    }\n    // Simplified version from: https://stackoverflow.com/a/49707898/1116959\n    load() {\n      const configFile = '/assets/config/app-shell.config' + (!isDevMode() ? '.prod' : '') + '.json';\n      return this.http.get(configFile).pipe(tap(configSettings => {\n        AppShellConfig.settings = configSettings;\n      })).toPromise().catch(error => {\n        console.log(`Could not load file '${configFile}'`, error);\n      });\n    }\n    static #_ = this.ɵfac = function AppShellConfig_Factory(t) {\n      return new (t || AppShellConfig)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AppShellConfig,\n      factory: AppShellConfig.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AppShellConfig;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}