{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport let FileUploaderDirective = /*#__PURE__*/(() => {\n  class FileUploaderDirective {\n    constructor() {\n      this.background = '';\n      this.allowedExtensions = [];\n      this.filesChangeEmiter = new EventEmitter();\n      this.filesInvalidEmiter = new EventEmitter();\n    }\n    onDrop(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      const files = e.dataTransfer.files;\n      const validFiles = [];\n      const invalidFiles = [];\n      if (files.length > 0) {\n        for (const file of files) {\n          const ext = file.name.split('.')[file.name.split('.').length - 1];\n          if (!this.allowedExtensions.length || this.allowedExtensions.lastIndexOf(ext) !== -1) {\n            validFiles.push(file);\n          } else {\n            invalidFiles.push(file);\n          }\n        }\n        if (validFiles.length > 0) {\n          this.filesChangeEmiter.emit(validFiles);\n        }\n        if (invalidFiles.length > 0) {\n          this.filesInvalidEmiter.emit(invalidFiles);\n        }\n      }\n    }\n    onDragOver(e) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    static #_ = this.ɵfac = function FileUploaderDirective_Factory(t) {\n      return new (t || FileUploaderDirective)();\n    };\n    static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n      type: FileUploaderDirective,\n      selectors: [[\"\", \"appFileUploader\", \"\"]],\n      hostBindings: function FileUploaderDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"drop\", function FileUploaderDirective_drop_HostBindingHandler($event) {\n            return ctx.onDrop($event);\n          })(\"dragover\", function FileUploaderDirective_dragover_HostBindingHandler($event) {\n            return ctx.onDragOver($event);\n          });\n        }\n      },\n      inputs: {\n        allowedExtensions: \"allowedExtensions\"\n      },\n      outputs: {\n        filesChangeEmiter: \"filesChangeEmiter\",\n        filesInvalidEmiter: \"filesInvalidEmiter\"\n      }\n    });\n  }\n  return FileUploaderDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}