{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\nimport { UserColumns } from '../../../models/user';\nimport { SalesmanColumns } from '../../../models/salesman';\nimport { ManufacturerColumns } from '../../../models/manufacturer';\nimport { CategoryColumns } from '../../../models/category';\nimport { BrandColumns } from '../../../models/brand';\nimport { SubcategoryColumns } from '../../../models/subcategory';\nimport { LocationColumns } from '../../../models/location';\nexport let LookupComponent = class LookupComponent {\n  constructor(lookUpService, _snackBar) {\n    this.lookUpService = lookUpService;\n    this._snackBar = _snackBar;\n    this.displayedColumns = UserColumns.map(col => col.key);\n    this.columnsSchema = UserColumns;\n    this.dataSource = new MatTableDataSource();\n    this.salesmanDisplayedColumns = SalesmanColumns.map(col => col.key);\n    this.salesmanColumnsSchema = SalesmanColumns;\n    this.salesmanList = [];\n    this.salesmanDataSource = new MatTableDataSource();\n    this.manufacturerDisplayedColumns = ManufacturerColumns.map(col => col.key);\n    this.manufacturerColumnsSchema = ManufacturerColumns;\n    this.manufacturerList = [];\n    this.manufacturerDataSource = new MatTableDataSource();\n    this.categoryDisplayedColumns = CategoryColumns.map(col => col.key);\n    this.categoryColumnsSchema = CategoryColumns;\n    this.categoryList = [];\n    this.categoryDataSource = new MatTableDataSource();\n    this.brandDisplayedColumns = BrandColumns.map(col => col.key);\n    this.brandColumnsSchema = BrandColumns;\n    this.brandList = [];\n    this.brandDataSource = new MatTableDataSource();\n    this.subcategoryDisplayedColumns = SubcategoryColumns.map(col => col.key);\n    this.subcategoryColumnsSchema = SubcategoryColumns;\n    this.subcategoryList = [];\n    this.subcategoryDataSource = new MatTableDataSource();\n    this.locationDisplayedColumns = LocationColumns.map(col => col.key);\n    this.locationColumnsSchema = LocationColumns;\n    this.locationList = [];\n    this.locationDataSource = new MatTableDataSource();\n  }\n  ngOnInit() {\n    this.lookUpService.getUsers().subscribe(res => {\n      console.log(res);\n      this.dataSource.data = res;\n    });\n    this.lookUpService.getSalesman().subscribe(res => {\n      console.log(res);\n      this.salesmanList = res;\n      this.salesmanDataSource.data = res;\n    });\n    this.lookUpService.getManufacturer().subscribe(res => {\n      console.log(res);\n      this.manufacturerList = res;\n      this.manufacturerDataSource.data = res;\n    });\n    this.lookUpService.getCategory().subscribe(res => {\n      console.log(res);\n      this.categoryList = res;\n      this.categoryDataSource.data = res;\n    });\n    this.lookUpService.getBrand().subscribe(res => {\n      console.log(res);\n      this.brandList = res;\n      this.brandDataSource.data = res;\n    });\n    this.lookUpService.getSubcategory().subscribe(res => {\n      console.log(res);\n      this.subcategoryList = res;\n      this.subcategoryDataSource.data = res;\n    });\n    this.lookUpService.getLocation().subscribe(res => {\n      console.log(res);\n      this.locationList = res;\n      this.locationDataSource.data = res;\n    });\n  }\n  //Salesmen Functions\n  editSalesmenRow(row) {\n    row.isEdit = !row.isEdit;\n  }\n  submitSalesmenRow(row) {\n    this.lookUpService.getSalesmenDetails(row.SALESMAN_CD).subscribe(res => {\n      console.log(res);\n      if (res.recordset.length === 0) {\n        this.lookUpService.postSalesman(row.SALESMAN_ID, row.SALESMAN_CD, row.NAME, row.MOBILE, row.EMAIL_ID);\n        row.isEdit = !row.isEdit;\n      } else {\n        this.lookUpService.updateSalesman(row.SALESMAN_CD, row.NAME, row.MOBILE, row.EMAIL_ID);\n        row.isEdit = !row.isEdit;\n      }\n    }, err => {\n      console.log(err);\n      this.lookUpService.updateSalesman(row.SALESMAN_CD, row.NAME, row.MOBILE, row.EMAIL_ID);\n      row.isEdit = !row.isEdit;\n    });\n  }\n  addSalesmenRow() {\n    const newRow = {\n      SALESMAN_ID: this.salesmanList.length + 1,\n      SALESMAN_CD: '',\n      NAME: '',\n      MOBILE: '',\n      EMAIL_ID: '',\n      isEdit: true\n    };\n    this.salesmanDataSource.data = [newRow, ...this.salesmanDataSource.data];\n  }\n  //Manufacturer Functions\n  editManufacturerRow(row) {\n    row.isEdit = !row.isEdit;\n  }\n  submitManufacturerRow(row) {\n    this.lookUpService.getManufacturerDetails(row.MANUFACTURER_CD).subscribe(res => {\n      console.log(res);\n      if (res.recordset.length === 0) {\n        this.lookUpService.postManufacturer(row.MANUFACTURER_ID, row.MANUFACTURER_CD, row.MANUFACTURER_NAME, row.PHONE1);\n        row.isEdit = !row.isEdit;\n        this._snackBar.open(\"Data Successfully Inserted!\", \"OK\");\n      } else {\n        this.lookUpService.updateManufacturer(row.MANUFACTURER_ID, row.MANUFACTURER_CD, row.MANUFACTURER_NAME, row.PHONE1);\n        row.isEdit = !row.isEdit;\n        this._snackBar.open(\"Data Successfully Updated!\", \"OK\");\n      }\n    }, err => {\n      console.log(err);\n      this.lookUpService.updateManufacturer(row.MANUFACTURER_ID, row.MANUFACTURER_CD, row.MANUFACTURER_NAME, row.PHONE1);\n      row.isEdit = !row.isEdit;\n      this._snackBar.open(\"Data Successfully Inserted!\", \"OK\");\n    });\n  }\n  addManufacturerRow() {\n    const newRow = {\n      MANUFACTURER_ID: this.manufacturerList.length + 1,\n      MANUFACTURER_CD: '',\n      MANUFACTURER_NAME: '',\n      PHONE1: '',\n      isEdit: true\n    };\n    this.manufacturerDataSource.data = [newRow, ...this.manufacturerDataSource.data];\n  }\n  //Category Functions\n  editCategoryRow(row) {\n    row.isEdit = !row.isEdit;\n  }\n  submitCategoryRow(row) {\n    this.lookUpService.getCategoryDetails(row.CATEGORY_ID).subscribe(res => {\n      console.log(res);\n      if (res.recordset.length === 0) {\n        this.lookUpService.postCategory(row.CATEGORY_ID, row.CATEGORY_CD, row.CATEGORY_NAME, row.CATEGORY_DETAILS);\n        row.isEdit = !row.isEdit;\n        this._snackBar.open(\"Data Successfully Inserted!\", \"OK\");\n      } else {\n        this.lookUpService.updateCategory(row.CATEGORY_ID, row.CATEGORY_CD, row.CATEGORY_NAME, row.CATEGORY_DETAILS);\n        row.isEdit = !row.isEdit;\n        this._snackBar.open(\"Data Successfully Updated!\", \"OK\");\n      }\n    }, err => {\n      console.log(err);\n      this.lookUpService.updateCategory(row.CATEGORY_ID, row.CATEGORY_CD, row.CATEGORY_NAME, row.CATEGORY_DETAILS);\n      row.isEdit = !row.isEdit;\n      this._snackBar.open(\"Data Successfully Inserted!\", \"OK\");\n    });\n  }\n  addCategoryRow() {\n    let newCatID = 'C0' + String(this.categoryList.length + 1);\n    const newRow = {\n      CATEGORY_ID: newCatID,\n      CATEGORY_CD: '',\n      CATEGORY_NAME: '',\n      CATEGORY_DETAILS: '',\n      isEdit: true\n    };\n    this.categoryDataSource.data = [newRow, ...this.categoryDataSource.data];\n  }\n  //Brand Functions\n  editBrandRow(row) {\n    row.isEdit = !row.isEdit;\n  }\n  submitBrandRow(row) {\n    this.lookUpService.getBrandDetails(row.BRAND_CD).subscribe(res => {\n      console.log(res);\n      if (res.recordset.length === 0) {\n        this.lookUpService.postBrand(row.BRAND_ID, row.BRAND_CD, row.BRAND_NAME, row.MANUFACTURER_CD);\n        row.isEdit = !row.isEdit;\n        this._snackBar.open(\"Data Successfully Inserted!\", \"OK\");\n      } else {\n        this.lookUpService.updateBrand(row.BRAND_ID, row.BRAND_CD, row.BRAND_NAME, row.MANUFACTURER_CD);\n        row.isEdit = !row.isEdit;\n        this._snackBar.open(\"Data Successfully Updated!\", \"OK\");\n      }\n    }, err => {\n      console.log(err);\n      this.lookUpService.updateBrand(row.BRAND_ID, row.BRAND_CD, row.BRAND_NAME, row.MANUFACTURER_CD);\n      row.isEdit = !row.isEdit;\n      this._snackBar.open(\"Data Successfully Inserted!\", \"OK\");\n    });\n    console.log(row);\n  }\n  addBrandRow() {\n    const newRow = {\n      BRAND_ID: this.brandList.length + 1,\n      BRAND_CD: '',\n      BRAND_NAME: '',\n      MANUFACTURER_CD: '',\n      isEdit: true\n    };\n    this.brandDataSource.data = [newRow, ...this.brandDataSource.data];\n  }\n  //Subcategory Functions\n  editSubcategoryRow(row) {\n    row.isEdit = !row.isEdit;\n  }\n  submitSubcategoryRow(row) {\n    this.lookUpService.getSubcategoryDetails(row.SUBCATEGORY_CD).subscribe(res => {\n      console.log(res);\n      if (res.recordset.length === 0) {\n        this.lookUpService.postSubcategory(String(row.SUBCATEGORY_ID), row.SUBCATEGORY_CD, row.SUBCATEGORY_NAME, row.SUBCATEGORY_DESCRIPTION, row.CATEGORY_ID);\n        row.isEdit = !row.isEdit;\n        this._snackBar.open(\"Data Successfully Inserted!\", \"OK\");\n      } else {\n        this.lookUpService.updateSubcategory(String(row.SUBCATEGORY_ID), row.SUBCATEGORY_CD, row.SUBCATEGORY_NAME, row.SUBCATEGORY_DESCRIPTION, row.CATEGORY_ID);\n        row.isEdit = !row.isEdit;\n        this._snackBar.open(\"Data Successfully Updated!\", \"OK\");\n      }\n    }, err => {\n      console.log(err);\n      this.lookUpService.updateSubcategory(String(row.SUBCATEGORY_ID), row.SUBCATEGORY_CD, row.SUBCATEGORY_NAME, row.SUBCATEGORY_DESCRIPTION, row.CATEGORY_ID);\n      row.isEdit = !row.isEdit;\n      this._snackBar.open(\"Data Successfully Inserted!\", \"OK\");\n    });\n    console.log(row);\n  }\n  addSubcategoryRow() {\n    const newRow = {\n      SUBCATEGORY_ID: this.subcategoryList.length + 1,\n      SUBCATEGORY_CD: '',\n      SUBCATEGORY_NAME: '',\n      SUBCATEGORY_DESCRIPTION: '',\n      CATEGORY_ID: '',\n      isEdit: true\n    };\n    this.subcategoryDataSource.data = [newRow, ...this.subcategoryDataSource.data];\n  }\n  //Location Functions\n  editLocationRow(row) {\n    row.isEdit = !row.isEdit;\n  }\n  submitLocationRow(row) {\n    this.lookUpService.getLocationDetails(row.LOCATIONID).subscribe(res => {\n      console.log(res);\n      if (res.recordset.length === 0) {\n        this.lookUpService.postLocation(row.LOCATIONID, row.LOCATIONNAME);\n        row.isEdit = !row.isEdit;\n        this._snackBar.open(\"Data Successfully Inserted!\", \"OK\");\n      } else {\n        this.lookUpService.updateLocation(row.LOCATIONID, row.LOCATIONNAME);\n        row.isEdit = !row.isEdit;\n        this._snackBar.open(\"Data Successfully Updated!\", \"OK\");\n      }\n    }, err => {\n      console.log(err);\n      this.lookUpService.updateLocation(row.LOCATIONID, row.LOCATIONNAME);\n      row.isEdit = !row.isEdit;\n      this._snackBar.open(\"Data Successfully Inserted!\", \"OK\");\n    });\n    console.log(row);\n  }\n  addLocationRow() {\n    const newRow = {\n      LOCATIONID: '',\n      LOCATIONNAME: '',\n      isEdit: true\n    };\n    this.locationDataSource.data = [newRow, ...this.locationDataSource.data];\n  }\n};\nLookupComponent = __decorate([Component({\n  selector: 'app-lookup',\n  templateUrl: './lookup.component.html',\n  styleUrls: ['./lookup.component.scss']\n})], LookupComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}