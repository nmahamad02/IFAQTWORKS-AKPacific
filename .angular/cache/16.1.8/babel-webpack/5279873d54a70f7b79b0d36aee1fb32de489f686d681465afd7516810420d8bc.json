{"ast":null,"code":"/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"pdfjs-dist/build/pdf\", [], factory);else if (typeof exports === 'object') exports[\"pdfjs-dist/build/pdf\"] = factory();else root[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory();\n})(this, function () {\n  return (/******/function (modules) {\n      // webpackBootstrap\n      /******/ // The module cache\n      /******/\n      var installedModules = {};\n      /******/\n      /******/ // The require function\n      /******/\n      function __w_pdfjs_require__(moduleId) {\n        /******/\n        /******/ // Check if module is in cache\n        /******/if (installedModules[moduleId]) {\n          /******/return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/ // Create a new module (and put it into the cache)\n        /******/\n        var module = installedModules[moduleId] = {\n          /******/i: moduleId,\n          /******/l: false,\n          /******/exports: {}\n          /******/\n        };\n        /******/\n        /******/ // Execute the module function\n        /******/\n        modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n        /******/\n        /******/ // Flag the module as loaded\n        /******/\n        module.l = true;\n        /******/\n        /******/ // Return the exports of the module\n        /******/\n        return module.exports;\n        /******/\n      }\n      /******/\n      /******/\n      /******/ // expose the modules object (__webpack_modules__)\n      /******/\n      __w_pdfjs_require__.m = modules;\n      /******/\n      /******/ // expose the module cache\n      /******/\n      __w_pdfjs_require__.c = installedModules;\n      /******/\n      /******/ // define getter function for harmony exports\n      /******/\n      __w_pdfjs_require__.d = function (exports, name, getter) {\n        /******/if (!__w_pdfjs_require__.o(exports, name)) {\n          /******/Object.defineProperty(exports, name, {\n            enumerable: true,\n            get: getter\n          });\n          /******/\n        }\n        /******/\n      };\n      /******/\n      /******/ // define __esModule on exports\n      /******/\n      __w_pdfjs_require__.r = function (exports) {\n        /******/if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n      /******/ // create a fake namespace object\n      /******/ // mode & 1: value is a module id, require it\n      /******/ // mode & 2: merge all properties of value into the ns\n      /******/ // mode & 4: return value when already ns object\n      /******/ // mode & 8|1: behave like require\n      /******/\n      __w_pdfjs_require__.t = function (value, mode) {\n        /******/if (mode & 1) value = __w_pdfjs_require__(value);\n        /******/\n        if (mode & 8) return value;\n        /******/\n        if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n        /******/\n        var ns = Object.create(null);\n        /******/\n        __w_pdfjs_require__.r(ns);\n        /******/\n        Object.defineProperty(ns, 'default', {\n          enumerable: true,\n          value: value\n        });\n        /******/\n        if (mode & 2 && typeof value != 'string') for (var key in value) __w_pdfjs_require__.d(ns, key, function (key) {\n          return value[key];\n        }.bind(null, key));\n        /******/\n        return ns;\n        /******/\n      };\n      /******/\n      /******/ // getDefaultExport function for compatibility with non-harmony modules\n      /******/\n      __w_pdfjs_require__.n = function (module) {\n        /******/var getter = module && module.__esModule ? /******/function getDefault() {\n          return module['default'];\n        } : /******/function getModuleExports() {\n          return module;\n        };\n        /******/\n        __w_pdfjs_require__.d(getter, 'a', getter);\n        /******/\n        return getter;\n        /******/\n      };\n      /******/\n      /******/ // Object.prototype.hasOwnProperty.call\n      /******/\n      __w_pdfjs_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n      /******/ // __webpack_public_path__\n      /******/\n      __w_pdfjs_require__.p = \"\";\n      /******/\n      /******/\n      /******/ // Load entry module and return exports\n      /******/\n      return __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n      /******/\n    }\n    /************************************************************************/\n    /******/([/* 0 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      Object.defineProperty(exports, \"addLinkAttributes\", {\n        enumerable: true,\n        get: function get() {\n          return _display_utils.addLinkAttributes;\n        }\n      });\n      Object.defineProperty(exports, \"getFilenameFromUrl\", {\n        enumerable: true,\n        get: function get() {\n          return _display_utils.getFilenameFromUrl;\n        }\n      });\n      Object.defineProperty(exports, \"LinkTarget\", {\n        enumerable: true,\n        get: function get() {\n          return _display_utils.LinkTarget;\n        }\n      });\n      Object.defineProperty(exports, \"loadScript\", {\n        enumerable: true,\n        get: function get() {\n          return _display_utils.loadScript;\n        }\n      });\n      Object.defineProperty(exports, \"PDFDateString\", {\n        enumerable: true,\n        get: function get() {\n          return _display_utils.PDFDateString;\n        }\n      });\n      Object.defineProperty(exports, \"RenderingCancelledException\", {\n        enumerable: true,\n        get: function get() {\n          return _display_utils.RenderingCancelledException;\n        }\n      });\n      Object.defineProperty(exports, \"build\", {\n        enumerable: true,\n        get: function get() {\n          return _api.build;\n        }\n      });\n      Object.defineProperty(exports, \"getDocument\", {\n        enumerable: true,\n        get: function get() {\n          return _api.getDocument;\n        }\n      });\n      Object.defineProperty(exports, \"LoopbackPort\", {\n        enumerable: true,\n        get: function get() {\n          return _api.LoopbackPort;\n        }\n      });\n      Object.defineProperty(exports, \"PDFDataRangeTransport\", {\n        enumerable: true,\n        get: function get() {\n          return _api.PDFDataRangeTransport;\n        }\n      });\n      Object.defineProperty(exports, \"PDFWorker\", {\n        enumerable: true,\n        get: function get() {\n          return _api.PDFWorker;\n        }\n      });\n      Object.defineProperty(exports, \"version\", {\n        enumerable: true,\n        get: function get() {\n          return _api.version;\n        }\n      });\n      Object.defineProperty(exports, \"CMapCompressionType\", {\n        enumerable: true,\n        get: function get() {\n          return _util.CMapCompressionType;\n        }\n      });\n      Object.defineProperty(exports, \"createObjectURL\", {\n        enumerable: true,\n        get: function get() {\n          return _util.createObjectURL;\n        }\n      });\n      Object.defineProperty(exports, \"createPromiseCapability\", {\n        enumerable: true,\n        get: function get() {\n          return _util.createPromiseCapability;\n        }\n      });\n      Object.defineProperty(exports, \"createValidAbsoluteUrl\", {\n        enumerable: true,\n        get: function get() {\n          return _util.createValidAbsoluteUrl;\n        }\n      });\n      Object.defineProperty(exports, \"InvalidPDFException\", {\n        enumerable: true,\n        get: function get() {\n          return _util.InvalidPDFException;\n        }\n      });\n      Object.defineProperty(exports, \"MissingPDFException\", {\n        enumerable: true,\n        get: function get() {\n          return _util.MissingPDFException;\n        }\n      });\n      Object.defineProperty(exports, \"OPS\", {\n        enumerable: true,\n        get: function get() {\n          return _util.OPS;\n        }\n      });\n      Object.defineProperty(exports, \"PasswordResponses\", {\n        enumerable: true,\n        get: function get() {\n          return _util.PasswordResponses;\n        }\n      });\n      Object.defineProperty(exports, \"PermissionFlag\", {\n        enumerable: true,\n        get: function get() {\n          return _util.PermissionFlag;\n        }\n      });\n      Object.defineProperty(exports, \"removeNullCharacters\", {\n        enumerable: true,\n        get: function get() {\n          return _util.removeNullCharacters;\n        }\n      });\n      Object.defineProperty(exports, \"shadow\", {\n        enumerable: true,\n        get: function get() {\n          return _util.shadow;\n        }\n      });\n      Object.defineProperty(exports, \"UnexpectedResponseException\", {\n        enumerable: true,\n        get: function get() {\n          return _util.UnexpectedResponseException;\n        }\n      });\n      Object.defineProperty(exports, \"UNSUPPORTED_FEATURES\", {\n        enumerable: true,\n        get: function get() {\n          return _util.UNSUPPORTED_FEATURES;\n        }\n      });\n      Object.defineProperty(exports, \"Util\", {\n        enumerable: true,\n        get: function get() {\n          return _util.Util;\n        }\n      });\n      Object.defineProperty(exports, \"VerbosityLevel\", {\n        enumerable: true,\n        get: function get() {\n          return _util.VerbosityLevel;\n        }\n      });\n      Object.defineProperty(exports, \"AnnotationLayer\", {\n        enumerable: true,\n        get: function get() {\n          return _annotation_layer.AnnotationLayer;\n        }\n      });\n      Object.defineProperty(exports, \"apiCompatibilityParams\", {\n        enumerable: true,\n        get: function get() {\n          return _api_compatibility.apiCompatibilityParams;\n        }\n      });\n      Object.defineProperty(exports, \"GlobalWorkerOptions\", {\n        enumerable: true,\n        get: function get() {\n          return _worker_options.GlobalWorkerOptions;\n        }\n      });\n      Object.defineProperty(exports, \"renderTextLayer\", {\n        enumerable: true,\n        get: function get() {\n          return _text_layer.renderTextLayer;\n        }\n      });\n      Object.defineProperty(exports, \"SVGGraphics\", {\n        enumerable: true,\n        get: function get() {\n          return _svg.SVGGraphics;\n        }\n      });\n      var _display_utils = __w_pdfjs_require__(1);\n      var _api = __w_pdfjs_require__(198);\n      var _util = __w_pdfjs_require__(5);\n      var _annotation_layer = __w_pdfjs_require__(209);\n      var _api_compatibility = __w_pdfjs_require__(200);\n      var _worker_options = __w_pdfjs_require__(203);\n      var _text_layer = __w_pdfjs_require__(210);\n      var _svg = __w_pdfjs_require__(211);\n      var pdfjsVersion = '2.5.207';\n      var pdfjsBuild = '0974d605';\n      {\n        var _require = __w_pdfjs_require__(7),\n          isNodeJS = _require.isNodeJS;\n        if (isNodeJS) {\n          var PDFNodeStream = __w_pdfjs_require__(212).PDFNodeStream;\n          (0, _api.setPDFNetworkStreamFactory)(function (params) {\n            return new PDFNodeStream(params);\n          });\n        } else {\n          var PDFNetworkStream = __w_pdfjs_require__(215).PDFNetworkStream;\n          var PDFFetchStream;\n          if ((0, _display_utils.isFetchSupported)()) {\n            PDFFetchStream = __w_pdfjs_require__(216).PDFFetchStream;\n          }\n          (0, _api.setPDFNetworkStreamFactory)(function (params) {\n            if (PDFFetchStream && (0, _display_utils.isValidFetchUrl)(params.url)) {\n              return new PDFFetchStream(params);\n            }\n            return new PDFNetworkStream(params);\n          });\n        }\n      }\n\n      /***/\n    }, /* 1 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.addLinkAttributes = addLinkAttributes;\n      exports.getFilenameFromUrl = getFilenameFromUrl;\n      exports.isFetchSupported = isFetchSupported;\n      exports.isValidFetchUrl = isValidFetchUrl;\n      exports.loadScript = loadScript;\n      exports.deprecated = deprecated;\n      exports.PDFDateString = exports.StatTimer = exports.DOMSVGFactory = exports.DOMCMapReaderFactory = exports.DOMCanvasFactory = exports.DEFAULT_LINK_REL = exports.LinkTarget = exports.RenderingCancelledException = exports.PageViewport = void 0;\n      var _regenerator = _interopRequireDefault(__w_pdfjs_require__(2));\n      var _util = __w_pdfjs_require__(5);\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          \"default\": obj\n        };\n      }\n      function _createForOfIteratorHelper(o, allowArrayLike) {\n        var it;\n        if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n          if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n            if (it) o = it;\n            var i = 0;\n            var F = function F() {};\n            return {\n              s: F,\n              n: function n() {\n                if (i >= o.length) return {\n                  done: true\n                };\n                return {\n                  done: false,\n                  value: o[i++]\n                };\n              },\n              e: function e(_e) {\n                throw _e;\n              },\n              f: F\n            };\n          }\n          throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n        }\n        var normalCompletion = true,\n          didErr = false,\n          err;\n        return {\n          s: function s() {\n            it = o[Symbol.iterator]();\n          },\n          n: function n() {\n            var step = it.next();\n            normalCompletion = step.done;\n            return step;\n          },\n          e: function e(_e2) {\n            didErr = true;\n            err = _e2;\n          },\n          f: function f() {\n            try {\n              if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n            } finally {\n              if (didErr) throw err;\n            }\n          }\n        };\n      }\n      function _unsupportedIterableToArray(o, minLen) {\n        if (!o) return;\n        if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n        var n = Object.prototype.toString.call(o).slice(8, -1);\n        if (n === \"Object\" && o.constructor) n = o.constructor.name;\n        if (n === \"Map\" || n === \"Set\") return Array.from(o);\n        if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n      }\n      function _arrayLikeToArray(arr, len) {\n        if (len == null || len > arr.length) len = arr.length;\n        for (var i = 0, arr2 = new Array(len); i < len; i++) {\n          arr2[i] = arr[i];\n        }\n        return arr2;\n      }\n      function _typeof(obj) {\n        \"@babel/helpers - typeof\";\n\n        if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n          _typeof = function _typeof(obj) {\n            return typeof obj;\n          };\n        } else {\n          _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n          };\n        }\n        return _typeof(obj);\n      }\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function\");\n        }\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) _setPrototypeOf(subClass, superClass);\n      }\n      function _setPrototypeOf(o, p) {\n        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n          o.__proto__ = p;\n          return o;\n        };\n        return _setPrototypeOf(o, p);\n      }\n      function _createSuper(Derived) {\n        var hasNativeReflectConstruct = _isNativeReflectConstruct();\n        return function _createSuperInternal() {\n          var Super = _getPrototypeOf(Derived),\n            result;\n          if (hasNativeReflectConstruct) {\n            var NewTarget = _getPrototypeOf(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n          } else {\n            result = Super.apply(this, arguments);\n          }\n          return _possibleConstructorReturn(this, result);\n        };\n      }\n      function _possibleConstructorReturn(self, call) {\n        if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n          return call;\n        }\n        return _assertThisInitialized(self);\n      }\n      function _assertThisInitialized(self) {\n        if (self === void 0) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n        return self;\n      }\n      function _isNativeReflectConstruct() {\n        if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n        if (Reflect.construct.sham) return false;\n        if (typeof Proxy === \"function\") return true;\n        try {\n          Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n          return true;\n        } catch (e) {\n          return false;\n        }\n      }\n      function _getPrototypeOf(o) {\n        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n          return o.__proto__ || Object.getPrototypeOf(o);\n        };\n        return _getPrototypeOf(o);\n      }\n      function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n        if (info.done) {\n          resolve(value);\n        } else {\n          Promise.resolve(value).then(_next, _throw);\n        }\n      }\n      function _asyncToGenerator(fn) {\n        return function () {\n          var self = this,\n            args = arguments;\n          return new Promise(function (resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n          });\n        };\n      }\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n      function _defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n      function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        return Constructor;\n      }\n      var DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\n      exports.DEFAULT_LINK_REL = DEFAULT_LINK_REL;\n      var SVG_NS = \"http://www.w3.org/2000/svg\";\n      var DOMCanvasFactory = /*#__PURE__*/function () {\n        function DOMCanvasFactory() {\n          _classCallCheck(this, DOMCanvasFactory);\n        }\n        _createClass(DOMCanvasFactory, [{\n          key: \"create\",\n          value: function create(width, height) {\n            if (width <= 0 || height <= 0) {\n              throw new Error(\"Invalid canvas size\");\n            }\n            var canvas = document.createElement(\"canvas\");\n            var context = canvas.getContext(\"2d\");\n            canvas.width = width;\n            canvas.height = height;\n            return {\n              canvas: canvas,\n              context: context\n            };\n          }\n        }, {\n          key: \"reset\",\n          value: function reset(canvasAndContext, width, height) {\n            if (!canvasAndContext.canvas) {\n              throw new Error(\"Canvas is not specified\");\n            }\n            if (width <= 0 || height <= 0) {\n              throw new Error(\"Invalid canvas size\");\n            }\n            canvasAndContext.canvas.width = width;\n            canvasAndContext.canvas.height = height;\n          }\n        }, {\n          key: \"destroy\",\n          value: function destroy(canvasAndContext) {\n            if (!canvasAndContext.canvas) {\n              throw new Error(\"Canvas is not specified\");\n            }\n            canvasAndContext.canvas.width = 0;\n            canvasAndContext.canvas.height = 0;\n            canvasAndContext.canvas = null;\n            canvasAndContext.context = null;\n          }\n        }]);\n        return DOMCanvasFactory;\n      }();\n      exports.DOMCanvasFactory = DOMCanvasFactory;\n      var DOMCMapReaderFactory = /*#__PURE__*/function () {\n        function DOMCMapReaderFactory(_ref) {\n          var _ref$baseUrl = _ref.baseUrl,\n            baseUrl = _ref$baseUrl === void 0 ? null : _ref$baseUrl,\n            _ref$isCompressed = _ref.isCompressed,\n            isCompressed = _ref$isCompressed === void 0 ? false : _ref$isCompressed;\n          _classCallCheck(this, DOMCMapReaderFactory);\n          this.baseUrl = baseUrl;\n          this.isCompressed = isCompressed;\n        }\n        _createClass(DOMCMapReaderFactory, [{\n          key: \"fetch\",\n          value: function (_fetch) {\n            function fetch(_x) {\n              return _fetch.apply(this, arguments);\n            }\n            fetch.toString = function () {\n              return _fetch.toString();\n            };\n            return fetch;\n          }( /*#__PURE__*/function () {\n            var _ref3 = _asyncToGenerator( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(_ref2) {\n              var _this = this;\n              var name, url, compressionType;\n              return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      name = _ref2.name;\n                      if (this.baseUrl) {\n                        _context2.next = 3;\n                        break;\n                      }\n                      throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that ' + 'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\n                    case 3:\n                      if (name) {\n                        _context2.next = 5;\n                        break;\n                      }\n                      throw new Error(\"CMap name must be specified.\");\n                    case 5:\n                      url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n                      compressionType = this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE;\n                      if (!(isFetchSupported() && isValidFetchUrl(url, document.baseURI))) {\n                        _context2.next = 9;\n                        break;\n                      }\n                      return _context2.abrupt(\"return\", fetch(url).then( /*#__PURE__*/function () {\n                        var _ref4 = _asyncToGenerator( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(response) {\n                          var cMapData;\n                          return _regenerator[\"default\"].wrap(function _callee$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  if (response.ok) {\n                                    _context.next = 2;\n                                    break;\n                                  }\n                                  throw new Error(response.statusText);\n                                case 2:\n                                  if (!_this.isCompressed) {\n                                    _context.next = 10;\n                                    break;\n                                  }\n                                  _context.t0 = Uint8Array;\n                                  _context.next = 6;\n                                  return response.arrayBuffer();\n                                case 6:\n                                  _context.t1 = _context.sent;\n                                  cMapData = new _context.t0(_context.t1);\n                                  _context.next = 15;\n                                  break;\n                                case 10:\n                                  _context.t2 = _util.stringToBytes;\n                                  _context.next = 13;\n                                  return response.text();\n                                case 13:\n                                  _context.t3 = _context.sent;\n                                  cMapData = (0, _context.t2)(_context.t3);\n                                case 15:\n                                  return _context.abrupt(\"return\", {\n                                    cMapData: cMapData,\n                                    compressionType: compressionType\n                                  });\n                                case 16:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, _callee);\n                        }));\n                        return function (_x3) {\n                          return _ref4.apply(this, arguments);\n                        };\n                      }())[\"catch\"](function (reason) {\n                        throw new Error(\"Unable to load \".concat(_this.isCompressed ? \"binary \" : \"\") + \"CMap at: \".concat(url));\n                      }));\n                    case 9:\n                      return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n                        var request = new XMLHttpRequest();\n                        request.open(\"GET\", url, true);\n                        if (_this.isCompressed) {\n                          request.responseType = \"arraybuffer\";\n                        }\n                        request.onreadystatechange = function () {\n                          if (request.readyState !== XMLHttpRequest.DONE) {\n                            return;\n                          }\n                          if (request.status === 200 || request.status === 0) {\n                            var cMapData;\n                            if (_this.isCompressed && request.response) {\n                              cMapData = new Uint8Array(request.response);\n                            } else if (!_this.isCompressed && request.responseText) {\n                              cMapData = (0, _util.stringToBytes)(request.responseText);\n                            }\n                            if (cMapData) {\n                              resolve({\n                                cMapData: cMapData,\n                                compressionType: compressionType\n                              });\n                              return;\n                            }\n                          }\n                          reject(new Error(request.statusText));\n                        };\n                        request.send(null);\n                      })[\"catch\"](function (reason) {\n                        throw new Error(\"Unable to load \".concat(_this.isCompressed ? \"binary \" : \"\") + \"CMap at: \".concat(url));\n                      }));\n                    case 10:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2, this);\n            }));\n            return function (_x2) {\n              return _ref3.apply(this, arguments);\n            };\n          }())\n        }]);\n        return DOMCMapReaderFactory;\n      }();\n      exports.DOMCMapReaderFactory = DOMCMapReaderFactory;\n      var DOMSVGFactory = /*#__PURE__*/function () {\n        function DOMSVGFactory() {\n          _classCallCheck(this, DOMSVGFactory);\n        }\n        _createClass(DOMSVGFactory, [{\n          key: \"create\",\n          value: function create(width, height) {\n            (0, _util.assert)(width > 0 && height > 0, \"Invalid SVG dimensions\");\n            var svg = document.createElementNS(SVG_NS, \"svg:svg\");\n            svg.setAttribute(\"version\", \"1.1\");\n            svg.setAttribute(\"width\", width + \"px\");\n            svg.setAttribute(\"height\", height + \"px\");\n            svg.setAttribute(\"preserveAspectRatio\", \"none\");\n            svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n            return svg;\n          }\n        }, {\n          key: \"createElement\",\n          value: function createElement(type) {\n            (0, _util.assert)(typeof type === \"string\", \"Invalid SVG element type\");\n            return document.createElementNS(SVG_NS, type);\n          }\n        }]);\n        return DOMSVGFactory;\n      }();\n      exports.DOMSVGFactory = DOMSVGFactory;\n      var PageViewport = /*#__PURE__*/function () {\n        function PageViewport(_ref5) {\n          var viewBox = _ref5.viewBox,\n            scale = _ref5.scale,\n            rotation = _ref5.rotation,\n            _ref5$offsetX = _ref5.offsetX,\n            offsetX = _ref5$offsetX === void 0 ? 0 : _ref5$offsetX,\n            _ref5$offsetY = _ref5.offsetY,\n            offsetY = _ref5$offsetY === void 0 ? 0 : _ref5$offsetY,\n            _ref5$dontFlip = _ref5.dontFlip,\n            dontFlip = _ref5$dontFlip === void 0 ? false : _ref5$dontFlip;\n          _classCallCheck(this, PageViewport);\n          this.viewBox = viewBox;\n          this.scale = scale;\n          this.rotation = rotation;\n          this.offsetX = offsetX;\n          this.offsetY = offsetY;\n          var centerX = (viewBox[2] + viewBox[0]) / 2;\n          var centerY = (viewBox[3] + viewBox[1]) / 2;\n          var rotateA, rotateB, rotateC, rotateD;\n          rotation = rotation % 360;\n          rotation = rotation < 0 ? rotation + 360 : rotation;\n          switch (rotation) {\n            case 180:\n              rotateA = -1;\n              rotateB = 0;\n              rotateC = 0;\n              rotateD = 1;\n              break;\n            case 90:\n              rotateA = 0;\n              rotateB = 1;\n              rotateC = 1;\n              rotateD = 0;\n              break;\n            case 270:\n              rotateA = 0;\n              rotateB = -1;\n              rotateC = -1;\n              rotateD = 0;\n              break;\n            case 0:\n              rotateA = 1;\n              rotateB = 0;\n              rotateC = 0;\n              rotateD = -1;\n              break;\n            default:\n              throw new Error(\"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\");\n          }\n          if (dontFlip) {\n            rotateC = -rotateC;\n            rotateD = -rotateD;\n          }\n          var offsetCanvasX, offsetCanvasY;\n          var width, height;\n          if (rotateA === 0) {\n            offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n            offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n            width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n            height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n          } else {\n            offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n            offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n            width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n            height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n          }\n          this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n          this.width = width;\n          this.height = height;\n        }\n        _createClass(PageViewport, [{\n          key: \"clone\",\n          value: function clone() {\n            var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n              _ref6$scale = _ref6.scale,\n              scale = _ref6$scale === void 0 ? this.scale : _ref6$scale,\n              _ref6$rotation = _ref6.rotation,\n              rotation = _ref6$rotation === void 0 ? this.rotation : _ref6$rotation,\n              _ref6$offsetX = _ref6.offsetX,\n              offsetX = _ref6$offsetX === void 0 ? this.offsetX : _ref6$offsetX,\n              _ref6$offsetY = _ref6.offsetY,\n              offsetY = _ref6$offsetY === void 0 ? this.offsetY : _ref6$offsetY,\n              _ref6$dontFlip = _ref6.dontFlip,\n              dontFlip = _ref6$dontFlip === void 0 ? false : _ref6$dontFlip;\n            return new PageViewport({\n              viewBox: this.viewBox.slice(),\n              scale: scale,\n              rotation: rotation,\n              offsetX: offsetX,\n              offsetY: offsetY,\n              dontFlip: dontFlip\n            });\n          }\n        }, {\n          key: \"convertToViewportPoint\",\n          value: function convertToViewportPoint(x, y) {\n            return _util.Util.applyTransform([x, y], this.transform);\n          }\n        }, {\n          key: \"convertToViewportRectangle\",\n          value: function convertToViewportRectangle(rect) {\n            var topLeft = _util.Util.applyTransform([rect[0], rect[1]], this.transform);\n            var bottomRight = _util.Util.applyTransform([rect[2], rect[3]], this.transform);\n            return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n          }\n        }, {\n          key: \"convertToPdfPoint\",\n          value: function convertToPdfPoint(x, y) {\n            return _util.Util.applyInverseTransform([x, y], this.transform);\n          }\n        }]);\n        return PageViewport;\n      }();\n      exports.PageViewport = PageViewport;\n      var RenderingCancelledException = /*#__PURE__*/function (_BaseException) {\n        _inherits(RenderingCancelledException, _BaseException);\n        var _super = _createSuper(RenderingCancelledException);\n        function RenderingCancelledException(msg, type) {\n          var _this2;\n          _classCallCheck(this, RenderingCancelledException);\n          _this2 = _super.call(this, msg);\n          _this2.type = type;\n          return _this2;\n        }\n        return RenderingCancelledException;\n      }(_util.BaseException);\n      exports.RenderingCancelledException = RenderingCancelledException;\n      var LinkTarget = {\n        NONE: 0,\n        SELF: 1,\n        BLANK: 2,\n        PARENT: 3,\n        TOP: 4\n      };\n      exports.LinkTarget = LinkTarget;\n      function addLinkAttributes(link) {\n        var _ref7 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          url = _ref7.url,\n          target = _ref7.target,\n          rel = _ref7.rel,\n          _ref7$enabled = _ref7.enabled,\n          enabled = _ref7$enabled === void 0 ? true : _ref7$enabled;\n        (0, _util.assert)(url && typeof url === \"string\", 'addLinkAttributes: A valid \"url\" parameter must provided.');\n        var urlNullRemoved = (0, _util.removeNullCharacters)(url);\n        if (enabled) {\n          link.href = link.title = urlNullRemoved;\n        } else {\n          link.href = \"\";\n          link.title = \"Disabled: \".concat(urlNullRemoved);\n          link.onclick = function () {\n            return false;\n          };\n        }\n        var targetStr = \"\";\n        switch (target) {\n          case LinkTarget.NONE:\n            break;\n          case LinkTarget.SELF:\n            targetStr = \"_self\";\n            break;\n          case LinkTarget.BLANK:\n            targetStr = \"_blank\";\n            break;\n          case LinkTarget.PARENT:\n            targetStr = \"_parent\";\n            break;\n          case LinkTarget.TOP:\n            targetStr = \"_top\";\n            break;\n        }\n        link.target = targetStr;\n        link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n      }\n      function getFilenameFromUrl(url) {\n        var anchor = url.indexOf(\"#\");\n        var query = url.indexOf(\"?\");\n        var end = Math.min(anchor > 0 ? anchor : url.length, query > 0 ? query : url.length);\n        return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n      }\n      var StatTimer = /*#__PURE__*/function () {\n        function StatTimer() {\n          _classCallCheck(this, StatTimer);\n          this.started = Object.create(null);\n          this.times = [];\n        }\n        _createClass(StatTimer, [{\n          key: \"time\",\n          value: function time(name) {\n            if (name in this.started) {\n              (0, _util.warn)(\"Timer is already running for \".concat(name));\n            }\n            this.started[name] = Date.now();\n          }\n        }, {\n          key: \"timeEnd\",\n          value: function timeEnd(name) {\n            if (!(name in this.started)) {\n              (0, _util.warn)(\"Timer has not been started for \".concat(name));\n            }\n            this.times.push({\n              name: name,\n              start: this.started[name],\n              end: Date.now()\n            });\n            delete this.started[name];\n          }\n        }, {\n          key: \"toString\",\n          value: function toString() {\n            var outBuf = [];\n            var longest = 0;\n            var _iterator = _createForOfIteratorHelper(this.times),\n              _step;\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var time = _step.value;\n                var name = time.name;\n                if (name.length > longest) {\n                  longest = name.length;\n                }\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n            var _iterator2 = _createForOfIteratorHelper(this.times),\n              _step2;\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var _time = _step2.value;\n                var duration = _time.end - _time.start;\n                outBuf.push(\"\".concat(_time.name.padEnd(longest), \" \").concat(duration, \"ms\\n\"));\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n            return outBuf.join(\"\");\n          }\n        }]);\n        return StatTimer;\n      }();\n      exports.StatTimer = StatTimer;\n      function isFetchSupported() {\n        return typeof fetch !== \"undefined\" && typeof Response !== \"undefined\" && \"body\" in Response.prototype && typeof ReadableStream !== \"undefined\";\n      }\n      function isValidFetchUrl(url, baseUrl) {\n        try {\n          var _ref8 = baseUrl ? new URL(url, baseUrl) : new URL(url),\n            protocol = _ref8.protocol;\n          return protocol === \"http:\" || protocol === \"https:\";\n        } catch (ex) {\n          return false;\n        }\n      }\n      function loadScript(src) {\n        return new Promise(function (resolve, reject) {\n          var script = document.createElement(\"script\");\n          script.src = src;\n          script.onload = resolve;\n          script.onerror = function () {\n            reject(new Error(\"Cannot load script at: \".concat(script.src)));\n          };\n          (document.head || document.documentElement).appendChild(script);\n        });\n      }\n      function deprecated(details) {\n        console.log(\"Deprecated API usage: \" + details);\n      }\n      var pdfDateStringRegex;\n      var PDFDateString = /*#__PURE__*/function () {\n        function PDFDateString() {\n          _classCallCheck(this, PDFDateString);\n        }\n        _createClass(PDFDateString, null, [{\n          key: \"toDateObject\",\n          value: function toDateObject(input) {\n            if (!input || !(0, _util.isString)(input)) {\n              return null;\n            }\n            if (!pdfDateStringRegex) {\n              pdfDateStringRegex = new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\");\n            }\n            var matches = pdfDateStringRegex.exec(input);\n            if (!matches) {\n              return null;\n            }\n            var year = parseInt(matches[1], 10);\n            var month = parseInt(matches[2], 10);\n            month = month >= 1 && month <= 12 ? month - 1 : 0;\n            var day = parseInt(matches[3], 10);\n            day = day >= 1 && day <= 31 ? day : 1;\n            var hour = parseInt(matches[4], 10);\n            hour = hour >= 0 && hour <= 23 ? hour : 0;\n            var minute = parseInt(matches[5], 10);\n            minute = minute >= 0 && minute <= 59 ? minute : 0;\n            var second = parseInt(matches[6], 10);\n            second = second >= 0 && second <= 59 ? second : 0;\n            var universalTimeRelation = matches[7] || \"Z\";\n            var offsetHour = parseInt(matches[8], 10);\n            offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n            var offsetMinute = parseInt(matches[9], 10) || 0;\n            offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n            if (universalTimeRelation === \"-\") {\n              hour += offsetHour;\n              minute += offsetMinute;\n            } else if (universalTimeRelation === \"+\") {\n              hour -= offsetHour;\n              minute -= offsetMinute;\n            }\n            return new Date(Date.UTC(year, month, day, hour, minute, second));\n          }\n        }]);\n        return PDFDateString;\n      }();\n      exports.PDFDateString = PDFDateString;\n\n      /***/\n    }, /* 2 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      module.exports = __w_pdfjs_require__(3);\n\n      /***/\n    }, /* 3 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      /* WEBPACK VAR INJECTION */\n      (function (module) {\n        function _typeof(obj) {\n          \"@babel/helpers - typeof\";\n\n          if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n            _typeof = function _typeof(obj) {\n              return typeof obj;\n            };\n          } else {\n            _typeof = function _typeof(obj) {\n              return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            };\n          }\n          return _typeof(obj);\n        }\n        var runtime = function (exports) {\n          \"use strict\";\n\n          var Op = Object.prototype;\n          var hasOwn = Op.hasOwnProperty;\n          var undefined;\n          var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n          var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n          var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n          var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n          function wrap(innerFn, outerFn, self, tryLocsList) {\n            var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n            var generator = Object.create(protoGenerator.prototype);\n            var context = new Context(tryLocsList || []);\n            generator._invoke = makeInvokeMethod(innerFn, self, context);\n            return generator;\n          }\n          exports.wrap = wrap;\n          function tryCatch(fn, obj, arg) {\n            try {\n              return {\n                type: \"normal\",\n                arg: fn.call(obj, arg)\n              };\n            } catch (err) {\n              return {\n                type: \"throw\",\n                arg: err\n              };\n            }\n          }\n          var GenStateSuspendedStart = \"suspendedStart\";\n          var GenStateSuspendedYield = \"suspendedYield\";\n          var GenStateExecuting = \"executing\";\n          var GenStateCompleted = \"completed\";\n          var ContinueSentinel = {};\n          function Generator() {}\n          function GeneratorFunction() {}\n          function GeneratorFunctionPrototype() {}\n          var IteratorPrototype = {};\n          IteratorPrototype[iteratorSymbol] = function () {\n            return this;\n          };\n          var getProto = Object.getPrototypeOf;\n          var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n          if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n            IteratorPrototype = NativeIteratorPrototype;\n          }\n          var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n          GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n          GeneratorFunctionPrototype.constructor = GeneratorFunction;\n          GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\";\n          function defineIteratorMethods(prototype) {\n            [\"next\", \"throw\", \"return\"].forEach(function (method) {\n              prototype[method] = function (arg) {\n                return this._invoke(method, arg);\n              };\n            });\n          }\n          exports.isGeneratorFunction = function (genFun) {\n            var ctor = typeof genFun === \"function\" && genFun.constructor;\n            return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n          };\n          exports.mark = function (genFun) {\n            if (Object.setPrototypeOf) {\n              Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n            } else {\n              genFun.__proto__ = GeneratorFunctionPrototype;\n              if (!(toStringTagSymbol in genFun)) {\n                genFun[toStringTagSymbol] = \"GeneratorFunction\";\n              }\n            }\n            genFun.prototype = Object.create(Gp);\n            return genFun;\n          };\n          exports.awrap = function (arg) {\n            return {\n              __await: arg\n            };\n          };\n          function AsyncIterator(generator, PromiseImpl) {\n            function invoke(method, arg, resolve, reject) {\n              var record = tryCatch(generator[method], generator, arg);\n              if (record.type === \"throw\") {\n                reject(record.arg);\n              } else {\n                var result = record.arg;\n                var value = result.value;\n                if (value && _typeof(value) === \"object\" && hasOwn.call(value, \"__await\")) {\n                  return PromiseImpl.resolve(value.__await).then(function (value) {\n                    invoke(\"next\", value, resolve, reject);\n                  }, function (err) {\n                    invoke(\"throw\", err, resolve, reject);\n                  });\n                }\n                return PromiseImpl.resolve(value).then(function (unwrapped) {\n                  result.value = unwrapped;\n                  resolve(result);\n                }, function (error) {\n                  return invoke(\"throw\", error, resolve, reject);\n                });\n              }\n            }\n            var previousPromise;\n            function enqueue(method, arg) {\n              function callInvokeWithMethodAndArg() {\n                return new PromiseImpl(function (resolve, reject) {\n                  invoke(method, arg, resolve, reject);\n                });\n              }\n              return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n            }\n            this._invoke = enqueue;\n          }\n          defineIteratorMethods(AsyncIterator.prototype);\n          AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n            return this;\n          };\n          exports.AsyncIterator = AsyncIterator;\n          exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n            if (PromiseImpl === void 0) PromiseImpl = Promise;\n            var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n            return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n              return result.done ? result.value : iter.next();\n            });\n          };\n          function makeInvokeMethod(innerFn, self, context) {\n            var state = GenStateSuspendedStart;\n            return function invoke(method, arg) {\n              if (state === GenStateExecuting) {\n                throw new Error(\"Generator is already running\");\n              }\n              if (state === GenStateCompleted) {\n                if (method === \"throw\") {\n                  throw arg;\n                }\n                return doneResult();\n              }\n              context.method = method;\n              context.arg = arg;\n              while (true) {\n                var delegate = context.delegate;\n                if (delegate) {\n                  var delegateResult = maybeInvokeDelegate(delegate, context);\n                  if (delegateResult) {\n                    if (delegateResult === ContinueSentinel) continue;\n                    return delegateResult;\n                  }\n                }\n                if (context.method === \"next\") {\n                  context.sent = context._sent = context.arg;\n                } else if (context.method === \"throw\") {\n                  if (state === GenStateSuspendedStart) {\n                    state = GenStateCompleted;\n                    throw context.arg;\n                  }\n                  context.dispatchException(context.arg);\n                } else if (context.method === \"return\") {\n                  context.abrupt(\"return\", context.arg);\n                }\n                state = GenStateExecuting;\n                var record = tryCatch(innerFn, self, context);\n                if (record.type === \"normal\") {\n                  state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n                  if (record.arg === ContinueSentinel) {\n                    continue;\n                  }\n                  return {\n                    value: record.arg,\n                    done: context.done\n                  };\n                } else if (record.type === \"throw\") {\n                  state = GenStateCompleted;\n                  context.method = \"throw\";\n                  context.arg = record.arg;\n                }\n              }\n            };\n          }\n          function maybeInvokeDelegate(delegate, context) {\n            var method = delegate.iterator[context.method];\n            if (method === undefined) {\n              context.delegate = null;\n              if (context.method === \"throw\") {\n                if (delegate.iterator[\"return\"]) {\n                  context.method = \"return\";\n                  context.arg = undefined;\n                  maybeInvokeDelegate(delegate, context);\n                  if (context.method === \"throw\") {\n                    return ContinueSentinel;\n                  }\n                }\n                context.method = \"throw\";\n                context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n              }\n              return ContinueSentinel;\n            }\n            var record = tryCatch(method, delegate.iterator, context.arg);\n            if (record.type === \"throw\") {\n              context.method = \"throw\";\n              context.arg = record.arg;\n              context.delegate = null;\n              return ContinueSentinel;\n            }\n            var info = record.arg;\n            if (!info) {\n              context.method = \"throw\";\n              context.arg = new TypeError(\"iterator result is not an object\");\n              context.delegate = null;\n              return ContinueSentinel;\n            }\n            if (info.done) {\n              context[delegate.resultName] = info.value;\n              context.next = delegate.nextLoc;\n              if (context.method !== \"return\") {\n                context.method = \"next\";\n                context.arg = undefined;\n              }\n            } else {\n              return info;\n            }\n            context.delegate = null;\n            return ContinueSentinel;\n          }\n          defineIteratorMethods(Gp);\n          Gp[toStringTagSymbol] = \"Generator\";\n          Gp[iteratorSymbol] = function () {\n            return this;\n          };\n          Gp.toString = function () {\n            return \"[object Generator]\";\n          };\n          function pushTryEntry(locs) {\n            var entry = {\n              tryLoc: locs[0]\n            };\n            if (1 in locs) {\n              entry.catchLoc = locs[1];\n            }\n            if (2 in locs) {\n              entry.finallyLoc = locs[2];\n              entry.afterLoc = locs[3];\n            }\n            this.tryEntries.push(entry);\n          }\n          function resetTryEntry(entry) {\n            var record = entry.completion || {};\n            record.type = \"normal\";\n            delete record.arg;\n            entry.completion = record;\n          }\n          function Context(tryLocsList) {\n            this.tryEntries = [{\n              tryLoc: \"root\"\n            }];\n            tryLocsList.forEach(pushTryEntry, this);\n            this.reset(true);\n          }\n          exports.keys = function (object) {\n            var keys = [];\n            for (var key in object) {\n              keys.push(key);\n            }\n            keys.reverse();\n            return function next() {\n              while (keys.length) {\n                var key = keys.pop();\n                if (key in object) {\n                  next.value = key;\n                  next.done = false;\n                  return next;\n                }\n              }\n              next.done = true;\n              return next;\n            };\n          };\n          function values(iterable) {\n            if (iterable) {\n              var iteratorMethod = iterable[iteratorSymbol];\n              if (iteratorMethod) {\n                return iteratorMethod.call(iterable);\n              }\n              if (typeof iterable.next === \"function\") {\n                return iterable;\n              }\n              if (!isNaN(iterable.length)) {\n                var i = -1,\n                  next = function next() {\n                    while (++i < iterable.length) {\n                      if (hasOwn.call(iterable, i)) {\n                        next.value = iterable[i];\n                        next.done = false;\n                        return next;\n                      }\n                    }\n                    next.value = undefined;\n                    next.done = true;\n                    return next;\n                  };\n                return next.next = next;\n              }\n            }\n            return {\n              next: doneResult\n            };\n          }\n          exports.values = values;\n          function doneResult() {\n            return {\n              value: undefined,\n              done: true\n            };\n          }\n          Context.prototype = {\n            constructor: Context,\n            reset: function reset(skipTempReset) {\n              this.prev = 0;\n              this.next = 0;\n              this.sent = this._sent = undefined;\n              this.done = false;\n              this.delegate = null;\n              this.method = \"next\";\n              this.arg = undefined;\n              this.tryEntries.forEach(resetTryEntry);\n              if (!skipTempReset) {\n                for (var name in this) {\n                  if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n                    this[name] = undefined;\n                  }\n                }\n              }\n            },\n            stop: function stop() {\n              this.done = true;\n              var rootEntry = this.tryEntries[0];\n              var rootRecord = rootEntry.completion;\n              if (rootRecord.type === \"throw\") {\n                throw rootRecord.arg;\n              }\n              return this.rval;\n            },\n            dispatchException: function dispatchException(exception) {\n              if (this.done) {\n                throw exception;\n              }\n              var context = this;\n              function handle(loc, caught) {\n                record.type = \"throw\";\n                record.arg = exception;\n                context.next = loc;\n                if (caught) {\n                  context.method = \"next\";\n                  context.arg = undefined;\n                }\n                return !!caught;\n              }\n              for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n                var entry = this.tryEntries[i];\n                var record = entry.completion;\n                if (entry.tryLoc === \"root\") {\n                  return handle(\"end\");\n                }\n                if (entry.tryLoc <= this.prev) {\n                  var hasCatch = hasOwn.call(entry, \"catchLoc\");\n                  var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n                  if (hasCatch && hasFinally) {\n                    if (this.prev < entry.catchLoc) {\n                      return handle(entry.catchLoc, true);\n                    } else if (this.prev < entry.finallyLoc) {\n                      return handle(entry.finallyLoc);\n                    }\n                  } else if (hasCatch) {\n                    if (this.prev < entry.catchLoc) {\n                      return handle(entry.catchLoc, true);\n                    }\n                  } else if (hasFinally) {\n                    if (this.prev < entry.finallyLoc) {\n                      return handle(entry.finallyLoc);\n                    }\n                  } else {\n                    throw new Error(\"try statement without catch or finally\");\n                  }\n                }\n              }\n            },\n            abrupt: function abrupt(type, arg) {\n              for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n                var entry = this.tryEntries[i];\n                if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n                  var finallyEntry = entry;\n                  break;\n                }\n              }\n              if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n                finallyEntry = null;\n              }\n              var record = finallyEntry ? finallyEntry.completion : {};\n              record.type = type;\n              record.arg = arg;\n              if (finallyEntry) {\n                this.method = \"next\";\n                this.next = finallyEntry.finallyLoc;\n                return ContinueSentinel;\n              }\n              return this.complete(record);\n            },\n            complete: function complete(record, afterLoc) {\n              if (record.type === \"throw\") {\n                throw record.arg;\n              }\n              if (record.type === \"break\" || record.type === \"continue\") {\n                this.next = record.arg;\n              } else if (record.type === \"return\") {\n                this.rval = this.arg = record.arg;\n                this.method = \"return\";\n                this.next = \"end\";\n              } else if (record.type === \"normal\" && afterLoc) {\n                this.next = afterLoc;\n              }\n              return ContinueSentinel;\n            },\n            finish: function finish(finallyLoc) {\n              for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n                var entry = this.tryEntries[i];\n                if (entry.finallyLoc === finallyLoc) {\n                  this.complete(entry.completion, entry.afterLoc);\n                  resetTryEntry(entry);\n                  return ContinueSentinel;\n                }\n              }\n            },\n            \"catch\": function _catch(tryLoc) {\n              for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n                var entry = this.tryEntries[i];\n                if (entry.tryLoc === tryLoc) {\n                  var record = entry.completion;\n                  if (record.type === \"throw\") {\n                    var thrown = record.arg;\n                    resetTryEntry(entry);\n                  }\n                  return thrown;\n                }\n              }\n              throw new Error(\"illegal catch attempt\");\n            },\n            delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n              this.delegate = {\n                iterator: values(iterable),\n                resultName: resultName,\n                nextLoc: nextLoc\n              };\n              if (this.method === \"next\") {\n                this.arg = undefined;\n              }\n              return ContinueSentinel;\n            }\n          };\n          return exports;\n        }((false ? undefined : _typeof(module)) === \"object\" ? module.exports : {});\n        try {\n          regeneratorRuntime = runtime;\n        } catch (accidentalStrictMode) {\n          Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n        }\n        /* WEBPACK VAR INJECTION */\n      }).call(this, __w_pdfjs_require__(4)(module));\n\n      /***/\n    }, /* 4 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      module.exports = function (module) {\n        if (!module.webpackPolyfill) {\n          module.deprecate = function () {};\n          module.paths = [];\n          if (!module.children) module.children = [];\n          Object.defineProperty(module, \"loaded\", {\n            enumerable: true,\n            get: function get() {\n              return module.l;\n            }\n          });\n          Object.defineProperty(module, \"id\", {\n            enumerable: true,\n            get: function get() {\n              return module.i;\n            }\n          });\n          module.webpackPolyfill = 1;\n        }\n        return module;\n      };\n\n      /***/\n    }, /* 5 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.arrayByteLength = arrayByteLength;\n      exports.arraysToBytes = arraysToBytes;\n      exports.assert = assert;\n      exports.bytesToString = bytesToString;\n      exports.createPromiseCapability = createPromiseCapability;\n      exports.getVerbosityLevel = getVerbosityLevel;\n      exports.info = info;\n      exports.isArrayBuffer = isArrayBuffer;\n      exports.isArrayEqual = isArrayEqual;\n      exports.isBool = isBool;\n      exports.isEmptyObj = isEmptyObj;\n      exports.isNum = isNum;\n      exports.isString = isString;\n      exports.isSameOrigin = isSameOrigin;\n      exports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n      exports.removeNullCharacters = removeNullCharacters;\n      exports.setVerbosityLevel = setVerbosityLevel;\n      exports.shadow = shadow;\n      exports.string32 = string32;\n      exports.stringToBytes = stringToBytes;\n      exports.stringToPDFString = stringToPDFString;\n      exports.stringToUTF8String = stringToUTF8String;\n      exports.utf8StringToString = utf8StringToString;\n      exports.warn = warn;\n      exports.unreachable = unreachable;\n      exports.IsEvalSupportedCached = exports.IsLittleEndianCached = exports.createObjectURL = exports.FormatError = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.MissingPDFException = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationStateModelType = exports.AnnotationReviewState = exports.AnnotationReplyType = exports.AnnotationMarkedState = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VerbosityLevel = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = exports.BaseException = void 0;\n      __w_pdfjs_require__(6);\n      function _defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n      function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        return Constructor;\n      }\n      function _typeof(obj) {\n        \"@babel/helpers - typeof\";\n\n        if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n          _typeof = function _typeof(obj) {\n            return typeof obj;\n          };\n        } else {\n          _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n          };\n        }\n        return _typeof(obj);\n      }\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function\");\n        }\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) _setPrototypeOf(subClass, superClass);\n      }\n      function _setPrototypeOf(o, p) {\n        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n          o.__proto__ = p;\n          return o;\n        };\n        return _setPrototypeOf(o, p);\n      }\n      function _createSuper(Derived) {\n        var hasNativeReflectConstruct = _isNativeReflectConstruct();\n        return function _createSuperInternal() {\n          var Super = _getPrototypeOf(Derived),\n            result;\n          if (hasNativeReflectConstruct) {\n            var NewTarget = _getPrototypeOf(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n          } else {\n            result = Super.apply(this, arguments);\n          }\n          return _possibleConstructorReturn(this, result);\n        };\n      }\n      function _possibleConstructorReturn(self, call) {\n        if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n          return call;\n        }\n        return _assertThisInitialized(self);\n      }\n      function _assertThisInitialized(self) {\n        if (self === void 0) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n        return self;\n      }\n      function _isNativeReflectConstruct() {\n        if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n        if (Reflect.construct.sham) return false;\n        if (typeof Proxy === \"function\") return true;\n        try {\n          Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n          return true;\n        } catch (e) {\n          return false;\n        }\n      }\n      function _getPrototypeOf(o) {\n        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n          return o.__proto__ || Object.getPrototypeOf(o);\n        };\n        return _getPrototypeOf(o);\n      }\n      var IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n      exports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n      var FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n      exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n      var PermissionFlag = {\n        PRINT: 0x04,\n        MODIFY_CONTENTS: 0x08,\n        COPY: 0x10,\n        MODIFY_ANNOTATIONS: 0x20,\n        FILL_INTERACTIVE_FORMS: 0x100,\n        COPY_FOR_ACCESSIBILITY: 0x200,\n        ASSEMBLE: 0x400,\n        PRINT_HIGH_QUALITY: 0x800\n      };\n      exports.PermissionFlag = PermissionFlag;\n      var TextRenderingMode = {\n        FILL: 0,\n        STROKE: 1,\n        FILL_STROKE: 2,\n        INVISIBLE: 3,\n        FILL_ADD_TO_PATH: 4,\n        STROKE_ADD_TO_PATH: 5,\n        FILL_STROKE_ADD_TO_PATH: 6,\n        ADD_TO_PATH: 7,\n        FILL_STROKE_MASK: 3,\n        ADD_TO_PATH_FLAG: 4\n      };\n      exports.TextRenderingMode = TextRenderingMode;\n      var ImageKind = {\n        GRAYSCALE_1BPP: 1,\n        RGB_24BPP: 2,\n        RGBA_32BPP: 3\n      };\n      exports.ImageKind = ImageKind;\n      var AnnotationType = {\n        TEXT: 1,\n        LINK: 2,\n        FREETEXT: 3,\n        LINE: 4,\n        SQUARE: 5,\n        CIRCLE: 6,\n        POLYGON: 7,\n        POLYLINE: 8,\n        HIGHLIGHT: 9,\n        UNDERLINE: 10,\n        SQUIGGLY: 11,\n        STRIKEOUT: 12,\n        STAMP: 13,\n        CARET: 14,\n        INK: 15,\n        POPUP: 16,\n        FILEATTACHMENT: 17,\n        SOUND: 18,\n        MOVIE: 19,\n        WIDGET: 20,\n        SCREEN: 21,\n        PRINTERMARK: 22,\n        TRAPNET: 23,\n        WATERMARK: 24,\n        THREED: 25,\n        REDACT: 26\n      };\n      exports.AnnotationType = AnnotationType;\n      var AnnotationStateModelType = {\n        MARKED: \"Marked\",\n        REVIEW: \"Review\"\n      };\n      exports.AnnotationStateModelType = AnnotationStateModelType;\n      var AnnotationMarkedState = {\n        MARKED: \"Marked\",\n        UNMARKED: \"Unmarked\"\n      };\n      exports.AnnotationMarkedState = AnnotationMarkedState;\n      var AnnotationReviewState = {\n        ACCEPTED: \"Accepted\",\n        REJECTED: \"Rejected\",\n        CANCELLED: \"Cancelled\",\n        COMPLETED: \"Completed\",\n        NONE: \"None\"\n      };\n      exports.AnnotationReviewState = AnnotationReviewState;\n      var AnnotationReplyType = {\n        GROUP: \"Group\",\n        REPLY: \"R\"\n      };\n      exports.AnnotationReplyType = AnnotationReplyType;\n      var AnnotationFlag = {\n        INVISIBLE: 0x01,\n        HIDDEN: 0x02,\n        PRINT: 0x04,\n        NOZOOM: 0x08,\n        NOROTATE: 0x10,\n        NOVIEW: 0x20,\n        READONLY: 0x40,\n        LOCKED: 0x80,\n        TOGGLENOVIEW: 0x100,\n        LOCKEDCONTENTS: 0x200\n      };\n      exports.AnnotationFlag = AnnotationFlag;\n      var AnnotationFieldFlag = {\n        READONLY: 0x0000001,\n        REQUIRED: 0x0000002,\n        NOEXPORT: 0x0000004,\n        MULTILINE: 0x0001000,\n        PASSWORD: 0x0002000,\n        NOTOGGLETOOFF: 0x0004000,\n        RADIO: 0x0008000,\n        PUSHBUTTON: 0x0010000,\n        COMBO: 0x0020000,\n        EDIT: 0x0040000,\n        SORT: 0x0080000,\n        FILESELECT: 0x0100000,\n        MULTISELECT: 0x0200000,\n        DONOTSPELLCHECK: 0x0400000,\n        DONOTSCROLL: 0x0800000,\n        COMB: 0x1000000,\n        RICHTEXT: 0x2000000,\n        RADIOSINUNISON: 0x2000000,\n        COMMITONSELCHANGE: 0x4000000\n      };\n      exports.AnnotationFieldFlag = AnnotationFieldFlag;\n      var AnnotationBorderStyleType = {\n        SOLID: 1,\n        DASHED: 2,\n        BEVELED: 3,\n        INSET: 4,\n        UNDERLINE: 5\n      };\n      exports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n      var StreamType = {\n        UNKNOWN: \"UNKNOWN\",\n        FLATE: \"FLATE\",\n        LZW: \"LZW\",\n        DCT: \"DCT\",\n        JPX: \"JPX\",\n        JBIG: \"JBIG\",\n        A85: \"A85\",\n        AHX: \"AHX\",\n        CCF: \"CCF\",\n        RLX: \"RLX\"\n      };\n      exports.StreamType = StreamType;\n      var FontType = {\n        UNKNOWN: \"UNKNOWN\",\n        TYPE1: \"TYPE1\",\n        TYPE1C: \"TYPE1C\",\n        CIDFONTTYPE0: \"CIDFONTTYPE0\",\n        CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n        TRUETYPE: \"TRUETYPE\",\n        CIDFONTTYPE2: \"CIDFONTTYPE2\",\n        TYPE3: \"TYPE3\",\n        OPENTYPE: \"OPENTYPE\",\n        TYPE0: \"TYPE0\",\n        MMTYPE1: \"MMTYPE1\"\n      };\n      exports.FontType = FontType;\n      var VerbosityLevel = {\n        ERRORS: 0,\n        WARNINGS: 1,\n        INFOS: 5\n      };\n      exports.VerbosityLevel = VerbosityLevel;\n      var CMapCompressionType = {\n        NONE: 0,\n        BINARY: 1,\n        STREAM: 2\n      };\n      exports.CMapCompressionType = CMapCompressionType;\n      var OPS = {\n        dependency: 1,\n        setLineWidth: 2,\n        setLineCap: 3,\n        setLineJoin: 4,\n        setMiterLimit: 5,\n        setDash: 6,\n        setRenderingIntent: 7,\n        setFlatness: 8,\n        setGState: 9,\n        save: 10,\n        restore: 11,\n        transform: 12,\n        moveTo: 13,\n        lineTo: 14,\n        curveTo: 15,\n        curveTo2: 16,\n        curveTo3: 17,\n        closePath: 18,\n        rectangle: 19,\n        stroke: 20,\n        closeStroke: 21,\n        fill: 22,\n        eoFill: 23,\n        fillStroke: 24,\n        eoFillStroke: 25,\n        closeFillStroke: 26,\n        closeEOFillStroke: 27,\n        endPath: 28,\n        clip: 29,\n        eoClip: 30,\n        beginText: 31,\n        endText: 32,\n        setCharSpacing: 33,\n        setWordSpacing: 34,\n        setHScale: 35,\n        setLeading: 36,\n        setFont: 37,\n        setTextRenderingMode: 38,\n        setTextRise: 39,\n        moveText: 40,\n        setLeadingMoveText: 41,\n        setTextMatrix: 42,\n        nextLine: 43,\n        showText: 44,\n        showSpacedText: 45,\n        nextLineShowText: 46,\n        nextLineSetSpacingShowText: 47,\n        setCharWidth: 48,\n        setCharWidthAndBounds: 49,\n        setStrokeColorSpace: 50,\n        setFillColorSpace: 51,\n        setStrokeColor: 52,\n        setStrokeColorN: 53,\n        setFillColor: 54,\n        setFillColorN: 55,\n        setStrokeGray: 56,\n        setFillGray: 57,\n        setStrokeRGBColor: 58,\n        setFillRGBColor: 59,\n        setStrokeCMYKColor: 60,\n        setFillCMYKColor: 61,\n        shadingFill: 62,\n        beginInlineImage: 63,\n        beginImageData: 64,\n        endInlineImage: 65,\n        paintXObject: 66,\n        markPoint: 67,\n        markPointProps: 68,\n        beginMarkedContent: 69,\n        beginMarkedContentProps: 70,\n        endMarkedContent: 71,\n        beginCompat: 72,\n        endCompat: 73,\n        paintFormXObjectBegin: 74,\n        paintFormXObjectEnd: 75,\n        beginGroup: 76,\n        endGroup: 77,\n        beginAnnotations: 78,\n        endAnnotations: 79,\n        beginAnnotation: 80,\n        endAnnotation: 81,\n        paintJpegXObject: 82,\n        paintImageMaskXObject: 83,\n        paintImageMaskXObjectGroup: 84,\n        paintImageXObject: 85,\n        paintInlineImageXObject: 86,\n        paintInlineImageXObjectGroup: 87,\n        paintImageXObjectRepeat: 88,\n        paintImageMaskXObjectRepeat: 89,\n        paintSolidColorImageMask: 90,\n        constructPath: 91\n      };\n      exports.OPS = OPS;\n      var UNSUPPORTED_FEATURES = {\n        unknown: \"unknown\",\n        forms: \"forms\",\n        javaScript: \"javaScript\",\n        smask: \"smask\",\n        shadingPattern: \"shadingPattern\",\n        font: \"font\",\n        errorTilingPattern: \"errorTilingPattern\",\n        errorExtGState: \"errorExtGState\",\n        errorXObject: \"errorXObject\",\n        errorFontLoadType3: \"errorFontLoadType3\",\n        errorFontState: \"errorFontState\",\n        errorFontMissing: \"errorFontMissing\",\n        errorFontTranslate: \"errorFontTranslate\",\n        errorColorSpace: \"errorColorSpace\",\n        errorOperatorList: \"errorOperatorList\",\n        errorFontToUnicode: \"errorFontToUnicode\",\n        errorFontLoadNative: \"errorFontLoadNative\",\n        errorFontGetPath: \"errorFontGetPath\"\n      };\n      exports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\n      var PasswordResponses = {\n        NEED_PASSWORD: 1,\n        INCORRECT_PASSWORD: 2\n      };\n      exports.PasswordResponses = PasswordResponses;\n      var verbosity = VerbosityLevel.WARNINGS;\n      function setVerbosityLevel(level) {\n        if (Number.isInteger(level)) {\n          verbosity = level;\n        }\n      }\n      function getVerbosityLevel() {\n        return verbosity;\n      }\n      function info(msg) {\n        if (verbosity >= VerbosityLevel.INFOS) {\n          console.log(\"Info: \".concat(msg));\n        }\n      }\n      function warn(msg) {\n        if (verbosity >= VerbosityLevel.WARNINGS) {\n          console.log(\"Warning: \".concat(msg));\n        }\n      }\n      function unreachable(msg) {\n        throw new Error(msg);\n      }\n      function assert(cond, msg) {\n        if (!cond) {\n          unreachable(msg);\n        }\n      }\n      function isSameOrigin(baseUrl, otherUrl) {\n        var base;\n        try {\n          base = new URL(baseUrl);\n          if (!base.origin || base.origin === \"null\") {\n            return false;\n          }\n        } catch (e) {\n          return false;\n        }\n        var other = new URL(otherUrl, base);\n        return base.origin === other.origin;\n      }\n      function _isValidProtocol(url) {\n        if (!url) {\n          return false;\n        }\n        switch (url.protocol) {\n          case \"http:\":\n          case \"https:\":\n          case \"ftp:\":\n          case \"mailto:\":\n          case \"tel:\":\n            return true;\n          default:\n            return false;\n        }\n      }\n      function createValidAbsoluteUrl(url, baseUrl) {\n        if (!url) {\n          return null;\n        }\n        try {\n          var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n          if (_isValidProtocol(absoluteUrl)) {\n            return absoluteUrl;\n          }\n        } catch (ex) {}\n        return null;\n      }\n      function shadow(obj, prop, value) {\n        Object.defineProperty(obj, prop, {\n          value: value,\n          enumerable: true,\n          configurable: true,\n          writable: false\n        });\n        return value;\n      }\n      var BaseException = function BaseExceptionClosure() {\n        function BaseException(message) {\n          if (this.constructor === BaseException) {\n            unreachable(\"Cannot initialize BaseException.\");\n          }\n          this.message = message;\n          this.name = this.constructor.name;\n        }\n        BaseException.prototype = new Error();\n        BaseException.constructor = BaseException;\n        return BaseException;\n      }();\n      exports.BaseException = BaseException;\n      var PasswordException = /*#__PURE__*/function (_BaseException) {\n        _inherits(PasswordException, _BaseException);\n        var _super = _createSuper(PasswordException);\n        function PasswordException(msg, code) {\n          var _this;\n          _classCallCheck(this, PasswordException);\n          _this = _super.call(this, msg);\n          _this.code = code;\n          return _this;\n        }\n        return PasswordException;\n      }(BaseException);\n      exports.PasswordException = PasswordException;\n      var UnknownErrorException = /*#__PURE__*/function (_BaseException2) {\n        _inherits(UnknownErrorException, _BaseException2);\n        var _super2 = _createSuper(UnknownErrorException);\n        function UnknownErrorException(msg, details) {\n          var _this2;\n          _classCallCheck(this, UnknownErrorException);\n          _this2 = _super2.call(this, msg);\n          _this2.details = details;\n          return _this2;\n        }\n        return UnknownErrorException;\n      }(BaseException);\n      exports.UnknownErrorException = UnknownErrorException;\n      var InvalidPDFException = /*#__PURE__*/function (_BaseException3) {\n        _inherits(InvalidPDFException, _BaseException3);\n        var _super3 = _createSuper(InvalidPDFException);\n        function InvalidPDFException() {\n          _classCallCheck(this, InvalidPDFException);\n          return _super3.apply(this, arguments);\n        }\n        return InvalidPDFException;\n      }(BaseException);\n      exports.InvalidPDFException = InvalidPDFException;\n      var MissingPDFException = /*#__PURE__*/function (_BaseException4) {\n        _inherits(MissingPDFException, _BaseException4);\n        var _super4 = _createSuper(MissingPDFException);\n        function MissingPDFException() {\n          _classCallCheck(this, MissingPDFException);\n          return _super4.apply(this, arguments);\n        }\n        return MissingPDFException;\n      }(BaseException);\n      exports.MissingPDFException = MissingPDFException;\n      var UnexpectedResponseException = /*#__PURE__*/function (_BaseException5) {\n        _inherits(UnexpectedResponseException, _BaseException5);\n        var _super5 = _createSuper(UnexpectedResponseException);\n        function UnexpectedResponseException(msg, status) {\n          var _this3;\n          _classCallCheck(this, UnexpectedResponseException);\n          _this3 = _super5.call(this, msg);\n          _this3.status = status;\n          return _this3;\n        }\n        return UnexpectedResponseException;\n      }(BaseException);\n      exports.UnexpectedResponseException = UnexpectedResponseException;\n      var FormatError = /*#__PURE__*/function (_BaseException6) {\n        _inherits(FormatError, _BaseException6);\n        var _super6 = _createSuper(FormatError);\n        function FormatError() {\n          _classCallCheck(this, FormatError);\n          return _super6.apply(this, arguments);\n        }\n        return FormatError;\n      }(BaseException);\n      exports.FormatError = FormatError;\n      var AbortException = /*#__PURE__*/function (_BaseException7) {\n        _inherits(AbortException, _BaseException7);\n        var _super7 = _createSuper(AbortException);\n        function AbortException() {\n          _classCallCheck(this, AbortException);\n          return _super7.apply(this, arguments);\n        }\n        return AbortException;\n      }(BaseException);\n      exports.AbortException = AbortException;\n      var NullCharactersRegExp = /\\x00/g;\n      function removeNullCharacters(str) {\n        if (typeof str !== \"string\") {\n          warn(\"The argument for removeNullCharacters must be a string.\");\n          return str;\n        }\n        return str.replace(NullCharactersRegExp, \"\");\n      }\n      function bytesToString(bytes) {\n        assert(bytes !== null && _typeof(bytes) === \"object\" && bytes.length !== undefined, \"Invalid argument for bytesToString\");\n        var length = bytes.length;\n        var MAX_ARGUMENT_COUNT = 8192;\n        if (length < MAX_ARGUMENT_COUNT) {\n          return String.fromCharCode.apply(null, bytes);\n        }\n        var strBuf = [];\n        for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n          var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n          var chunk = bytes.subarray(i, chunkEnd);\n          strBuf.push(String.fromCharCode.apply(null, chunk));\n        }\n        return strBuf.join(\"\");\n      }\n      function stringToBytes(str) {\n        assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n        var length = str.length;\n        var bytes = new Uint8Array(length);\n        for (var i = 0; i < length; ++i) {\n          bytes[i] = str.charCodeAt(i) & 0xff;\n        }\n        return bytes;\n      }\n      function arrayByteLength(arr) {\n        if (arr.length !== undefined) {\n          return arr.length;\n        }\n        assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n        return arr.byteLength;\n      }\n      function arraysToBytes(arr) {\n        var length = arr.length;\n        if (length === 1 && arr[0] instanceof Uint8Array) {\n          return arr[0];\n        }\n        var resultLength = 0;\n        for (var i = 0; i < length; i++) {\n          resultLength += arrayByteLength(arr[i]);\n        }\n        var pos = 0;\n        var data = new Uint8Array(resultLength);\n        for (var _i = 0; _i < length; _i++) {\n          var item = arr[_i];\n          if (!(item instanceof Uint8Array)) {\n            if (typeof item === \"string\") {\n              item = stringToBytes(item);\n            } else {\n              item = new Uint8Array(item);\n            }\n          }\n          var itemLength = item.byteLength;\n          data.set(item, pos);\n          pos += itemLength;\n        }\n        return data;\n      }\n      function string32(value) {\n        return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n      }\n      function isLittleEndian() {\n        var buffer8 = new Uint8Array(4);\n        buffer8[0] = 1;\n        var view32 = new Uint32Array(buffer8.buffer, 0, 1);\n        return view32[0] === 1;\n      }\n      var IsLittleEndianCached = {\n        get value() {\n          return shadow(this, \"value\", isLittleEndian());\n        }\n      };\n      exports.IsLittleEndianCached = IsLittleEndianCached;\n      function isEvalSupported() {\n        try {\n          new Function(\"\");\n          return true;\n        } catch (e) {\n          return false;\n        }\n      }\n      var IsEvalSupportedCached = {\n        get value() {\n          return shadow(this, \"value\", isEvalSupported());\n        }\n      };\n      exports.IsEvalSupportedCached = IsEvalSupportedCached;\n      var rgbBuf = [\"rgb(\", 0, \",\", 0, \",\", 0, \")\"];\n      var Util = /*#__PURE__*/function () {\n        function Util() {\n          _classCallCheck(this, Util);\n        }\n        _createClass(Util, null, [{\n          key: \"makeCssRgb\",\n          value: function makeCssRgb(r, g, b) {\n            rgbBuf[1] = r;\n            rgbBuf[3] = g;\n            rgbBuf[5] = b;\n            return rgbBuf.join(\"\");\n          }\n        }, {\n          key: \"transform\",\n          value: function transform(m1, m2) {\n            return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n          }\n        }, {\n          key: \"applyTransform\",\n          value: function applyTransform(p, m) {\n            var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n            var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n            return [xt, yt];\n          }\n        }, {\n          key: \"applyInverseTransform\",\n          value: function applyInverseTransform(p, m) {\n            var d = m[0] * m[3] - m[1] * m[2];\n            var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n            var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n            return [xt, yt];\n          }\n        }, {\n          key: \"getAxialAlignedBoundingBox\",\n          value: function getAxialAlignedBoundingBox(r, m) {\n            var p1 = Util.applyTransform(r, m);\n            var p2 = Util.applyTransform(r.slice(2, 4), m);\n            var p3 = Util.applyTransform([r[0], r[3]], m);\n            var p4 = Util.applyTransform([r[2], r[1]], m);\n            return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n          }\n        }, {\n          key: \"inverseTransform\",\n          value: function inverseTransform(m) {\n            var d = m[0] * m[3] - m[1] * m[2];\n            return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n          }\n        }, {\n          key: \"apply3dTransform\",\n          value: function apply3dTransform(m, v) {\n            return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n          }\n        }, {\n          key: \"singularValueDecompose2dScale\",\n          value: function singularValueDecompose2dScale(m) {\n            var transpose = [m[0], m[2], m[1], m[3]];\n            var a = m[0] * transpose[0] + m[1] * transpose[2];\n            var b = m[0] * transpose[1] + m[1] * transpose[3];\n            var c = m[2] * transpose[0] + m[3] * transpose[2];\n            var d = m[2] * transpose[1] + m[3] * transpose[3];\n            var first = (a + d) / 2;\n            var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n            var sx = first + second || 1;\n            var sy = first - second || 1;\n            return [Math.sqrt(sx), Math.sqrt(sy)];\n          }\n        }, {\n          key: \"normalizeRect\",\n          value: function normalizeRect(rect) {\n            var r = rect.slice(0);\n            if (rect[0] > rect[2]) {\n              r[0] = rect[2];\n              r[2] = rect[0];\n            }\n            if (rect[1] > rect[3]) {\n              r[1] = rect[3];\n              r[3] = rect[1];\n            }\n            return r;\n          }\n        }, {\n          key: \"intersect\",\n          value: function intersect(rect1, rect2) {\n            function compare(a, b) {\n              return a - b;\n            }\n            var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n            var orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n            var result = [];\n            rect1 = Util.normalizeRect(rect1);\n            rect2 = Util.normalizeRect(rect2);\n            if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n              result[0] = orderedX[1];\n              result[2] = orderedX[2];\n            } else {\n              return null;\n            }\n            if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n              result[1] = orderedY[1];\n              result[3] = orderedY[2];\n            } else {\n              return null;\n            }\n            return result;\n          }\n        }]);\n        return Util;\n      }();\n      exports.Util = Util;\n      var PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\n      function stringToPDFString(str) {\n        var length = str.length,\n          strBuf = [];\n        if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n          for (var i = 2; i < length; i += 2) {\n            strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n          }\n        } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n          for (var _i2 = 2; _i2 < length; _i2 += 2) {\n            strBuf.push(String.fromCharCode(str.charCodeAt(_i2 + 1) << 8 | str.charCodeAt(_i2)));\n          }\n        } else {\n          for (var _i3 = 0; _i3 < length; ++_i3) {\n            var code = PDFStringTranslateTable[str.charCodeAt(_i3)];\n            strBuf.push(code ? String.fromCharCode(code) : str.charAt(_i3));\n          }\n        }\n        return strBuf.join(\"\");\n      }\n      function stringToUTF8String(str) {\n        return decodeURIComponent(escape(str));\n      }\n      function utf8StringToString(str) {\n        return unescape(encodeURIComponent(str));\n      }\n      function isEmptyObj(obj) {\n        for (var key in obj) {\n          return false;\n        }\n        return true;\n      }\n      function isBool(v) {\n        return typeof v === \"boolean\";\n      }\n      function isNum(v) {\n        return typeof v === \"number\";\n      }\n      function isString(v) {\n        return typeof v === \"string\";\n      }\n      function isArrayBuffer(v) {\n        return _typeof(v) === \"object\" && v !== null && v.byteLength !== undefined;\n      }\n      function isArrayEqual(arr1, arr2) {\n        if (arr1.length !== arr2.length) {\n          return false;\n        }\n        return arr1.every(function (element, index) {\n          return element === arr2[index];\n        });\n      }\n      function createPromiseCapability() {\n        var capability = Object.create(null);\n        var isSettled = false;\n        Object.defineProperty(capability, \"settled\", {\n          get: function get() {\n            return isSettled;\n          }\n        });\n        capability.promise = new Promise(function (resolve, reject) {\n          capability.resolve = function (data) {\n            isSettled = true;\n            resolve(data);\n          };\n          capability.reject = function (reason) {\n            isSettled = true;\n            reject(reason);\n          };\n        });\n        return capability;\n      }\n      var createObjectURL = function createObjectURLClosure() {\n        var digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n        return function createObjectURL(data, contentType) {\n          var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          if (!forceDataSchema && URL.createObjectURL) {\n            var blob = new Blob([data], {\n              type: contentType\n            });\n            return URL.createObjectURL(blob);\n          }\n          var buffer = \"data:\".concat(contentType, \";base64,\");\n          for (var i = 0, ii = data.length; i < ii; i += 3) {\n            var b1 = data[i] & 0xff;\n            var b2 = data[i + 1] & 0xff;\n            var b3 = data[i + 2] & 0xff;\n            var d1 = b1 >> 2,\n              d2 = (b1 & 3) << 4 | b2 >> 4;\n            var d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n            var d4 = i + 2 < ii ? b3 & 0x3f : 64;\n            buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n          }\n          return buffer;\n        };\n      }();\n      exports.createObjectURL = createObjectURL;\n\n      /***/\n    }, /* 6 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var _is_node = __w_pdfjs_require__(7);\n      function _typeof(obj) {\n        \"@babel/helpers - typeof\";\n\n        if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n          _typeof = function _typeof(obj) {\n            return typeof obj;\n          };\n        } else {\n          _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n          };\n        }\n        return _typeof(obj);\n      }\n      if (typeof globalThis === \"undefined\" || !globalThis._pdfjsCompatibilityChecked) {\n        if (typeof globalThis === \"undefined\" || globalThis.Math !== Math) {\n          globalThis = __w_pdfjs_require__(8);\n        }\n        globalThis._pdfjsCompatibilityChecked = true;\n        var hasDOM = (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\" && (typeof document === \"undefined\" ? \"undefined\" : _typeof(document)) === \"object\";\n        var userAgent = typeof navigator !== \"undefined\" && navigator.userAgent || \"\";\n        var isIE = /Trident/.test(userAgent);\n        (function checkNodeBtoa() {\n          if (globalThis.btoa || !_is_node.isNodeJS) {\n            return;\n          }\n          globalThis.btoa = function (chars) {\n            return Buffer.from(chars, \"binary\").toString(\"base64\");\n          };\n        })();\n        (function checkNodeAtob() {\n          if (globalThis.atob || !_is_node.isNodeJS) {\n            return;\n          }\n          globalThis.atob = function (input) {\n            return Buffer.from(input, \"base64\").toString(\"binary\");\n          };\n        })();\n        (function checkChildNodeRemove() {\n          if (!hasDOM) {\n            return;\n          }\n          if (typeof Element.prototype.remove !== \"undefined\") {\n            return;\n          }\n          Element.prototype.remove = function () {\n            if (this.parentNode) {\n              this.parentNode.removeChild(this);\n            }\n          };\n        })();\n        (function checkDOMTokenListAddRemove() {\n          if (!hasDOM || _is_node.isNodeJS) {\n            return;\n          }\n          var div = document.createElement(\"div\");\n          div.classList.add(\"testOne\", \"testTwo\");\n          if (div.classList.contains(\"testOne\") === true && div.classList.contains(\"testTwo\") === true) {\n            return;\n          }\n          var OriginalDOMTokenListAdd = DOMTokenList.prototype.add;\n          var OriginalDOMTokenListRemove = DOMTokenList.prototype.remove;\n          DOMTokenList.prototype.add = function () {\n            for (var _len = arguments.length, tokens = new Array(_len), _key = 0; _key < _len; _key++) {\n              tokens[_key] = arguments[_key];\n            }\n            for (var _i = 0, _tokens = tokens; _i < _tokens.length; _i++) {\n              var token = _tokens[_i];\n              OriginalDOMTokenListAdd.call(this, token);\n            }\n          };\n          DOMTokenList.prototype.remove = function () {\n            for (var _len2 = arguments.length, tokens = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              tokens[_key2] = arguments[_key2];\n            }\n            for (var _i2 = 0, _tokens2 = tokens; _i2 < _tokens2.length; _i2++) {\n              var token = _tokens2[_i2];\n              OriginalDOMTokenListRemove.call(this, token);\n            }\n          };\n        })();\n        (function checkDOMTokenListToggle() {\n          if (!hasDOM || _is_node.isNodeJS) {\n            return;\n          }\n          var div = document.createElement(\"div\");\n          if (div.classList.toggle(\"test\", 0) === false) {\n            return;\n          }\n          DOMTokenList.prototype.toggle = function (token) {\n            var force = arguments.length > 1 ? !!arguments[1] : !this.contains(token);\n            return this[force ? \"add\" : \"remove\"](token), force;\n          };\n        })();\n        (function checkWindowHistoryPushStateReplaceState() {\n          if (!hasDOM || !isIE) {\n            return;\n          }\n          var OriginalPushState = window.history.pushState;\n          var OriginalReplaceState = window.history.replaceState;\n          window.history.pushState = function (state, title, url) {\n            var args = url === undefined ? [state, title] : [state, title, url];\n            OriginalPushState.apply(this, args);\n          };\n          window.history.replaceState = function (state, title, url) {\n            var args = url === undefined ? [state, title] : [state, title, url];\n            OriginalReplaceState.apply(this, args);\n          };\n        })();\n        (function checkStringStartsWith() {\n          if (String.prototype.startsWith) {\n            return;\n          }\n          __w_pdfjs_require__(53);\n        })();\n        (function checkStringEndsWith() {\n          if (String.prototype.endsWith) {\n            return;\n          }\n          __w_pdfjs_require__(64);\n        })();\n        (function checkStringIncludes() {\n          if (String.prototype.includes) {\n            return;\n          }\n          __w_pdfjs_require__(66);\n        })();\n        (function checkArrayIncludes() {\n          if (Array.prototype.includes) {\n            return;\n          }\n          __w_pdfjs_require__(68);\n        })();\n        (function checkArrayFrom() {\n          if (Array.from) {\n            return;\n          }\n          __w_pdfjs_require__(76);\n        })();\n        (function checkObjectAssign() {\n          if (Object.assign) {\n            return;\n          }\n          __w_pdfjs_require__(98);\n        })();\n        (function checkMathLog2() {\n          if (Math.log2) {\n            return;\n          }\n          Math.log2 = __w_pdfjs_require__(101);\n        })();\n        (function checkNumberIsNaN() {\n          if (Number.isNaN) {\n            return;\n          }\n          Number.isNaN = __w_pdfjs_require__(103);\n        })();\n        (function checkNumberIsInteger() {\n          if (Number.isInteger) {\n            return;\n          }\n          Number.isInteger = __w_pdfjs_require__(105);\n        })();\n        (function checkTypedArraySlice() {\n          if (Uint8Array.prototype.slice) {\n            return;\n          }\n          __w_pdfjs_require__(108);\n        })();\n        (function checkPromise() {\n          if (globalThis.Promise && globalThis.Promise.allSettled) {\n            return;\n          }\n          globalThis.Promise = __w_pdfjs_require__(113);\n        })();\n        (function checkURL() {\n          globalThis.URL = __w_pdfjs_require__(136);\n        })();\n        (function checkReadableStream() {\n          var isReadableStreamSupported = false;\n          if (typeof ReadableStream !== \"undefined\") {\n            try {\n              new ReadableStream({\n                start: function start(controller) {\n                  controller.close();\n                }\n              });\n              isReadableStreamSupported = true;\n            } catch (e) {}\n          }\n          if (isReadableStreamSupported) {\n            return;\n          }\n          globalThis.ReadableStream = __w_pdfjs_require__(143).ReadableStream;\n        })();\n        (function checkMapEntries() {\n          if (globalThis.Map && globalThis.Map.prototype.entries) {\n            return;\n          }\n          globalThis.Map = __w_pdfjs_require__(144);\n        })();\n        (function checkSetEntries() {\n          if (globalThis.Set && globalThis.Set.prototype.entries) {\n            return;\n          }\n          globalThis.Set = __w_pdfjs_require__(151);\n        })();\n        (function checkWeakMap() {\n          if (globalThis.WeakMap) {\n            return;\n          }\n          globalThis.WeakMap = __w_pdfjs_require__(153);\n        })();\n        (function checkWeakSet() {\n          if (globalThis.WeakSet) {\n            return;\n          }\n          globalThis.WeakSet = __w_pdfjs_require__(159);\n        })();\n        (function checkStringCodePointAt() {\n          if (String.prototype.codePointAt) {\n            return;\n          }\n          __w_pdfjs_require__(161);\n        })();\n        (function checkStringFromCodePoint() {\n          if (String.fromCodePoint) {\n            return;\n          }\n          String.fromCodePoint = __w_pdfjs_require__(163);\n        })();\n        (function checkSymbol() {\n          if (globalThis.Symbol) {\n            return;\n          }\n          __w_pdfjs_require__(165);\n        })();\n        (function checkStringPadStart() {\n          if (String.prototype.padStart) {\n            return;\n          }\n          __w_pdfjs_require__(188);\n        })();\n        (function checkStringPadEnd() {\n          if (String.prototype.padEnd) {\n            return;\n          }\n          __w_pdfjs_require__(193);\n        })();\n        (function checkObjectValues() {\n          if (Object.values) {\n            return;\n          }\n          Object.values = __w_pdfjs_require__(195);\n        })();\n      }\n\n      /***/\n    }, /* 7 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.isNodeJS = void 0;\n      function _typeof(obj) {\n        \"@babel/helpers - typeof\";\n\n        if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n          _typeof = function _typeof(obj) {\n            return typeof obj;\n          };\n        } else {\n          _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n          };\n        }\n        return _typeof(obj);\n      }\n      var isNodeJS = (typeof process === \"undefined\" ? \"undefined\" : _typeof(process)) === \"object\" && process + \"\" === \"[object process]\" && !process.versions.nw && !process.versions.electron;\n      exports.isNodeJS = isNodeJS;\n\n      /***/\n    }, /* 8 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      __w_pdfjs_require__(9);\n      module.exports = __w_pdfjs_require__(11);\n\n      /***/\n    }, /* 9 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var $ = __w_pdfjs_require__(10);\n      var global = __w_pdfjs_require__(11);\n      $({\n        global: true\n      }, {\n        globalThis: global\n      });\n\n      /***/\n    }, /* 10 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var global = __w_pdfjs_require__(11);\n      var getOwnPropertyDescriptor = __w_pdfjs_require__(12).f;\n      var createNonEnumerableProperty = __w_pdfjs_require__(26);\n      var redefine = __w_pdfjs_require__(29);\n      var setGlobal = __w_pdfjs_require__(30);\n      var copyConstructorProperties = __w_pdfjs_require__(40);\n      var isForced = __w_pdfjs_require__(52);\n      module.exports = function (options, source) {\n        var TARGET = options.target;\n        var GLOBAL = options.global;\n        var STATIC = options.stat;\n        var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n        if (GLOBAL) {\n          target = global;\n        } else if (STATIC) {\n          target = global[TARGET] || setGlobal(TARGET, {});\n        } else {\n          target = (global[TARGET] || {}).prototype;\n        }\n        if (target) for (key in source) {\n          sourceProperty = source[key];\n          if (options.noTargetGet) {\n            descriptor = getOwnPropertyDescriptor(target, key);\n            targetProperty = descriptor && descriptor.value;\n          } else targetProperty = target[key];\n          FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n          if (!FORCED && targetProperty !== undefined) {\n            if (typeof sourceProperty === typeof targetProperty) continue;\n            copyConstructorProperties(sourceProperty, targetProperty);\n          }\n          if (options.sham || targetProperty && targetProperty.sham) {\n            createNonEnumerableProperty(sourceProperty, 'sham', true);\n          }\n          redefine(target, key, sourceProperty, options);\n        }\n      };\n\n      /***/\n    }, /* 11 */\n    /***/function (module, exports) {\n      var check = function (it) {\n        return it && it.Math == Math && it;\n      };\n      module.exports = check(typeof globalThis == 'object' && globalThis) || check(typeof window == 'object' && window) || check(typeof self == 'object' && self) || check(typeof global == 'object' && global) || Function('return this')();\n\n      /***/\n    }, /* 12 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var DESCRIPTORS = __w_pdfjs_require__(13);\n      var propertyIsEnumerableModule = __w_pdfjs_require__(15);\n      var createPropertyDescriptor = __w_pdfjs_require__(16);\n      var toIndexedObject = __w_pdfjs_require__(17);\n      var toPrimitive = __w_pdfjs_require__(21);\n      var has = __w_pdfjs_require__(23);\n      var IE8_DOM_DEFINE = __w_pdfjs_require__(24);\n      var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n      exports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n        O = toIndexedObject(O);\n        P = toPrimitive(P, true);\n        if (IE8_DOM_DEFINE) try {\n          return nativeGetOwnPropertyDescriptor(O, P);\n        } catch (error) {}\n        if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n      };\n\n      /***/\n    }, /* 13 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var fails = __w_pdfjs_require__(14);\n      module.exports = !fails(function () {\n        return Object.defineProperty({}, 1, {\n          get: function () {\n            return 7;\n          }\n        })[1] != 7;\n      });\n\n      /***/\n    }, /* 14 */\n    /***/function (module, exports) {\n      module.exports = function (exec) {\n        try {\n          return !!exec();\n        } catch (error) {\n          return true;\n        }\n      };\n\n      /***/\n    }, /* 15 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var nativePropertyIsEnumerable = {}.propertyIsEnumerable;\n      var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n      var NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({\n        1: 2\n      }, 1);\n      exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n        var descriptor = getOwnPropertyDescriptor(this, V);\n        return !!descriptor && descriptor.enumerable;\n      } : nativePropertyIsEnumerable;\n\n      /***/\n    }, /* 16 */\n    /***/function (module, exports) {\n      module.exports = function (bitmap, value) {\n        return {\n          enumerable: !(bitmap & 1),\n          configurable: !(bitmap & 2),\n          writable: !(bitmap & 4),\n          value: value\n        };\n      };\n\n      /***/\n    }, /* 17 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var IndexedObject = __w_pdfjs_require__(18);\n      var requireObjectCoercible = __w_pdfjs_require__(20);\n      module.exports = function (it) {\n        return IndexedObject(requireObjectCoercible(it));\n      };\n\n      /***/\n    }, /* 18 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var fails = __w_pdfjs_require__(14);\n      var classof = __w_pdfjs_require__(19);\n      var split = ''.split;\n      module.exports = fails(function () {\n        return !Object('z').propertyIsEnumerable(0);\n      }) ? function (it) {\n        return classof(it) == 'String' ? split.call(it, '') : Object(it);\n      } : Object;\n\n      /***/\n    }, /* 19 */\n    /***/function (module, exports) {\n      var toString = {}.toString;\n      module.exports = function (it) {\n        return toString.call(it).slice(8, -1);\n      };\n\n      /***/\n    }, /* 20 */\n    /***/function (module, exports) {\n      module.exports = function (it) {\n        if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n        return it;\n      };\n\n      /***/\n    }, /* 21 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var isObject = __w_pdfjs_require__(22);\n      module.exports = function (input, PREFERRED_STRING) {\n        if (!isObject(input)) return input;\n        var fn, val;\n        if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n        if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n        if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n        throw TypeError(\"Can't convert object to primitive value\");\n      };\n\n      /***/\n    }, /* 22 */\n    /***/function (module, exports) {\n      module.exports = function (it) {\n        return typeof it === 'object' ? it !== null : typeof it === 'function';\n      };\n\n      /***/\n    }, /* 23 */\n    /***/function (module, exports) {\n      var hasOwnProperty = {}.hasOwnProperty;\n      module.exports = function (it, key) {\n        return hasOwnProperty.call(it, key);\n      };\n\n      /***/\n    }, /* 24 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var DESCRIPTORS = __w_pdfjs_require__(13);\n      var fails = __w_pdfjs_require__(14);\n      var createElement = __w_pdfjs_require__(25);\n      module.exports = !DESCRIPTORS && !fails(function () {\n        return Object.defineProperty(createElement('div'), 'a', {\n          get: function () {\n            return 7;\n          }\n        }).a != 7;\n      });\n\n      /***/\n    }, /* 25 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var global = __w_pdfjs_require__(11);\n      var isObject = __w_pdfjs_require__(22);\n      var document = global.document;\n      var EXISTS = isObject(document) && isObject(document.createElement);\n      module.exports = function (it) {\n        return EXISTS ? document.createElement(it) : {};\n      };\n\n      /***/\n    }, /* 26 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var DESCRIPTORS = __w_pdfjs_require__(13);\n      var definePropertyModule = __w_pdfjs_require__(27);\n      var createPropertyDescriptor = __w_pdfjs_require__(16);\n      module.exports = DESCRIPTORS ? function (object, key, value) {\n        return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n      } : function (object, key, value) {\n        object[key] = value;\n        return object;\n      };\n\n      /***/\n    }, /* 27 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var DESCRIPTORS = __w_pdfjs_require__(13);\n      var IE8_DOM_DEFINE = __w_pdfjs_require__(24);\n      var anObject = __w_pdfjs_require__(28);\n      var toPrimitive = __w_pdfjs_require__(21);\n      var nativeDefineProperty = Object.defineProperty;\n      exports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {\n        anObject(O);\n        P = toPrimitive(P, true);\n        anObject(Attributes);\n        if (IE8_DOM_DEFINE) try {\n          return nativeDefineProperty(O, P, Attributes);\n        } catch (error) {}\n        if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n        if ('value' in Attributes) O[P] = Attributes.value;\n        return O;\n      };\n\n      /***/\n    }, /* 28 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var isObject = __w_pdfjs_require__(22);\n      module.exports = function (it) {\n        if (!isObject(it)) {\n          throw TypeError(String(it) + ' is not an object');\n        }\n        return it;\n      };\n\n      /***/\n    }, /* 29 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var global = __w_pdfjs_require__(11);\n      var createNonEnumerableProperty = __w_pdfjs_require__(26);\n      var has = __w_pdfjs_require__(23);\n      var setGlobal = __w_pdfjs_require__(30);\n      var inspectSource = __w_pdfjs_require__(31);\n      var InternalStateModule = __w_pdfjs_require__(33);\n      var getInternalState = InternalStateModule.get;\n      var enforceInternalState = InternalStateModule.enforce;\n      var TEMPLATE = String(String).split('String');\n      (module.exports = function (O, key, value, options) {\n        var unsafe = options ? !!options.unsafe : false;\n        var simple = options ? !!options.enumerable : false;\n        var noTargetGet = options ? !!options.noTargetGet : false;\n        if (typeof value == 'function') {\n          if (typeof key == 'string' && !has(value, 'name')) createNonEnumerableProperty(value, 'name', key);\n          enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');\n        }\n        if (O === global) {\n          if (simple) O[key] = value;else setGlobal(key, value);\n          return;\n        } else if (!unsafe) {\n          delete O[key];\n        } else if (!noTargetGet && O[key]) {\n          simple = true;\n        }\n        if (simple) O[key] = value;else createNonEnumerableProperty(O, key, value);\n      })(Function.prototype, 'toString', function toString() {\n        return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n      });\n\n      /***/\n    }, /* 30 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var global = __w_pdfjs_require__(11);\n      var createNonEnumerableProperty = __w_pdfjs_require__(26);\n      module.exports = function (key, value) {\n        try {\n          createNonEnumerableProperty(global, key, value);\n        } catch (error) {\n          global[key] = value;\n        }\n        return value;\n      };\n\n      /***/\n    }, /* 31 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var store = __w_pdfjs_require__(32);\n      var functionToString = Function.toString;\n      if (typeof store.inspectSource != 'function') {\n        store.inspectSource = function (it) {\n          return functionToString.call(it);\n        };\n      }\n      module.exports = store.inspectSource;\n\n      /***/\n    }, /* 32 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var global = __w_pdfjs_require__(11);\n      var setGlobal = __w_pdfjs_require__(30);\n      var SHARED = '__core-js_shared__';\n      var store = global[SHARED] || setGlobal(SHARED, {});\n      module.exports = store;\n\n      /***/\n    }, /* 33 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var NATIVE_WEAK_MAP = __w_pdfjs_require__(34);\n      var global = __w_pdfjs_require__(11);\n      var isObject = __w_pdfjs_require__(22);\n      var createNonEnumerableProperty = __w_pdfjs_require__(26);\n      var objectHas = __w_pdfjs_require__(23);\n      var sharedKey = __w_pdfjs_require__(35);\n      var hiddenKeys = __w_pdfjs_require__(39);\n      var WeakMap = global.WeakMap;\n      var set, get, has;\n      var enforce = function (it) {\n        return has(it) ? get(it) : set(it, {});\n      };\n      var getterFor = function (TYPE) {\n        return function (it) {\n          var state;\n          if (!isObject(it) || (state = get(it)).type !== TYPE) {\n            throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n          }\n          return state;\n        };\n      };\n      if (NATIVE_WEAK_MAP) {\n        var store = new WeakMap();\n        var wmget = store.get;\n        var wmhas = store.has;\n        var wmset = store.set;\n        set = function (it, metadata) {\n          wmset.call(store, it, metadata);\n          return metadata;\n        };\n        get = function (it) {\n          return wmget.call(store, it) || {};\n        };\n        has = function (it) {\n          return wmhas.call(store, it);\n        };\n      } else {\n        var STATE = sharedKey('state');\n        hiddenKeys[STATE] = true;\n        set = function (it, metadata) {\n          createNonEnumerableProperty(it, STATE, metadata);\n          return metadata;\n        };\n        get = function (it) {\n          return objectHas(it, STATE) ? it[STATE] : {};\n        };\n        has = function (it) {\n          return objectHas(it, STATE);\n        };\n      }\n      module.exports = {\n        set: set,\n        get: get,\n        has: has,\n        enforce: enforce,\n        getterFor: getterFor\n      };\n\n      /***/\n    }, /* 34 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var global = __w_pdfjs_require__(11);\n      var inspectSource = __w_pdfjs_require__(31);\n      var WeakMap = global.WeakMap;\n      module.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));\n\n      /***/\n    }, /* 35 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var shared = __w_pdfjs_require__(36);\n      var uid = __w_pdfjs_require__(38);\n      var keys = shared('keys');\n      module.exports = function (key) {\n        return keys[key] || (keys[key] = uid(key));\n      };\n\n      /***/\n    }, /* 36 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var IS_PURE = __w_pdfjs_require__(37);\n      var store = __w_pdfjs_require__(32);\n      (module.exports = function (key, value) {\n        return store[key] || (store[key] = value !== undefined ? value : {});\n      })('versions', []).push({\n        version: '3.6.5',\n        mode: IS_PURE ? 'pure' : 'global',\n        copyright: '© 2020 Denis Pushkarev (zloirock.ru)'\n      });\n\n      /***/\n    }, /* 37 */\n    /***/function (module, exports) {\n      module.exports = false;\n\n      /***/\n    }, /* 38 */\n    /***/function (module, exports) {\n      var id = 0;\n      var postfix = Math.random();\n      module.exports = function (key) {\n        return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n      };\n\n      /***/\n    }, /* 39 */\n    /***/function (module, exports) {\n      module.exports = {};\n\n      /***/\n    }, /* 40 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var has = __w_pdfjs_require__(23);\n      var ownKeys = __w_pdfjs_require__(41);\n      var getOwnPropertyDescriptorModule = __w_pdfjs_require__(12);\n      var definePropertyModule = __w_pdfjs_require__(27);\n      module.exports = function (target, source) {\n        var keys = ownKeys(source);\n        var defineProperty = definePropertyModule.f;\n        var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n        for (var i = 0; i < keys.length; i++) {\n          var key = keys[i];\n          if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n        }\n      };\n\n      /***/\n    }, /* 41 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var getBuiltIn = __w_pdfjs_require__(42);\n      var getOwnPropertyNamesModule = __w_pdfjs_require__(44);\n      var getOwnPropertySymbolsModule = __w_pdfjs_require__(51);\n      var anObject = __w_pdfjs_require__(28);\n      module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n        var keys = getOwnPropertyNamesModule.f(anObject(it));\n        var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n        return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n      };\n\n      /***/\n    }, /* 42 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var path = __w_pdfjs_require__(43);\n      var global = __w_pdfjs_require__(11);\n      var aFunction = function (variable) {\n        return typeof variable == 'function' ? variable : undefined;\n      };\n      module.exports = function (namespace, method) {\n        return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace]) : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n      };\n\n      /***/\n    }, /* 43 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var global = __w_pdfjs_require__(11);\n      module.exports = global;\n\n      /***/\n    }, /* 44 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var internalObjectKeys = __w_pdfjs_require__(45);\n      var enumBugKeys = __w_pdfjs_require__(50);\n      var hiddenKeys = enumBugKeys.concat('length', 'prototype');\n      exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n        return internalObjectKeys(O, hiddenKeys);\n      };\n\n      /***/\n    }, /* 45 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var has = __w_pdfjs_require__(23);\n      var toIndexedObject = __w_pdfjs_require__(17);\n      var indexOf = __w_pdfjs_require__(46).indexOf;\n      var hiddenKeys = __w_pdfjs_require__(39);\n      module.exports = function (object, names) {\n        var O = toIndexedObject(object);\n        var i = 0;\n        var result = [];\n        var key;\n        for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n        while (names.length > i) if (has(O, key = names[i++])) {\n          ~indexOf(result, key) || result.push(key);\n        }\n        return result;\n      };\n\n      /***/\n    }, /* 46 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var toIndexedObject = __w_pdfjs_require__(17);\n      var toLength = __w_pdfjs_require__(47);\n      var toAbsoluteIndex = __w_pdfjs_require__(49);\n      var createMethod = function (IS_INCLUDES) {\n        return function ($this, el, fromIndex) {\n          var O = toIndexedObject($this);\n          var length = toLength(O.length);\n          var index = toAbsoluteIndex(fromIndex, length);\n          var value;\n          if (IS_INCLUDES && el != el) while (length > index) {\n            value = O[index++];\n            if (value != value) return true;\n          } else for (; length > index; index++) {\n            if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n          }\n          return !IS_INCLUDES && -1;\n        };\n      };\n      module.exports = {\n        includes: createMethod(true),\n        indexOf: createMethod(false)\n      };\n\n      /***/\n    }, /* 47 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var toInteger = __w_pdfjs_require__(48);\n      var min = Math.min;\n      module.exports = function (argument) {\n        return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0;\n      };\n\n      /***/\n    }, /* 48 */\n    /***/function (module, exports) {\n      var ceil = Math.ceil;\n      var floor = Math.floor;\n      module.exports = function (argument) {\n        return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n      };\n\n      /***/\n    }, /* 49 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var toInteger = __w_pdfjs_require__(48);\n      var max = Math.max;\n      var min = Math.min;\n      module.exports = function (index, length) {\n        var integer = toInteger(index);\n        return integer < 0 ? max(integer + length, 0) : min(integer, length);\n      };\n\n      /***/\n    }, /* 50 */\n    /***/function (module, exports) {\n      module.exports = ['constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString', 'valueOf'];\n\n      /***/\n    }, /* 51 */\n    /***/function (module, exports) {\n      exports.f = Object.getOwnPropertySymbols;\n\n      /***/\n    }, /* 52 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var fails = __w_pdfjs_require__(14);\n      var replacement = /#|\\.prototype\\./;\n      var isForced = function (feature, detection) {\n        var value = data[normalize(feature)];\n        return value == POLYFILL ? true : value == NATIVE ? false : typeof detection == 'function' ? fails(detection) : !!detection;\n      };\n      var normalize = isForced.normalize = function (string) {\n        return String(string).replace(replacement, '.').toLowerCase();\n      };\n      var data = isForced.data = {};\n      var NATIVE = isForced.NATIVE = 'N';\n      var POLYFILL = isForced.POLYFILL = 'P';\n      module.exports = isForced;\n\n      /***/\n    }, /* 53 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      __w_pdfjs_require__(54);\n      var entryUnbind = __w_pdfjs_require__(61);\n      module.exports = entryUnbind('String', 'startsWith');\n\n      /***/\n    }, /* 54 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var $ = __w_pdfjs_require__(10);\n      var getOwnPropertyDescriptor = __w_pdfjs_require__(12).f;\n      var toLength = __w_pdfjs_require__(47);\n      var notARegExp = __w_pdfjs_require__(55);\n      var requireObjectCoercible = __w_pdfjs_require__(20);\n      var correctIsRegExpLogic = __w_pdfjs_require__(60);\n      var IS_PURE = __w_pdfjs_require__(37);\n      var nativeStartsWith = ''.startsWith;\n      var min = Math.min;\n      var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('startsWith');\n      var MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {\n        var descriptor = getOwnPropertyDescriptor(String.prototype, 'startsWith');\n        return descriptor && !descriptor.writable;\n      }();\n      $({\n        target: 'String',\n        proto: true,\n        forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC\n      }, {\n        startsWith: function startsWith(searchString) {\n          var that = String(requireObjectCoercible(this));\n          notARegExp(searchString);\n          var index = toLength(min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n          var search = String(searchString);\n          return nativeStartsWith ? nativeStartsWith.call(that, search, index) : that.slice(index, index + search.length) === search;\n        }\n      });\n\n      /***/\n    }, /* 55 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var isRegExp = __w_pdfjs_require__(56);\n      module.exports = function (it) {\n        if (isRegExp(it)) {\n          throw TypeError(\"The method doesn't accept regular expressions\");\n        }\n        return it;\n      };\n\n      /***/\n    }, /* 56 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var isObject = __w_pdfjs_require__(22);\n      var classof = __w_pdfjs_require__(19);\n      var wellKnownSymbol = __w_pdfjs_require__(57);\n      var MATCH = wellKnownSymbol('match');\n      module.exports = function (it) {\n        var isRegExp;\n        return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n      };\n\n      /***/\n    }, /* 57 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var global = __w_pdfjs_require__(11);\n      var shared = __w_pdfjs_require__(36);\n      var has = __w_pdfjs_require__(23);\n      var uid = __w_pdfjs_require__(38);\n      var NATIVE_SYMBOL = __w_pdfjs_require__(58);\n      var USE_SYMBOL_AS_UID = __w_pdfjs_require__(59);\n      var WellKnownSymbolsStore = shared('wks');\n      var Symbol = global.Symbol;\n      var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n      module.exports = function (name) {\n        if (!has(WellKnownSymbolsStore, name)) {\n          if (NATIVE_SYMBOL && has(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name];else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\n        }\n        return WellKnownSymbolsStore[name];\n      };\n\n      /***/\n    }, /* 58 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var fails = __w_pdfjs_require__(14);\n      module.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n        return !String(Symbol());\n      });\n\n      /***/\n    }, /* 59 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var NATIVE_SYMBOL = __w_pdfjs_require__(58);\n      module.exports = NATIVE_SYMBOL && !Symbol.sham && typeof Symbol.iterator == 'symbol';\n\n      /***/\n    }, /* 60 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var wellKnownSymbol = __w_pdfjs_require__(57);\n      var MATCH = wellKnownSymbol('match');\n      module.exports = function (METHOD_NAME) {\n        var regexp = /./;\n        try {\n          '/./'[METHOD_NAME](regexp);\n        } catch (e) {\n          try {\n            regexp[MATCH] = false;\n            return '/./'[METHOD_NAME](regexp);\n          } catch (f) {}\n        }\n        return false;\n      };\n\n      /***/\n    }, /* 61 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var global = __w_pdfjs_require__(11);\n      var bind = __w_pdfjs_require__(62);\n      var call = Function.call;\n      module.exports = function (CONSTRUCTOR, METHOD, length) {\n        return bind(call, global[CONSTRUCTOR].prototype[METHOD], length);\n      };\n\n      /***/\n    }, /* 62 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var aFunction = __w_pdfjs_require__(63);\n      module.exports = function (fn, that, length) {\n        aFunction(fn);\n        if (that === undefined) return fn;\n        switch (length) {\n          case 0:\n            return function () {\n              return fn.call(that);\n            };\n          case 1:\n            return function (a) {\n              return fn.call(that, a);\n            };\n          case 2:\n            return function (a, b) {\n              return fn.call(that, a, b);\n            };\n          case 3:\n            return function (a, b, c) {\n              return fn.call(that, a, b, c);\n            };\n        }\n        return function () {\n          return fn.apply(that, arguments);\n        };\n      };\n\n      /***/\n    }, /* 63 */\n    /***/function (module, exports) {\n      module.exports = function (it) {\n        if (typeof it != 'function') {\n          throw TypeError(String(it) + ' is not a function');\n        }\n        return it;\n      };\n\n      /***/\n    }, /* 64 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      __w_pdfjs_require__(65);\n      var entryUnbind = __w_pdfjs_require__(61);\n      module.exports = entryUnbind('String', 'endsWith');\n\n      /***/\n    }, /* 65 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var $ = __w_pdfjs_require__(10);\n      var getOwnPropertyDescriptor = __w_pdfjs_require__(12).f;\n      var toLength = __w_pdfjs_require__(47);\n      var notARegExp = __w_pdfjs_require__(55);\n      var requireObjectCoercible = __w_pdfjs_require__(20);\n      var correctIsRegExpLogic = __w_pdfjs_require__(60);\n      var IS_PURE = __w_pdfjs_require__(37);\n      var nativeEndsWith = ''.endsWith;\n      var min = Math.min;\n      var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('endsWith');\n      var MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {\n        var descriptor = getOwnPropertyDescriptor(String.prototype, 'endsWith');\n        return descriptor && !descriptor.writable;\n      }();\n      $({\n        target: 'String',\n        proto: true,\n        forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC\n      }, {\n        endsWith: function endsWith(searchString) {\n          var that = String(requireObjectCoercible(this));\n          notARegExp(searchString);\n          var endPosition = arguments.length > 1 ? arguments[1] : undefined;\n          var len = toLength(that.length);\n          var end = endPosition === undefined ? len : min(toLength(endPosition), len);\n          var search = String(searchString);\n          return nativeEndsWith ? nativeEndsWith.call(that, search, end) : that.slice(end - search.length, end) === search;\n        }\n      });\n\n      /***/\n    }, /* 66 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      __w_pdfjs_require__(67);\n      var entryUnbind = __w_pdfjs_require__(61);\n      module.exports = entryUnbind('String', 'includes');\n\n      /***/\n    }, /* 67 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var $ = __w_pdfjs_require__(10);\n      var notARegExp = __w_pdfjs_require__(55);\n      var requireObjectCoercible = __w_pdfjs_require__(20);\n      var correctIsRegExpLogic = __w_pdfjs_require__(60);\n      $({\n        target: 'String',\n        proto: true,\n        forced: !correctIsRegExpLogic('includes')\n      }, {\n        includes: function includes(searchString) {\n          return !!~String(requireObjectCoercible(this)).indexOf(notARegExp(searchString), arguments.length > 1 ? arguments[1] : undefined);\n        }\n      });\n\n      /***/\n    }, /* 68 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      __w_pdfjs_require__(69);\n      var entryUnbind = __w_pdfjs_require__(61);\n      module.exports = entryUnbind('Array', 'includes');\n\n      /***/\n    }, /* 69 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var $ = __w_pdfjs_require__(10);\n      var $includes = __w_pdfjs_require__(46).includes;\n      var addToUnscopables = __w_pdfjs_require__(70);\n      var arrayMethodUsesToLength = __w_pdfjs_require__(75);\n      var USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', {\n        ACCESSORS: true,\n        1: 0\n      });\n      $({\n        target: 'Array',\n        proto: true,\n        forced: !USES_TO_LENGTH\n      }, {\n        includes: function includes(el) {\n          return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n        }\n      });\n      addToUnscopables('includes');\n\n      /***/\n    }, /* 70 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var wellKnownSymbol = __w_pdfjs_require__(57);\n      var create = __w_pdfjs_require__(71);\n      var definePropertyModule = __w_pdfjs_require__(27);\n      var UNSCOPABLES = wellKnownSymbol('unscopables');\n      var ArrayPrototype = Array.prototype;\n      if (ArrayPrototype[UNSCOPABLES] == undefined) {\n        definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n          configurable: true,\n          value: create(null)\n        });\n      }\n      module.exports = function (key) {\n        ArrayPrototype[UNSCOPABLES][key] = true;\n      };\n\n      /***/\n    }, /* 71 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var anObject = __w_pdfjs_require__(28);\n      var defineProperties = __w_pdfjs_require__(72);\n      var enumBugKeys = __w_pdfjs_require__(50);\n      var hiddenKeys = __w_pdfjs_require__(39);\n      var html = __w_pdfjs_require__(74);\n      var documentCreateElement = __w_pdfjs_require__(25);\n      var sharedKey = __w_pdfjs_require__(35);\n      var GT = '>';\n      var LT = '<';\n      var PROTOTYPE = 'prototype';\n      var SCRIPT = 'script';\n      var IE_PROTO = sharedKey('IE_PROTO');\n      var EmptyConstructor = function () {};\n      var scriptTag = function (content) {\n        return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n      };\n      var NullProtoObjectViaActiveX = function (activeXDocument) {\n        activeXDocument.write(scriptTag(''));\n        activeXDocument.close();\n        var temp = activeXDocument.parentWindow.Object;\n        activeXDocument = null;\n        return temp;\n      };\n      var NullProtoObjectViaIFrame = function () {\n        var iframe = documentCreateElement('iframe');\n        var JS = 'java' + SCRIPT + ':';\n        var iframeDocument;\n        iframe.style.display = 'none';\n        html.appendChild(iframe);\n        iframe.src = String(JS);\n        iframeDocument = iframe.contentWindow.document;\n        iframeDocument.open();\n        iframeDocument.write(scriptTag('document.F=Object'));\n        iframeDocument.close();\n        return iframeDocument.F;\n      };\n      var activeXDocument;\n      var NullProtoObject = function () {\n        try {\n          activeXDocument = document.domain && new ActiveXObject('htmlfile');\n        } catch (error) {}\n        NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n        var length = enumBugKeys.length;\n        while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n        return NullProtoObject();\n      };\n      hiddenKeys[IE_PROTO] = true;\n      module.exports = Object.create || function create(O, Properties) {\n        var result;\n        if (O !== null) {\n          EmptyConstructor[PROTOTYPE] = anObject(O);\n          result = new EmptyConstructor();\n          EmptyConstructor[PROTOTYPE] = null;\n          result[IE_PROTO] = O;\n        } else result = NullProtoObject();\n        return Properties === undefined ? result : defineProperties(result, Properties);\n      };\n\n      /***/\n    }, /* 72 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var DESCRIPTORS = __w_pdfjs_require__(13);\n      var definePropertyModule = __w_pdfjs_require__(27);\n      var anObject = __w_pdfjs_require__(28);\n      var objectKeys = __w_pdfjs_require__(73);\n      module.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n        anObject(O);\n        var keys = objectKeys(Properties);\n        var length = keys.length;\n        var index = 0;\n        var key;\n        while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n        return O;\n      };\n\n      /***/\n    }, /* 73 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var internalObjectKeys = __w_pdfjs_require__(45);\n      var enumBugKeys = __w_pdfjs_require__(50);\n      module.exports = Object.keys || function keys(O) {\n        return internalObjectKeys(O, enumBugKeys);\n      };\n\n      /***/\n    }, /* 74 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var getBuiltIn = __w_pdfjs_require__(42);\n      module.exports = getBuiltIn('document', 'documentElement');\n\n      /***/\n    }, /* 75 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var DESCRIPTORS = __w_pdfjs_require__(13);\n      var fails = __w_pdfjs_require__(14);\n      var has = __w_pdfjs_require__(23);\n      var defineProperty = Object.defineProperty;\n      var cache = {};\n      var thrower = function (it) {\n        throw it;\n      };\n      module.exports = function (METHOD_NAME, options) {\n        if (has(cache, METHOD_NAME)) return cache[METHOD_NAME];\n        if (!options) options = {};\n        var method = [][METHOD_NAME];\n        var ACCESSORS = has(options, 'ACCESSORS') ? options.ACCESSORS : false;\n        var argument0 = has(options, 0) ? options[0] : thrower;\n        var argument1 = has(options, 1) ? options[1] : undefined;\n        return cache[METHOD_NAME] = !!method && !fails(function () {\n          if (ACCESSORS && !DESCRIPTORS) return true;\n          var O = {\n            length: -1\n          };\n          if (ACCESSORS) defineProperty(O, 1, {\n            enumerable: true,\n            get: thrower\n          });else O[1] = 1;\n          method.call(O, argument0, argument1);\n        });\n      };\n\n      /***/\n    }, /* 76 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      __w_pdfjs_require__(77);\n      __w_pdfjs_require__(89);\n      var path = __w_pdfjs_require__(43);\n      module.exports = path.Array.from;\n\n      /***/\n    }, /* 77 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var charAt = __w_pdfjs_require__(78).charAt;\n      var InternalStateModule = __w_pdfjs_require__(33);\n      var defineIterator = __w_pdfjs_require__(79);\n      var STRING_ITERATOR = 'String Iterator';\n      var setInternalState = InternalStateModule.set;\n      var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n      defineIterator(String, 'String', function (iterated) {\n        setInternalState(this, {\n          type: STRING_ITERATOR,\n          string: String(iterated),\n          index: 0\n        });\n      }, function next() {\n        var state = getInternalState(this);\n        var string = state.string;\n        var index = state.index;\n        var point;\n        if (index >= string.length) return {\n          value: undefined,\n          done: true\n        };\n        point = charAt(string, index);\n        state.index += point.length;\n        return {\n          value: point,\n          done: false\n        };\n      });\n\n      /***/\n    }, /* 78 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var toInteger = __w_pdfjs_require__(48);\n      var requireObjectCoercible = __w_pdfjs_require__(20);\n      var createMethod = function (CONVERT_TO_STRING) {\n        return function ($this, pos) {\n          var S = String(requireObjectCoercible($this));\n          var position = toInteger(pos);\n          var size = S.length;\n          var first, second;\n          if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n          first = S.charCodeAt(position);\n          return first < 0xD800 || first > 0xDBFF || position + 1 === size || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF ? CONVERT_TO_STRING ? S.charAt(position) : first : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n        };\n      };\n      module.exports = {\n        codeAt: createMethod(false),\n        charAt: createMethod(true)\n      };\n\n      /***/\n    }, /* 79 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var $ = __w_pdfjs_require__(10);\n      var createIteratorConstructor = __w_pdfjs_require__(80);\n      var getPrototypeOf = __w_pdfjs_require__(82);\n      var setPrototypeOf = __w_pdfjs_require__(87);\n      var setToStringTag = __w_pdfjs_require__(85);\n      var createNonEnumerableProperty = __w_pdfjs_require__(26);\n      var redefine = __w_pdfjs_require__(29);\n      var wellKnownSymbol = __w_pdfjs_require__(57);\n      var IS_PURE = __w_pdfjs_require__(37);\n      var Iterators = __w_pdfjs_require__(86);\n      var IteratorsCore = __w_pdfjs_require__(81);\n      var IteratorPrototype = IteratorsCore.IteratorPrototype;\n      var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\n      var ITERATOR = wellKnownSymbol('iterator');\n      var KEYS = 'keys';\n      var VALUES = 'values';\n      var ENTRIES = 'entries';\n      var returnThis = function () {\n        return this;\n      };\n      module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n        createIteratorConstructor(IteratorConstructor, NAME, next);\n        var getIterationMethod = function (KIND) {\n          if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n          if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n          switch (KIND) {\n            case KEYS:\n              return function keys() {\n                return new IteratorConstructor(this, KIND);\n              };\n            case VALUES:\n              return function values() {\n                return new IteratorConstructor(this, KIND);\n              };\n            case ENTRIES:\n              return function entries() {\n                return new IteratorConstructor(this, KIND);\n              };\n          }\n          return function () {\n            return new IteratorConstructor(this);\n          };\n        };\n        var TO_STRING_TAG = NAME + ' Iterator';\n        var INCORRECT_VALUES_NAME = false;\n        var IterablePrototype = Iterable.prototype;\n        var nativeIterator = IterablePrototype[ITERATOR] || IterablePrototype['@@iterator'] || DEFAULT && IterablePrototype[DEFAULT];\n        var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n        var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n        var CurrentIteratorPrototype, methods, KEY;\n        if (anyNativeIterator) {\n          CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n          if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n            if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n              if (setPrototypeOf) {\n                setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n              } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {\n                createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);\n              }\n            }\n            setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n            if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n          }\n        }\n        if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n          INCORRECT_VALUES_NAME = true;\n          defaultIterator = function values() {\n            return nativeIterator.call(this);\n          };\n        }\n        if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n          createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);\n        }\n        Iterators[NAME] = defaultIterator;\n        if (DEFAULT) {\n          methods = {\n            values: getIterationMethod(VALUES),\n            keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n            entries: getIterationMethod(ENTRIES)\n          };\n          if (FORCED) for (KEY in methods) {\n            if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n              redefine(IterablePrototype, KEY, methods[KEY]);\n            }\n          } else $({\n            target: NAME,\n            proto: true,\n            forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME\n          }, methods);\n        }\n        return methods;\n      };\n\n      /***/\n    }, /* 80 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var IteratorPrototype = __w_pdfjs_require__(81).IteratorPrototype;\n      var create = __w_pdfjs_require__(71);\n      var createPropertyDescriptor = __w_pdfjs_require__(16);\n      var setToStringTag = __w_pdfjs_require__(85);\n      var Iterators = __w_pdfjs_require__(86);\n      var returnThis = function () {\n        return this;\n      };\n      module.exports = function (IteratorConstructor, NAME, next) {\n        var TO_STRING_TAG = NAME + ' Iterator';\n        IteratorConstructor.prototype = create(IteratorPrototype, {\n          next: createPropertyDescriptor(1, next)\n        });\n        setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n        Iterators[TO_STRING_TAG] = returnThis;\n        return IteratorConstructor;\n      };\n\n      /***/\n    }, /* 81 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var getPrototypeOf = __w_pdfjs_require__(82);\n      var createNonEnumerableProperty = __w_pdfjs_require__(26);\n      var has = __w_pdfjs_require__(23);\n      var wellKnownSymbol = __w_pdfjs_require__(57);\n      var IS_PURE = __w_pdfjs_require__(37);\n      var ITERATOR = wellKnownSymbol('iterator');\n      var BUGGY_SAFARI_ITERATORS = false;\n      var returnThis = function () {\n        return this;\n      };\n      var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n      if ([].keys) {\n        arrayIterator = [].keys();\n        if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;else {\n          PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n          if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n        }\n      }\n      if (IteratorPrototype == undefined) IteratorPrototype = {};\n      if (!IS_PURE && !has(IteratorPrototype, ITERATOR)) {\n        createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);\n      }\n      module.exports = {\n        IteratorPrototype: IteratorPrototype,\n        BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n      };\n\n      /***/\n    }, /* 82 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var has = __w_pdfjs_require__(23);\n      var toObject = __w_pdfjs_require__(83);\n      var sharedKey = __w_pdfjs_require__(35);\n      var CORRECT_PROTOTYPE_GETTER = __w_pdfjs_require__(84);\n      var IE_PROTO = sharedKey('IE_PROTO');\n      var ObjectPrototype = Object.prototype;\n      module.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n        O = toObject(O);\n        if (has(O, IE_PROTO)) return O[IE_PROTO];\n        if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n          return O.constructor.prototype;\n        }\n        return O instanceof Object ? ObjectPrototype : null;\n      };\n\n      /***/\n    }, /* 83 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var requireObjectCoercible = __w_pdfjs_require__(20);\n      module.exports = function (argument) {\n        return Object(requireObjectCoercible(argument));\n      };\n\n      /***/\n    }, /* 84 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var fails = __w_pdfjs_require__(14);\n      module.exports = !fails(function () {\n        function F() {}\n        F.prototype.constructor = null;\n        return Object.getPrototypeOf(new F()) !== F.prototype;\n      });\n\n      /***/\n    }, /* 85 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var defineProperty = __w_pdfjs_require__(27).f;\n      var has = __w_pdfjs_require__(23);\n      var wellKnownSymbol = __w_pdfjs_require__(57);\n      var TO_STRING_TAG = wellKnownSymbol('toStringTag');\n      module.exports = function (it, TAG, STATIC) {\n        if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {\n          defineProperty(it, TO_STRING_TAG, {\n            configurable: true,\n            value: TAG\n          });\n        }\n      };\n\n      /***/\n    }, /* 86 */\n    /***/function (module, exports) {\n      module.exports = {};\n\n      /***/\n    }, /* 87 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var anObject = __w_pdfjs_require__(28);\n      var aPossiblePrototype = __w_pdfjs_require__(88);\n      module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n        var CORRECT_SETTER = false;\n        var test = {};\n        var setter;\n        try {\n          setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n          setter.call(test, []);\n          CORRECT_SETTER = test instanceof Array;\n        } catch (error) {}\n        return function setPrototypeOf(O, proto) {\n          anObject(O);\n          aPossiblePrototype(proto);\n          if (CORRECT_SETTER) setter.call(O, proto);else O.__proto__ = proto;\n          return O;\n        };\n      }() : undefined);\n\n      /***/\n    }, /* 88 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var isObject = __w_pdfjs_require__(22);\n      module.exports = function (it) {\n        if (!isObject(it) && it !== null) {\n          throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n        }\n        return it;\n      };\n\n      /***/\n    }, /* 89 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var $ = __w_pdfjs_require__(10);\n      var from = __w_pdfjs_require__(90);\n      var checkCorrectnessOfIteration = __w_pdfjs_require__(97);\n      var INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {\n        Array.from(iterable);\n      });\n      $({\n        target: 'Array',\n        stat: true,\n        forced: INCORRECT_ITERATION\n      }, {\n        from: from\n      });\n\n      /***/\n    }, /* 90 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var bind = __w_pdfjs_require__(62);\n      var toObject = __w_pdfjs_require__(83);\n      var callWithSafeIterationClosing = __w_pdfjs_require__(91);\n      var isArrayIteratorMethod = __w_pdfjs_require__(92);\n      var toLength = __w_pdfjs_require__(47);\n      var createProperty = __w_pdfjs_require__(93);\n      var getIteratorMethod = __w_pdfjs_require__(94);\n      module.exports = function from(arrayLike) {\n        var O = toObject(arrayLike);\n        var C = typeof this == 'function' ? this : Array;\n        var argumentsLength = arguments.length;\n        var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n        var mapping = mapfn !== undefined;\n        var iteratorMethod = getIteratorMethod(O);\n        var index = 0;\n        var length, result, step, iterator, next, value;\n        if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);\n        if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {\n          iterator = iteratorMethod.call(O);\n          next = iterator.next;\n          result = new C();\n          for (; !(step = next.call(iterator)).done; index++) {\n            value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;\n            createProperty(result, index, value);\n          }\n        } else {\n          length = toLength(O.length);\n          result = new C(length);\n          for (; length > index; index++) {\n            value = mapping ? mapfn(O[index], index) : O[index];\n            createProperty(result, index, value);\n          }\n        }\n        result.length = index;\n        return result;\n      };\n\n      /***/\n    }, /* 91 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var anObject = __w_pdfjs_require__(28);\n      module.exports = function (iterator, fn, value, ENTRIES) {\n        try {\n          return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n        } catch (error) {\n          var returnMethod = iterator['return'];\n          if (returnMethod !== undefined) anObject(returnMethod.call(iterator));\n          throw error;\n        }\n      };\n\n      /***/\n    }, /* 92 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var wellKnownSymbol = __w_pdfjs_require__(57);\n      var Iterators = __w_pdfjs_require__(86);\n      var ITERATOR = wellKnownSymbol('iterator');\n      var ArrayPrototype = Array.prototype;\n      module.exports = function (it) {\n        return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n      };\n\n      /***/\n    }, /* 93 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var toPrimitive = __w_pdfjs_require__(21);\n      var definePropertyModule = __w_pdfjs_require__(27);\n      var createPropertyDescriptor = __w_pdfjs_require__(16);\n      module.exports = function (object, key, value) {\n        var propertyKey = toPrimitive(key);\n        if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));else object[propertyKey] = value;\n      };\n\n      /***/\n    }, /* 94 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var classof = __w_pdfjs_require__(95);\n      var Iterators = __w_pdfjs_require__(86);\n      var wellKnownSymbol = __w_pdfjs_require__(57);\n      var ITERATOR = wellKnownSymbol('iterator');\n      module.exports = function (it) {\n        if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];\n      };\n\n      /***/\n    }, /* 95 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var TO_STRING_TAG_SUPPORT = __w_pdfjs_require__(96);\n      var classofRaw = __w_pdfjs_require__(19);\n      var wellKnownSymbol = __w_pdfjs_require__(57);\n      var TO_STRING_TAG = wellKnownSymbol('toStringTag');\n      var CORRECT_ARGUMENTS = classofRaw(function () {\n        return arguments;\n      }()) == 'Arguments';\n      var tryGet = function (it, key) {\n        try {\n          return it[key];\n        } catch (error) {}\n      };\n      module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n        var O, tag, result;\n        return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag : CORRECT_ARGUMENTS ? classofRaw(O) : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n      };\n\n      /***/\n    }, /* 96 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var wellKnownSymbol = __w_pdfjs_require__(57);\n      var TO_STRING_TAG = wellKnownSymbol('toStringTag');\n      var test = {};\n      test[TO_STRING_TAG] = 'z';\n      module.exports = String(test) === '[object z]';\n\n      /***/\n    }, /* 97 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var wellKnownSymbol = __w_pdfjs_require__(57);\n      var ITERATOR = wellKnownSymbol('iterator');\n      var SAFE_CLOSING = false;\n      try {\n        var called = 0;\n        var iteratorWithReturn = {\n          next: function () {\n            return {\n              done: !!called++\n            };\n          },\n          'return': function () {\n            SAFE_CLOSING = true;\n          }\n        };\n        iteratorWithReturn[ITERATOR] = function () {\n          return this;\n        };\n        Array.from(iteratorWithReturn, function () {\n          throw 2;\n        });\n      } catch (error) {}\n      module.exports = function (exec, SKIP_CLOSING) {\n        if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n        var ITERATION_SUPPORT = false;\n        try {\n          var object = {};\n          object[ITERATOR] = function () {\n            return {\n              next: function () {\n                return {\n                  done: ITERATION_SUPPORT = true\n                };\n              }\n            };\n          };\n          exec(object);\n        } catch (error) {}\n        return ITERATION_SUPPORT;\n      };\n\n      /***/\n    }, /* 98 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      __w_pdfjs_require__(99);\n      var path = __w_pdfjs_require__(43);\n      module.exports = path.Object.assign;\n\n      /***/\n    }, /* 99 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var $ = __w_pdfjs_require__(10);\n      var assign = __w_pdfjs_require__(100);\n      $({\n        target: 'Object',\n        stat: true,\n        forced: Object.assign !== assign\n      }, {\n        assign: assign\n      });\n\n      /***/\n    }, /* 100 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var DESCRIPTORS = __w_pdfjs_require__(13);\n      var fails = __w_pdfjs_require__(14);\n      var objectKeys = __w_pdfjs_require__(73);\n      var getOwnPropertySymbolsModule = __w_pdfjs_require__(51);\n      var propertyIsEnumerableModule = __w_pdfjs_require__(15);\n      var toObject = __w_pdfjs_require__(83);\n      var IndexedObject = __w_pdfjs_require__(18);\n      var nativeAssign = Object.assign;\n      var defineProperty = Object.defineProperty;\n      module.exports = !nativeAssign || fails(function () {\n        if (DESCRIPTORS && nativeAssign({\n          b: 1\n        }, nativeAssign(defineProperty({}, 'a', {\n          enumerable: true,\n          get: function () {\n            defineProperty(this, 'b', {\n              value: 3,\n              enumerable: false\n            });\n          }\n        }), {\n          b: 2\n        })).b !== 1) return true;\n        var A = {};\n        var B = {};\n        var symbol = Symbol();\n        var alphabet = 'abcdefghijklmnopqrst';\n        A[symbol] = 7;\n        alphabet.split('').forEach(function (chr) {\n          B[chr] = chr;\n        });\n        return nativeAssign({}, A)[symbol] != 7 || objectKeys(nativeAssign({}, B)).join('') != alphabet;\n      }) ? function assign(target, source) {\n        var T = toObject(target);\n        var argumentsLength = arguments.length;\n        var index = 1;\n        var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n        var propertyIsEnumerable = propertyIsEnumerableModule.f;\n        while (argumentsLength > index) {\n          var S = IndexedObject(arguments[index++]);\n          var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);\n          var length = keys.length;\n          var j = 0;\n          var key;\n          while (length > j) {\n            key = keys[j++];\n            if (!DESCRIPTORS || propertyIsEnumerable.call(S, key)) T[key] = S[key];\n          }\n        }\n        return T;\n      } : nativeAssign;\n\n      /***/\n    }, /* 101 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      __w_pdfjs_require__(102);\n      var path = __w_pdfjs_require__(43);\n      module.exports = path.Math.log2;\n\n      /***/\n    }, /* 102 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var $ = __w_pdfjs_require__(10);\n      var log = Math.log;\n      var LN2 = Math.LN2;\n      $({\n        target: 'Math',\n        stat: true\n      }, {\n        log2: function log2(x) {\n          return log(x) / LN2;\n        }\n      });\n\n      /***/\n    }, /* 103 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      __w_pdfjs_require__(104);\n      var path = __w_pdfjs_require__(43);\n      module.exports = path.Number.isNaN;\n\n      /***/\n    }, /* 104 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var $ = __w_pdfjs_require__(10);\n      $({\n        target: 'Number',\n        stat: true\n      }, {\n        isNaN: function isNaN(number) {\n          return number != number;\n        }\n      });\n\n      /***/\n    }, /* 105 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      __w_pdfjs_require__(106);\n      var path = __w_pdfjs_require__(43);\n      module.exports = path.Number.isInteger;\n\n      /***/\n    }, /* 106 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var $ = __w_pdfjs_require__(10);\n      var isInteger = __w_pdfjs_require__(107);\n      $({\n        target: 'Number',\n        stat: true\n      }, {\n        isInteger: isInteger\n      });\n\n      /***/\n    }, /* 107 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var isObject = __w_pdfjs_require__(22);\n      var floor = Math.floor;\n      module.exports = function isInteger(it) {\n        return !isObject(it) && isFinite(it) && floor(it) === it;\n      };\n\n      /***/\n    }, /* 108 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      __w_pdfjs_require__(109);\n\n      /***/\n    }, /* 109 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var ArrayBufferViewCore = __w_pdfjs_require__(110);\n      var speciesConstructor = __w_pdfjs_require__(112);\n      var fails = __w_pdfjs_require__(14);\n      var aTypedArray = ArrayBufferViewCore.aTypedArray;\n      var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;\n      var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n      var $slice = [].slice;\n      var FORCED = fails(function () {\n        new Int8Array(1).slice();\n      });\n      exportTypedArrayMethod('slice', function slice(start, end) {\n        var list = $slice.call(aTypedArray(this), start, end);\n        var C = speciesConstructor(this, this.constructor);\n        var index = 0;\n        var length = list.length;\n        var result = new (aTypedArrayConstructor(C))(length);\n        while (length > index) result[index] = list[index++];\n        return result;\n      }, FORCED);\n\n      /***/\n    }, /* 110 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var NATIVE_ARRAY_BUFFER = __w_pdfjs_require__(111);\n      var DESCRIPTORS = __w_pdfjs_require__(13);\n      var global = __w_pdfjs_require__(11);\n      var isObject = __w_pdfjs_require__(22);\n      var has = __w_pdfjs_require__(23);\n      var classof = __w_pdfjs_require__(95);\n      var createNonEnumerableProperty = __w_pdfjs_require__(26);\n      var redefine = __w_pdfjs_require__(29);\n      var defineProperty = __w_pdfjs_require__(27).f;\n      var getPrototypeOf = __w_pdfjs_require__(82);\n      var setPrototypeOf = __w_pdfjs_require__(87);\n      var wellKnownSymbol = __w_pdfjs_require__(57);\n      var uid = __w_pdfjs_require__(38);\n      var Int8Array = global.Int8Array;\n      var Int8ArrayPrototype = Int8Array && Int8Array.prototype;\n      var Uint8ClampedArray = global.Uint8ClampedArray;\n      var Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;\n      var TypedArray = Int8Array && getPrototypeOf(Int8Array);\n      var TypedArrayPrototype = Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);\n      var ObjectPrototype = Object.prototype;\n      var isPrototypeOf = ObjectPrototype.isPrototypeOf;\n      var TO_STRING_TAG = wellKnownSymbol('toStringTag');\n      var TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG');\n      var NATIVE_ARRAY_BUFFER_VIEWS = NATIVE_ARRAY_BUFFER && !!setPrototypeOf && classof(global.opera) !== 'Opera';\n      var TYPED_ARRAY_TAG_REQIRED = false;\n      var NAME;\n      var TypedArrayConstructorsList = {\n        Int8Array: 1,\n        Uint8Array: 1,\n        Uint8ClampedArray: 1,\n        Int16Array: 2,\n        Uint16Array: 2,\n        Int32Array: 4,\n        Uint32Array: 4,\n        Float32Array: 4,\n        Float64Array: 8\n      };\n      var isView = function isView(it) {\n        var klass = classof(it);\n        return klass === 'DataView' || has(TypedArrayConstructorsList, klass);\n      };\n      var isTypedArray = function (it) {\n        return isObject(it) && has(TypedArrayConstructorsList, classof(it));\n      };\n      var aTypedArray = function (it) {\n        if (isTypedArray(it)) return it;\n        throw TypeError('Target is not a typed array');\n      };\n      var aTypedArrayConstructor = function (C) {\n        if (setPrototypeOf) {\n          if (isPrototypeOf.call(TypedArray, C)) return C;\n        } else for (var ARRAY in TypedArrayConstructorsList) if (has(TypedArrayConstructorsList, NAME)) {\n          var TypedArrayConstructor = global[ARRAY];\n          if (TypedArrayConstructor && (C === TypedArrayConstructor || isPrototypeOf.call(TypedArrayConstructor, C))) {\n            return C;\n          }\n        }\n        throw TypeError('Target is not a typed array constructor');\n      };\n      var exportTypedArrayMethod = function (KEY, property, forced) {\n        if (!DESCRIPTORS) return;\n        if (forced) for (var ARRAY in TypedArrayConstructorsList) {\n          var TypedArrayConstructor = global[ARRAY];\n          if (TypedArrayConstructor && has(TypedArrayConstructor.prototype, KEY)) {\n            delete TypedArrayConstructor.prototype[KEY];\n          }\n        }\n        if (!TypedArrayPrototype[KEY] || forced) {\n          redefine(TypedArrayPrototype, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property);\n        }\n      };\n      var exportTypedArrayStaticMethod = function (KEY, property, forced) {\n        var ARRAY, TypedArrayConstructor;\n        if (!DESCRIPTORS) return;\n        if (setPrototypeOf) {\n          if (forced) for (ARRAY in TypedArrayConstructorsList) {\n            TypedArrayConstructor = global[ARRAY];\n            if (TypedArrayConstructor && has(TypedArrayConstructor, KEY)) {\n              delete TypedArrayConstructor[KEY];\n            }\n          }\n          if (!TypedArray[KEY] || forced) {\n            try {\n              return redefine(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && Int8Array[KEY] || property);\n            } catch (error) {}\n          } else return;\n        }\n        for (ARRAY in TypedArrayConstructorsList) {\n          TypedArrayConstructor = global[ARRAY];\n          if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {\n            redefine(TypedArrayConstructor, KEY, property);\n          }\n        }\n      };\n      for (NAME in TypedArrayConstructorsList) {\n        if (!global[NAME]) NATIVE_ARRAY_BUFFER_VIEWS = false;\n      }\n      if (!NATIVE_ARRAY_BUFFER_VIEWS || typeof TypedArray != 'function' || TypedArray === Function.prototype) {\n        TypedArray = function TypedArray() {\n          throw TypeError('Incorrect invocation');\n        };\n        if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n          if (global[NAME]) setPrototypeOf(global[NAME], TypedArray);\n        }\n      }\n      if (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype) {\n        TypedArrayPrototype = TypedArray.prototype;\n        if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n          if (global[NAME]) setPrototypeOf(global[NAME].prototype, TypedArrayPrototype);\n        }\n      }\n      if (NATIVE_ARRAY_BUFFER_VIEWS && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {\n        setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);\n      }\n      if (DESCRIPTORS && !has(TypedArrayPrototype, TO_STRING_TAG)) {\n        TYPED_ARRAY_TAG_REQIRED = true;\n        defineProperty(TypedArrayPrototype, TO_STRING_TAG, {\n          get: function () {\n            return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;\n          }\n        });\n        for (NAME in TypedArrayConstructorsList) if (global[NAME]) {\n          createNonEnumerableProperty(global[NAME], TYPED_ARRAY_TAG, NAME);\n        }\n      }\n      module.exports = {\n        NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,\n        TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQIRED && TYPED_ARRAY_TAG,\n        aTypedArray: aTypedArray,\n        aTypedArrayConstructor: aTypedArrayConstructor,\n        exportTypedArrayMethod: exportTypedArrayMethod,\n        exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,\n        isView: isView,\n        isTypedArray: isTypedArray,\n        TypedArray: TypedArray,\n        TypedArrayPrototype: TypedArrayPrototype\n      };\n\n      /***/\n    }, /* 111 */\n    /***/function (module, exports) {\n      module.exports = typeof ArrayBuffer !== 'undefined' && typeof DataView !== 'undefined';\n\n      /***/\n    }, /* 112 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var anObject = __w_pdfjs_require__(28);\n      var aFunction = __w_pdfjs_require__(63);\n      var wellKnownSymbol = __w_pdfjs_require__(57);\n      var SPECIES = wellKnownSymbol('species');\n      module.exports = function (O, defaultConstructor) {\n        var C = anObject(O).constructor;\n        var S;\n        return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);\n      };\n\n      /***/\n    }, /* 113 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      __w_pdfjs_require__(114);\n      __w_pdfjs_require__(77);\n      __w_pdfjs_require__(116);\n      __w_pdfjs_require__(119);\n      __w_pdfjs_require__(134);\n      __w_pdfjs_require__(135);\n      var path = __w_pdfjs_require__(43);\n      module.exports = path.Promise;\n\n      /***/\n    }, /* 114 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var TO_STRING_TAG_SUPPORT = __w_pdfjs_require__(96);\n      var redefine = __w_pdfjs_require__(29);\n      var toString = __w_pdfjs_require__(115);\n      if (!TO_STRING_TAG_SUPPORT) {\n        redefine(Object.prototype, 'toString', toString, {\n          unsafe: true\n        });\n      }\n\n      /***/\n    }, /* 115 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var TO_STRING_TAG_SUPPORT = __w_pdfjs_require__(96);\n      var classof = __w_pdfjs_require__(95);\n      module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {\n        return '[object ' + classof(this) + ']';\n      };\n\n      /***/\n    }, /* 116 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var global = __w_pdfjs_require__(11);\n      var DOMIterables = __w_pdfjs_require__(117);\n      var ArrayIteratorMethods = __w_pdfjs_require__(118);\n      var createNonEnumerableProperty = __w_pdfjs_require__(26);\n      var wellKnownSymbol = __w_pdfjs_require__(57);\n      var ITERATOR = wellKnownSymbol('iterator');\n      var TO_STRING_TAG = wellKnownSymbol('toStringTag');\n      var ArrayValues = ArrayIteratorMethods.values;\n      for (var COLLECTION_NAME in DOMIterables) {\n        var Collection = global[COLLECTION_NAME];\n        var CollectionPrototype = Collection && Collection.prototype;\n        if (CollectionPrototype) {\n          if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n            createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\n          } catch (error) {\n            CollectionPrototype[ITERATOR] = ArrayValues;\n          }\n          if (!CollectionPrototype[TO_STRING_TAG]) {\n            createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n          }\n          if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n            if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n              createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n            } catch (error) {\n              CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n            }\n          }\n        }\n      }\n\n      /***/\n    }, /* 117 */\n    /***/function (module, exports) {\n      module.exports = {\n        CSSRuleList: 0,\n        CSSStyleDeclaration: 0,\n        CSSValueList: 0,\n        ClientRectList: 0,\n        DOMRectList: 0,\n        DOMStringList: 0,\n        DOMTokenList: 1,\n        DataTransferItemList: 0,\n        FileList: 0,\n        HTMLAllCollection: 0,\n        HTMLCollection: 0,\n        HTMLFormElement: 0,\n        HTMLSelectElement: 0,\n        MediaList: 0,\n        MimeTypeArray: 0,\n        NamedNodeMap: 0,\n        NodeList: 1,\n        PaintRequestList: 0,\n        Plugin: 0,\n        PluginArray: 0,\n        SVGLengthList: 0,\n        SVGNumberList: 0,\n        SVGPathSegList: 0,\n        SVGPointList: 0,\n        SVGStringList: 0,\n        SVGTransformList: 0,\n        SourceBufferList: 0,\n        StyleSheetList: 0,\n        TextTrackCueList: 0,\n        TextTrackList: 0,\n        TouchList: 0\n      };\n\n      /***/\n    }, /* 118 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var toIndexedObject = __w_pdfjs_require__(17);\n      var addToUnscopables = __w_pdfjs_require__(70);\n      var Iterators = __w_pdfjs_require__(86);\n      var InternalStateModule = __w_pdfjs_require__(33);\n      var defineIterator = __w_pdfjs_require__(79);\n      var ARRAY_ITERATOR = 'Array Iterator';\n      var setInternalState = InternalStateModule.set;\n      var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n      module.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n        setInternalState(this, {\n          type: ARRAY_ITERATOR,\n          target: toIndexedObject(iterated),\n          index: 0,\n          kind: kind\n        });\n      }, function () {\n        var state = getInternalState(this);\n        var target = state.target;\n        var kind = state.kind;\n        var index = state.index++;\n        if (!target || index >= target.length) {\n          state.target = undefined;\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        if (kind == 'keys') return {\n          value: index,\n          done: false\n        };\n        if (kind == 'values') return {\n          value: target[index],\n          done: false\n        };\n        return {\n          value: [index, target[index]],\n          done: false\n        };\n      }, 'values');\n      Iterators.Arguments = Iterators.Array;\n      addToUnscopables('keys');\n      addToUnscopables('values');\n      addToUnscopables('entries');\n\n      /***/\n    }, /* 119 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var $ = __w_pdfjs_require__(10);\n      var IS_PURE = __w_pdfjs_require__(37);\n      var global = __w_pdfjs_require__(11);\n      var getBuiltIn = __w_pdfjs_require__(42);\n      var NativePromise = __w_pdfjs_require__(120);\n      var redefine = __w_pdfjs_require__(29);\n      var redefineAll = __w_pdfjs_require__(121);\n      var setToStringTag = __w_pdfjs_require__(85);\n      var setSpecies = __w_pdfjs_require__(122);\n      var isObject = __w_pdfjs_require__(22);\n      var aFunction = __w_pdfjs_require__(63);\n      var anInstance = __w_pdfjs_require__(123);\n      var classof = __w_pdfjs_require__(19);\n      var inspectSource = __w_pdfjs_require__(31);\n      var iterate = __w_pdfjs_require__(124);\n      var checkCorrectnessOfIteration = __w_pdfjs_require__(97);\n      var speciesConstructor = __w_pdfjs_require__(112);\n      var task = __w_pdfjs_require__(125).set;\n      var microtask = __w_pdfjs_require__(128);\n      var promiseResolve = __w_pdfjs_require__(129);\n      var hostReportErrors = __w_pdfjs_require__(131);\n      var newPromiseCapabilityModule = __w_pdfjs_require__(130);\n      var perform = __w_pdfjs_require__(132);\n      var InternalStateModule = __w_pdfjs_require__(33);\n      var isForced = __w_pdfjs_require__(52);\n      var wellKnownSymbol = __w_pdfjs_require__(57);\n      var V8_VERSION = __w_pdfjs_require__(133);\n      var SPECIES = wellKnownSymbol('species');\n      var PROMISE = 'Promise';\n      var getInternalState = InternalStateModule.get;\n      var setInternalState = InternalStateModule.set;\n      var getInternalPromiseState = InternalStateModule.getterFor(PROMISE);\n      var PromiseConstructor = NativePromise;\n      var TypeError = global.TypeError;\n      var document = global.document;\n      var process = global.process;\n      var $fetch = getBuiltIn('fetch');\n      var newPromiseCapability = newPromiseCapabilityModule.f;\n      var newGenericPromiseCapability = newPromiseCapability;\n      var IS_NODE = classof(process) == 'process';\n      var DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);\n      var UNHANDLED_REJECTION = 'unhandledrejection';\n      var REJECTION_HANDLED = 'rejectionhandled';\n      var PENDING = 0;\n      var FULFILLED = 1;\n      var REJECTED = 2;\n      var HANDLED = 1;\n      var UNHANDLED = 2;\n      var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;\n      var FORCED = isForced(PROMISE, function () {\n        var GLOBAL_CORE_JS_PROMISE = inspectSource(PromiseConstructor) !== String(PromiseConstructor);\n        if (!GLOBAL_CORE_JS_PROMISE) {\n          if (V8_VERSION === 66) return true;\n          if (!IS_NODE && typeof PromiseRejectionEvent != 'function') return true;\n        }\n        if (IS_PURE && !PromiseConstructor.prototype['finally']) return true;\n        if (V8_VERSION >= 51 && /native code/.test(PromiseConstructor)) return false;\n        var promise = PromiseConstructor.resolve(1);\n        var FakePromise = function (exec) {\n          exec(function () {}, function () {});\n        };\n        var constructor = promise.constructor = {};\n        constructor[SPECIES] = FakePromise;\n        return !(promise.then(function () {}) instanceof FakePromise);\n      });\n      var INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {\n        PromiseConstructor.all(iterable)['catch'](function () {});\n      });\n      var isThenable = function (it) {\n        var then;\n        return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n      };\n      var notify = function (promise, state, isReject) {\n        if (state.notified) return;\n        state.notified = true;\n        var chain = state.reactions;\n        microtask(function () {\n          var value = state.value;\n          var ok = state.state == FULFILLED;\n          var index = 0;\n          while (chain.length > index) {\n            var reaction = chain[index++];\n            var handler = ok ? reaction.ok : reaction.fail;\n            var resolve = reaction.resolve;\n            var reject = reaction.reject;\n            var domain = reaction.domain;\n            var result, then, exited;\n            try {\n              if (handler) {\n                if (!ok) {\n                  if (state.rejection === UNHANDLED) onHandleUnhandled(promise, state);\n                  state.rejection = HANDLED;\n                }\n                if (handler === true) result = value;else {\n                  if (domain) domain.enter();\n                  result = handler(value);\n                  if (domain) {\n                    domain.exit();\n                    exited = true;\n                  }\n                }\n                if (result === reaction.promise) {\n                  reject(TypeError('Promise-chain cycle'));\n                } else if (then = isThenable(result)) {\n                  then.call(result, resolve, reject);\n                } else resolve(result);\n              } else reject(value);\n            } catch (error) {\n              if (domain && !exited) domain.exit();\n              reject(error);\n            }\n          }\n          state.reactions = [];\n          state.notified = false;\n          if (isReject && !state.rejection) onUnhandled(promise, state);\n        });\n      };\n      var dispatchEvent = function (name, promise, reason) {\n        var event, handler;\n        if (DISPATCH_EVENT) {\n          event = document.createEvent('Event');\n          event.promise = promise;\n          event.reason = reason;\n          event.initEvent(name, false, true);\n          global.dispatchEvent(event);\n        } else event = {\n          promise: promise,\n          reason: reason\n        };\n        if (handler = global['on' + name]) handler(event);else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);\n      };\n      var onUnhandled = function (promise, state) {\n        task.call(global, function () {\n          var value = state.value;\n          var IS_UNHANDLED = isUnhandled(state);\n          var result;\n          if (IS_UNHANDLED) {\n            result = perform(function () {\n              if (IS_NODE) {\n                process.emit('unhandledRejection', value, promise);\n              } else dispatchEvent(UNHANDLED_REJECTION, promise, value);\n            });\n            state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;\n            if (result.error) throw result.value;\n          }\n        });\n      };\n      var isUnhandled = function (state) {\n        return state.rejection !== HANDLED && !state.parent;\n      };\n      var onHandleUnhandled = function (promise, state) {\n        task.call(global, function () {\n          if (IS_NODE) {\n            process.emit('rejectionHandled', promise);\n          } else dispatchEvent(REJECTION_HANDLED, promise, state.value);\n        });\n      };\n      var bind = function (fn, promise, state, unwrap) {\n        return function (value) {\n          fn(promise, state, value, unwrap);\n        };\n      };\n      var internalReject = function (promise, state, value, unwrap) {\n        if (state.done) return;\n        state.done = true;\n        if (unwrap) state = unwrap;\n        state.value = value;\n        state.state = REJECTED;\n        notify(promise, state, true);\n      };\n      var internalResolve = function (promise, state, value, unwrap) {\n        if (state.done) return;\n        state.done = true;\n        if (unwrap) state = unwrap;\n        try {\n          if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n          var then = isThenable(value);\n          if (then) {\n            microtask(function () {\n              var wrapper = {\n                done: false\n              };\n              try {\n                then.call(value, bind(internalResolve, promise, wrapper, state), bind(internalReject, promise, wrapper, state));\n              } catch (error) {\n                internalReject(promise, wrapper, error, state);\n              }\n            });\n          } else {\n            state.value = value;\n            state.state = FULFILLED;\n            notify(promise, state, false);\n          }\n        } catch (error) {\n          internalReject(promise, {\n            done: false\n          }, error, state);\n        }\n      };\n      if (FORCED) {\n        PromiseConstructor = function Promise(executor) {\n          anInstance(this, PromiseConstructor, PROMISE);\n          aFunction(executor);\n          Internal.call(this);\n          var state = getInternalState(this);\n          try {\n            executor(bind(internalResolve, this, state), bind(internalReject, this, state));\n          } catch (error) {\n            internalReject(this, state, error);\n          }\n        };\n        Internal = function Promise(executor) {\n          setInternalState(this, {\n            type: PROMISE,\n            done: false,\n            notified: false,\n            parent: false,\n            reactions: [],\n            rejection: false,\n            state: PENDING,\n            value: undefined\n          });\n        };\n        Internal.prototype = redefineAll(PromiseConstructor.prototype, {\n          then: function then(onFulfilled, onRejected) {\n            var state = getInternalPromiseState(this);\n            var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));\n            reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n            reaction.fail = typeof onRejected == 'function' && onRejected;\n            reaction.domain = IS_NODE ? process.domain : undefined;\n            state.parent = true;\n            state.reactions.push(reaction);\n            if (state.state != PENDING) notify(this, state, false);\n            return reaction.promise;\n          },\n          'catch': function (onRejected) {\n            return this.then(undefined, onRejected);\n          }\n        });\n        OwnPromiseCapability = function () {\n          var promise = new Internal();\n          var state = getInternalState(promise);\n          this.promise = promise;\n          this.resolve = bind(internalResolve, promise, state);\n          this.reject = bind(internalReject, promise, state);\n        };\n        newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n          return C === PromiseConstructor || C === PromiseWrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);\n        };\n        if (!IS_PURE && typeof NativePromise == 'function') {\n          nativeThen = NativePromise.prototype.then;\n          redefine(NativePromise.prototype, 'then', function then(onFulfilled, onRejected) {\n            var that = this;\n            return new PromiseConstructor(function (resolve, reject) {\n              nativeThen.call(that, resolve, reject);\n            }).then(onFulfilled, onRejected);\n          }, {\n            unsafe: true\n          });\n          if (typeof $fetch == 'function') $({\n            global: true,\n            enumerable: true,\n            forced: true\n          }, {\n            fetch: function fetch(input) {\n              return promiseResolve(PromiseConstructor, $fetch.apply(global, arguments));\n            }\n          });\n        }\n      }\n      $({\n        global: true,\n        wrap: true,\n        forced: FORCED\n      }, {\n        Promise: PromiseConstructor\n      });\n      setToStringTag(PromiseConstructor, PROMISE, false, true);\n      setSpecies(PROMISE);\n      PromiseWrapper = getBuiltIn(PROMISE);\n      $({\n        target: PROMISE,\n        stat: true,\n        forced: FORCED\n      }, {\n        reject: function reject(r) {\n          var capability = newPromiseCapability(this);\n          capability.reject.call(undefined, r);\n          return capability.promise;\n        }\n      });\n      $({\n        target: PROMISE,\n        stat: true,\n        forced: IS_PURE || FORCED\n      }, {\n        resolve: function resolve(x) {\n          return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);\n        }\n      });\n      $({\n        target: PROMISE,\n        stat: true,\n        forced: INCORRECT_ITERATION\n      }, {\n        all: function all(iterable) {\n          var C = this;\n          var capability = newPromiseCapability(C);\n          var resolve = capability.resolve;\n          var reject = capability.reject;\n          var result = perform(function () {\n            var $promiseResolve = aFunction(C.resolve);\n            var values = [];\n            var counter = 0;\n            var remaining = 1;\n            iterate(iterable, function (promise) {\n              var index = counter++;\n              var alreadyCalled = false;\n              values.push(undefined);\n              remaining++;\n              $promiseResolve.call(C, promise).then(function (value) {\n                if (alreadyCalled) return;\n                alreadyCalled = true;\n                values[index] = value;\n                --remaining || resolve(values);\n              }, reject);\n            });\n            --remaining || resolve(values);\n          });\n          if (result.error) reject(result.value);\n          return capability.promise;\n        },\n        race: function race(iterable) {\n          var C = this;\n          var capability = newPromiseCapability(C);\n          var reject = capability.reject;\n          var result = perform(function () {\n            var $promiseResolve = aFunction(C.resolve);\n            iterate(iterable, function (promise) {\n              $promiseResolve.call(C, promise).then(capability.resolve, reject);\n            });\n          });\n          if (result.error) reject(result.value);\n          return capability.promise;\n        }\n      });\n\n      /***/\n    }, /* 120 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var global = __w_pdfjs_require__(11);\n      module.exports = global.Promise;\n\n      /***/\n    }, /* 121 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var redefine = __w_pdfjs_require__(29);\n      module.exports = function (target, src, options) {\n        for (var key in src) redefine(target, key, src[key], options);\n        return target;\n      };\n\n      /***/\n    }, /* 122 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var getBuiltIn = __w_pdfjs_require__(42);\n      var definePropertyModule = __w_pdfjs_require__(27);\n      var wellKnownSymbol = __w_pdfjs_require__(57);\n      var DESCRIPTORS = __w_pdfjs_require__(13);\n      var SPECIES = wellKnownSymbol('species');\n      module.exports = function (CONSTRUCTOR_NAME) {\n        var Constructor = getBuiltIn(CONSTRUCTOR_NAME);\n        var defineProperty = definePropertyModule.f;\n        if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {\n          defineProperty(Constructor, SPECIES, {\n            configurable: true,\n            get: function () {\n              return this;\n            }\n          });\n        }\n      };\n\n      /***/\n    }, /* 123 */\n    /***/function (module, exports) {\n      module.exports = function (it, Constructor, name) {\n        if (!(it instanceof Constructor)) {\n          throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');\n        }\n        return it;\n      };\n\n      /***/\n    }, /* 124 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var anObject = __w_pdfjs_require__(28);\n      var isArrayIteratorMethod = __w_pdfjs_require__(92);\n      var toLength = __w_pdfjs_require__(47);\n      var bind = __w_pdfjs_require__(62);\n      var getIteratorMethod = __w_pdfjs_require__(94);\n      var callWithSafeIterationClosing = __w_pdfjs_require__(91);\n      var Result = function (stopped, result) {\n        this.stopped = stopped;\n        this.result = result;\n      };\n      var iterate = module.exports = function (iterable, fn, that, AS_ENTRIES, IS_ITERATOR) {\n        var boundFunction = bind(fn, that, AS_ENTRIES ? 2 : 1);\n        var iterator, iterFn, index, length, result, next, step;\n        if (IS_ITERATOR) {\n          iterator = iterable;\n        } else {\n          iterFn = getIteratorMethod(iterable);\n          if (typeof iterFn != 'function') throw TypeError('Target is not iterable');\n          if (isArrayIteratorMethod(iterFn)) {\n            for (index = 0, length = toLength(iterable.length); length > index; index++) {\n              result = AS_ENTRIES ? boundFunction(anObject(step = iterable[index])[0], step[1]) : boundFunction(iterable[index]);\n              if (result && result instanceof Result) return result;\n            }\n            return new Result(false);\n          }\n          iterator = iterFn.call(iterable);\n        }\n        next = iterator.next;\n        while (!(step = next.call(iterator)).done) {\n          result = callWithSafeIterationClosing(iterator, boundFunction, step.value, AS_ENTRIES);\n          if (typeof result == 'object' && result && result instanceof Result) return result;\n        }\n        return new Result(false);\n      };\n      iterate.stop = function (result) {\n        return new Result(true, result);\n      };\n\n      /***/\n    }, /* 125 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var global = __w_pdfjs_require__(11);\n      var fails = __w_pdfjs_require__(14);\n      var classof = __w_pdfjs_require__(19);\n      var bind = __w_pdfjs_require__(62);\n      var html = __w_pdfjs_require__(74);\n      var createElement = __w_pdfjs_require__(25);\n      var IS_IOS = __w_pdfjs_require__(126);\n      var location = global.location;\n      var set = global.setImmediate;\n      var clear = global.clearImmediate;\n      var process = global.process;\n      var MessageChannel = global.MessageChannel;\n      var Dispatch = global.Dispatch;\n      var counter = 0;\n      var queue = {};\n      var ONREADYSTATECHANGE = 'onreadystatechange';\n      var defer, channel, port;\n      var run = function (id) {\n        if (queue.hasOwnProperty(id)) {\n          var fn = queue[id];\n          delete queue[id];\n          fn();\n        }\n      };\n      var runner = function (id) {\n        return function () {\n          run(id);\n        };\n      };\n      var listener = function (event) {\n        run(event.data);\n      };\n      var post = function (id) {\n        global.postMessage(id + '', location.protocol + '//' + location.host);\n      };\n      if (!set || !clear) {\n        set = function setImmediate(fn) {\n          var args = [];\n          var i = 1;\n          while (arguments.length > i) args.push(arguments[i++]);\n          queue[++counter] = function () {\n            (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);\n          };\n          defer(counter);\n          return counter;\n        };\n        clear = function clearImmediate(id) {\n          delete queue[id];\n        };\n        if (classof(process) == 'process') {\n          defer = function (id) {\n            process.nextTick(runner(id));\n          };\n        } else if (Dispatch && Dispatch.now) {\n          defer = function (id) {\n            Dispatch.now(runner(id));\n          };\n        } else if (MessageChannel && !IS_IOS) {\n          channel = new MessageChannel();\n          port = channel.port2;\n          channel.port1.onmessage = listener;\n          defer = bind(port.postMessage, port, 1);\n        } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts && !fails(post) && location.protocol !== 'file:') {\n          defer = post;\n          global.addEventListener('message', listener, false);\n        } else if (ONREADYSTATECHANGE in createElement('script')) {\n          defer = function (id) {\n            html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {\n              html.removeChild(this);\n              run(id);\n            };\n          };\n        } else {\n          defer = function (id) {\n            setTimeout(runner(id), 0);\n          };\n        }\n      }\n      module.exports = {\n        set: set,\n        clear: clear\n      };\n\n      /***/\n    }, /* 126 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var userAgent = __w_pdfjs_require__(127);\n      module.exports = /(iphone|ipod|ipad).*applewebkit/i.test(userAgent);\n\n      /***/\n    }, /* 127 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var getBuiltIn = __w_pdfjs_require__(42);\n      module.exports = getBuiltIn('navigator', 'userAgent') || '';\n\n      /***/\n    }, /* 128 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var global = __w_pdfjs_require__(11);\n      var getOwnPropertyDescriptor = __w_pdfjs_require__(12).f;\n      var classof = __w_pdfjs_require__(19);\n      var macrotask = __w_pdfjs_require__(125).set;\n      var IS_IOS = __w_pdfjs_require__(126);\n      var MutationObserver = global.MutationObserver || global.WebKitMutationObserver;\n      var process = global.process;\n      var Promise = global.Promise;\n      var IS_NODE = classof(process) == 'process';\n      var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');\n      var queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;\n      var flush, head, last, notify, toggle, node, promise, then;\n      if (!queueMicrotask) {\n        flush = function () {\n          var parent, fn;\n          if (IS_NODE && (parent = process.domain)) parent.exit();\n          while (head) {\n            fn = head.fn;\n            head = head.next;\n            try {\n              fn();\n            } catch (error) {\n              if (head) notify();else last = undefined;\n              throw error;\n            }\n          }\n          last = undefined;\n          if (parent) parent.enter();\n        };\n        if (IS_NODE) {\n          notify = function () {\n            process.nextTick(flush);\n          };\n        } else if (MutationObserver && !IS_IOS) {\n          toggle = true;\n          node = document.createTextNode('');\n          new MutationObserver(flush).observe(node, {\n            characterData: true\n          });\n          notify = function () {\n            node.data = toggle = !toggle;\n          };\n        } else if (Promise && Promise.resolve) {\n          promise = Promise.resolve(undefined);\n          then = promise.then;\n          notify = function () {\n            then.call(promise, flush);\n          };\n        } else {\n          notify = function () {\n            macrotask.call(global, flush);\n          };\n        }\n      }\n      module.exports = queueMicrotask || function (fn) {\n        var task = {\n          fn: fn,\n          next: undefined\n        };\n        if (last) last.next = task;\n        if (!head) {\n          head = task;\n          notify();\n        }\n        last = task;\n      };\n\n      /***/\n    }, /* 129 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var anObject = __w_pdfjs_require__(28);\n      var isObject = __w_pdfjs_require__(22);\n      var newPromiseCapability = __w_pdfjs_require__(130);\n      module.exports = function (C, x) {\n        anObject(C);\n        if (isObject(x) && x.constructor === C) return x;\n        var promiseCapability = newPromiseCapability.f(C);\n        var resolve = promiseCapability.resolve;\n        resolve(x);\n        return promiseCapability.promise;\n      };\n\n      /***/\n    }, /* 130 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var aFunction = __w_pdfjs_require__(63);\n      var PromiseCapability = function (C) {\n        var resolve, reject;\n        this.promise = new C(function ($$resolve, $$reject) {\n          if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n          resolve = $$resolve;\n          reject = $$reject;\n        });\n        this.resolve = aFunction(resolve);\n        this.reject = aFunction(reject);\n      };\n      module.exports.f = function (C) {\n        return new PromiseCapability(C);\n      };\n\n      /***/\n    }, /* 131 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var global = __w_pdfjs_require__(11);\n      module.exports = function (a, b) {\n        var console = global.console;\n        if (console && console.error) {\n          arguments.length === 1 ? console.error(a) : console.error(a, b);\n        }\n      };\n\n      /***/\n    }, /* 132 */\n    /***/function (module, exports) {\n      module.exports = function (exec) {\n        try {\n          return {\n            error: false,\n            value: exec()\n          };\n        } catch (error) {\n          return {\n            error: true,\n            value: error\n          };\n        }\n      };\n\n      /***/\n    }, /* 133 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var global = __w_pdfjs_require__(11);\n      var userAgent = __w_pdfjs_require__(127);\n      var process = global.process;\n      var versions = process && process.versions;\n      var v8 = versions && versions.v8;\n      var match, version;\n      if (v8) {\n        match = v8.split('.');\n        version = match[0] + match[1];\n      } else if (userAgent) {\n        match = userAgent.match(/Edge\\/(\\d+)/);\n        if (!match || match[1] >= 74) {\n          match = userAgent.match(/Chrome\\/(\\d+)/);\n          if (match) version = match[1];\n        }\n      }\n      module.exports = version && +version;\n\n      /***/\n    }, /* 134 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var $ = __w_pdfjs_require__(10);\n      var aFunction = __w_pdfjs_require__(63);\n      var newPromiseCapabilityModule = __w_pdfjs_require__(130);\n      var perform = __w_pdfjs_require__(132);\n      var iterate = __w_pdfjs_require__(124);\n      $({\n        target: 'Promise',\n        stat: true\n      }, {\n        allSettled: function allSettled(iterable) {\n          var C = this;\n          var capability = newPromiseCapabilityModule.f(C);\n          var resolve = capability.resolve;\n          var reject = capability.reject;\n          var result = perform(function () {\n            var promiseResolve = aFunction(C.resolve);\n            var values = [];\n            var counter = 0;\n            var remaining = 1;\n            iterate(iterable, function (promise) {\n              var index = counter++;\n              var alreadyCalled = false;\n              values.push(undefined);\n              remaining++;\n              promiseResolve.call(C, promise).then(function (value) {\n                if (alreadyCalled) return;\n                alreadyCalled = true;\n                values[index] = {\n                  status: 'fulfilled',\n                  value: value\n                };\n                --remaining || resolve(values);\n              }, function (e) {\n                if (alreadyCalled) return;\n                alreadyCalled = true;\n                values[index] = {\n                  status: 'rejected',\n                  reason: e\n                };\n                --remaining || resolve(values);\n              });\n            });\n            --remaining || resolve(values);\n          });\n          if (result.error) reject(result.value);\n          return capability.promise;\n        }\n      });\n\n      /***/\n    }, /* 135 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var $ = __w_pdfjs_require__(10);\n      var IS_PURE = __w_pdfjs_require__(37);\n      var NativePromise = __w_pdfjs_require__(120);\n      var fails = __w_pdfjs_require__(14);\n      var getBuiltIn = __w_pdfjs_require__(42);\n      var speciesConstructor = __w_pdfjs_require__(112);\n      var promiseResolve = __w_pdfjs_require__(129);\n      var redefine = __w_pdfjs_require__(29);\n      var NON_GENERIC = !!NativePromise && fails(function () {\n        NativePromise.prototype['finally'].call({\n          then: function () {}\n        }, function () {});\n      });\n      $({\n        target: 'Promise',\n        proto: true,\n        real: true,\n        forced: NON_GENERIC\n      }, {\n        'finally': function (onFinally) {\n          var C = speciesConstructor(this, getBuiltIn('Promise'));\n          var isFunction = typeof onFinally == 'function';\n          return this.then(isFunction ? function (x) {\n            return promiseResolve(C, onFinally()).then(function () {\n              return x;\n            });\n          } : onFinally, isFunction ? function (e) {\n            return promiseResolve(C, onFinally()).then(function () {\n              throw e;\n            });\n          } : onFinally);\n        }\n      });\n      if (!IS_PURE && typeof NativePromise == 'function' && !NativePromise.prototype['finally']) {\n        redefine(NativePromise.prototype, 'finally', getBuiltIn('Promise').prototype['finally']);\n      }\n\n      /***/\n    }, /* 136 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      __w_pdfjs_require__(137);\n      __w_pdfjs_require__(142);\n      __w_pdfjs_require__(140);\n      var path = __w_pdfjs_require__(43);\n      module.exports = path.URL;\n\n      /***/\n    }, /* 137 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      __w_pdfjs_require__(77);\n      var $ = __w_pdfjs_require__(10);\n      var DESCRIPTORS = __w_pdfjs_require__(13);\n      var USE_NATIVE_URL = __w_pdfjs_require__(138);\n      var global = __w_pdfjs_require__(11);\n      var defineProperties = __w_pdfjs_require__(72);\n      var redefine = __w_pdfjs_require__(29);\n      var anInstance = __w_pdfjs_require__(123);\n      var has = __w_pdfjs_require__(23);\n      var assign = __w_pdfjs_require__(100);\n      var arrayFrom = __w_pdfjs_require__(90);\n      var codeAt = __w_pdfjs_require__(78).codeAt;\n      var toASCII = __w_pdfjs_require__(139);\n      var setToStringTag = __w_pdfjs_require__(85);\n      var URLSearchParamsModule = __w_pdfjs_require__(140);\n      var InternalStateModule = __w_pdfjs_require__(33);\n      var NativeURL = global.URL;\n      var URLSearchParams = URLSearchParamsModule.URLSearchParams;\n      var getInternalSearchParamsState = URLSearchParamsModule.getState;\n      var setInternalState = InternalStateModule.set;\n      var getInternalURLState = InternalStateModule.getterFor('URL');\n      var floor = Math.floor;\n      var pow = Math.pow;\n      var INVALID_AUTHORITY = 'Invalid authority';\n      var INVALID_SCHEME = 'Invalid scheme';\n      var INVALID_HOST = 'Invalid host';\n      var INVALID_PORT = 'Invalid port';\n      var ALPHA = /[A-Za-z]/;\n      var ALPHANUMERIC = /[\\d+-.A-Za-z]/;\n      var DIGIT = /\\d/;\n      var HEX_START = /^(0x|0X)/;\n      var OCT = /^[0-7]+$/;\n      var DEC = /^\\d+$/;\n      var HEX = /^[\\dA-Fa-f]+$/;\n      var FORBIDDEN_HOST_CODE_POINT = /[\\u0000\\u0009\\u000A\\u000D #%/:?@[\\\\]]/;\n      var FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\\u0000\\u0009\\u000A\\u000D #/:?@[\\\\]]/;\n      var LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\\u0000-\\u001F ]+|[\\u0000-\\u001F ]+$/g;\n      var TAB_AND_NEW_LINE = /[\\u0009\\u000A\\u000D]/g;\n      var EOF;\n      var parseHost = function (url, input) {\n        var result, codePoints, index;\n        if (input.charAt(0) == '[') {\n          if (input.charAt(input.length - 1) != ']') return INVALID_HOST;\n          result = parseIPv6(input.slice(1, -1));\n          if (!result) return INVALID_HOST;\n          url.host = result;\n        } else if (!isSpecial(url)) {\n          if (FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT.test(input)) return INVALID_HOST;\n          result = '';\n          codePoints = arrayFrom(input);\n          for (index = 0; index < codePoints.length; index++) {\n            result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);\n          }\n          url.host = result;\n        } else {\n          input = toASCII(input);\n          if (FORBIDDEN_HOST_CODE_POINT.test(input)) return INVALID_HOST;\n          result = parseIPv4(input);\n          if (result === null) return INVALID_HOST;\n          url.host = result;\n        }\n      };\n      var parseIPv4 = function (input) {\n        var parts = input.split('.');\n        var partsLength, numbers, index, part, radix, number, ipv4;\n        if (parts.length && parts[parts.length - 1] == '') {\n          parts.pop();\n        }\n        partsLength = parts.length;\n        if (partsLength > 4) return input;\n        numbers = [];\n        for (index = 0; index < partsLength; index++) {\n          part = parts[index];\n          if (part == '') return input;\n          radix = 10;\n          if (part.length > 1 && part.charAt(0) == '0') {\n            radix = HEX_START.test(part) ? 16 : 8;\n            part = part.slice(radix == 8 ? 1 : 2);\n          }\n          if (part === '') {\n            number = 0;\n          } else {\n            if (!(radix == 10 ? DEC : radix == 8 ? OCT : HEX).test(part)) return input;\n            number = parseInt(part, radix);\n          }\n          numbers.push(number);\n        }\n        for (index = 0; index < partsLength; index++) {\n          number = numbers[index];\n          if (index == partsLength - 1) {\n            if (number >= pow(256, 5 - partsLength)) return null;\n          } else if (number > 255) return null;\n        }\n        ipv4 = numbers.pop();\n        for (index = 0; index < numbers.length; index++) {\n          ipv4 += numbers[index] * pow(256, 3 - index);\n        }\n        return ipv4;\n      };\n      var parseIPv6 = function (input) {\n        var address = [0, 0, 0, 0, 0, 0, 0, 0];\n        var pieceIndex = 0;\n        var compress = null;\n        var pointer = 0;\n        var value, length, numbersSeen, ipv4Piece, number, swaps, swap;\n        var char = function () {\n          return input.charAt(pointer);\n        };\n        if (char() == ':') {\n          if (input.charAt(1) != ':') return;\n          pointer += 2;\n          pieceIndex++;\n          compress = pieceIndex;\n        }\n        while (char()) {\n          if (pieceIndex == 8) return;\n          if (char() == ':') {\n            if (compress !== null) return;\n            pointer++;\n            pieceIndex++;\n            compress = pieceIndex;\n            continue;\n          }\n          value = length = 0;\n          while (length < 4 && HEX.test(char())) {\n            value = value * 16 + parseInt(char(), 16);\n            pointer++;\n            length++;\n          }\n          if (char() == '.') {\n            if (length == 0) return;\n            pointer -= length;\n            if (pieceIndex > 6) return;\n            numbersSeen = 0;\n            while (char()) {\n              ipv4Piece = null;\n              if (numbersSeen > 0) {\n                if (char() == '.' && numbersSeen < 4) pointer++;else return;\n              }\n              if (!DIGIT.test(char())) return;\n              while (DIGIT.test(char())) {\n                number = parseInt(char(), 10);\n                if (ipv4Piece === null) ipv4Piece = number;else if (ipv4Piece == 0) return;else ipv4Piece = ipv4Piece * 10 + number;\n                if (ipv4Piece > 255) return;\n                pointer++;\n              }\n              address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;\n              numbersSeen++;\n              if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;\n            }\n            if (numbersSeen != 4) return;\n            break;\n          } else if (char() == ':') {\n            pointer++;\n            if (!char()) return;\n          } else if (char()) return;\n          address[pieceIndex++] = value;\n        }\n        if (compress !== null) {\n          swaps = pieceIndex - compress;\n          pieceIndex = 7;\n          while (pieceIndex != 0 && swaps > 0) {\n            swap = address[pieceIndex];\n            address[pieceIndex--] = address[compress + swaps - 1];\n            address[compress + --swaps] = swap;\n          }\n        } else if (pieceIndex != 8) return;\n        return address;\n      };\n      var findLongestZeroSequence = function (ipv6) {\n        var maxIndex = null;\n        var maxLength = 1;\n        var currStart = null;\n        var currLength = 0;\n        var index = 0;\n        for (; index < 8; index++) {\n          if (ipv6[index] !== 0) {\n            if (currLength > maxLength) {\n              maxIndex = currStart;\n              maxLength = currLength;\n            }\n            currStart = null;\n            currLength = 0;\n          } else {\n            if (currStart === null) currStart = index;\n            ++currLength;\n          }\n        }\n        if (currLength > maxLength) {\n          maxIndex = currStart;\n          maxLength = currLength;\n        }\n        return maxIndex;\n      };\n      var serializeHost = function (host) {\n        var result, index, compress, ignore0;\n        if (typeof host == 'number') {\n          result = [];\n          for (index = 0; index < 4; index++) {\n            result.unshift(host % 256);\n            host = floor(host / 256);\n          }\n          return result.join('.');\n        } else if (typeof host == 'object') {\n          result = '';\n          compress = findLongestZeroSequence(host);\n          for (index = 0; index < 8; index++) {\n            if (ignore0 && host[index] === 0) continue;\n            if (ignore0) ignore0 = false;\n            if (compress === index) {\n              result += index ? ':' : '::';\n              ignore0 = true;\n            } else {\n              result += host[index].toString(16);\n              if (index < 7) result += ':';\n            }\n          }\n          return '[' + result + ']';\n        }\n        return host;\n      };\n      var C0ControlPercentEncodeSet = {};\n      var fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {\n        ' ': 1,\n        '\"': 1,\n        '<': 1,\n        '>': 1,\n        '`': 1\n      });\n      var pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {\n        '#': 1,\n        '?': 1,\n        '{': 1,\n        '}': 1\n      });\n      var userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {\n        '/': 1,\n        ':': 1,\n        ';': 1,\n        '=': 1,\n        '@': 1,\n        '[': 1,\n        '\\\\': 1,\n        ']': 1,\n        '^': 1,\n        '|': 1\n      });\n      var percentEncode = function (char, set) {\n        var code = codeAt(char, 0);\n        return code > 0x20 && code < 0x7F && !has(set, char) ? char : encodeURIComponent(char);\n      };\n      var specialSchemes = {\n        ftp: 21,\n        file: null,\n        http: 80,\n        https: 443,\n        ws: 80,\n        wss: 443\n      };\n      var isSpecial = function (url) {\n        return has(specialSchemes, url.scheme);\n      };\n      var includesCredentials = function (url) {\n        return url.username != '' || url.password != '';\n      };\n      var cannotHaveUsernamePasswordPort = function (url) {\n        return !url.host || url.cannotBeABaseURL || url.scheme == 'file';\n      };\n      var isWindowsDriveLetter = function (string, normalized) {\n        var second;\n        return string.length == 2 && ALPHA.test(string.charAt(0)) && ((second = string.charAt(1)) == ':' || !normalized && second == '|');\n      };\n      var startsWithWindowsDriveLetter = function (string) {\n        var third;\n        return string.length > 1 && isWindowsDriveLetter(string.slice(0, 2)) && (string.length == 2 || (third = string.charAt(2)) === '/' || third === '\\\\' || third === '?' || third === '#');\n      };\n      var shortenURLsPath = function (url) {\n        var path = url.path;\n        var pathSize = path.length;\n        if (pathSize && (url.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {\n          path.pop();\n        }\n      };\n      var isSingleDot = function (segment) {\n        return segment === '.' || segment.toLowerCase() === '%2e';\n      };\n      var isDoubleDot = function (segment) {\n        segment = segment.toLowerCase();\n        return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';\n      };\n      var SCHEME_START = {};\n      var SCHEME = {};\n      var NO_SCHEME = {};\n      var SPECIAL_RELATIVE_OR_AUTHORITY = {};\n      var PATH_OR_AUTHORITY = {};\n      var RELATIVE = {};\n      var RELATIVE_SLASH = {};\n      var SPECIAL_AUTHORITY_SLASHES = {};\n      var SPECIAL_AUTHORITY_IGNORE_SLASHES = {};\n      var AUTHORITY = {};\n      var HOST = {};\n      var HOSTNAME = {};\n      var PORT = {};\n      var FILE = {};\n      var FILE_SLASH = {};\n      var FILE_HOST = {};\n      var PATH_START = {};\n      var PATH = {};\n      var CANNOT_BE_A_BASE_URL_PATH = {};\n      var QUERY = {};\n      var FRAGMENT = {};\n      var parseURL = function (url, input, stateOverride, base) {\n        var state = stateOverride || SCHEME_START;\n        var pointer = 0;\n        var buffer = '';\n        var seenAt = false;\n        var seenBracket = false;\n        var seenPasswordToken = false;\n        var codePoints, char, bufferCodePoints, failure;\n        if (!stateOverride) {\n          url.scheme = '';\n          url.username = '';\n          url.password = '';\n          url.host = null;\n          url.port = null;\n          url.path = [];\n          url.query = null;\n          url.fragment = null;\n          url.cannotBeABaseURL = false;\n          input = input.replace(LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');\n        }\n        input = input.replace(TAB_AND_NEW_LINE, '');\n        codePoints = arrayFrom(input);\n        while (pointer <= codePoints.length) {\n          char = codePoints[pointer];\n          switch (state) {\n            case SCHEME_START:\n              if (char && ALPHA.test(char)) {\n                buffer += char.toLowerCase();\n                state = SCHEME;\n              } else if (!stateOverride) {\n                state = NO_SCHEME;\n                continue;\n              } else return INVALID_SCHEME;\n              break;\n            case SCHEME:\n              if (char && (ALPHANUMERIC.test(char) || char == '+' || char == '-' || char == '.')) {\n                buffer += char.toLowerCase();\n              } else if (char == ':') {\n                if (stateOverride && (isSpecial(url) != has(specialSchemes, buffer) || buffer == 'file' && (includesCredentials(url) || url.port !== null) || url.scheme == 'file' && !url.host)) return;\n                url.scheme = buffer;\n                if (stateOverride) {\n                  if (isSpecial(url) && specialSchemes[url.scheme] == url.port) url.port = null;\n                  return;\n                }\n                buffer = '';\n                if (url.scheme == 'file') {\n                  state = FILE;\n                } else if (isSpecial(url) && base && base.scheme == url.scheme) {\n                  state = SPECIAL_RELATIVE_OR_AUTHORITY;\n                } else if (isSpecial(url)) {\n                  state = SPECIAL_AUTHORITY_SLASHES;\n                } else if (codePoints[pointer + 1] == '/') {\n                  state = PATH_OR_AUTHORITY;\n                  pointer++;\n                } else {\n                  url.cannotBeABaseURL = true;\n                  url.path.push('');\n                  state = CANNOT_BE_A_BASE_URL_PATH;\n                }\n              } else if (!stateOverride) {\n                buffer = '';\n                state = NO_SCHEME;\n                pointer = 0;\n                continue;\n              } else return INVALID_SCHEME;\n              break;\n            case NO_SCHEME:\n              if (!base || base.cannotBeABaseURL && char != '#') return INVALID_SCHEME;\n              if (base.cannotBeABaseURL && char == '#') {\n                url.scheme = base.scheme;\n                url.path = base.path.slice();\n                url.query = base.query;\n                url.fragment = '';\n                url.cannotBeABaseURL = true;\n                state = FRAGMENT;\n                break;\n              }\n              state = base.scheme == 'file' ? FILE : RELATIVE;\n              continue;\n            case SPECIAL_RELATIVE_OR_AUTHORITY:\n              if (char == '/' && codePoints[pointer + 1] == '/') {\n                state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n                pointer++;\n              } else {\n                state = RELATIVE;\n                continue;\n              }\n              break;\n            case PATH_OR_AUTHORITY:\n              if (char == '/') {\n                state = AUTHORITY;\n                break;\n              } else {\n                state = PATH;\n                continue;\n              }\n            case RELATIVE:\n              url.scheme = base.scheme;\n              if (char == EOF) {\n                url.username = base.username;\n                url.password = base.password;\n                url.host = base.host;\n                url.port = base.port;\n                url.path = base.path.slice();\n                url.query = base.query;\n              } else if (char == '/' || char == '\\\\' && isSpecial(url)) {\n                state = RELATIVE_SLASH;\n              } else if (char == '?') {\n                url.username = base.username;\n                url.password = base.password;\n                url.host = base.host;\n                url.port = base.port;\n                url.path = base.path.slice();\n                url.query = '';\n                state = QUERY;\n              } else if (char == '#') {\n                url.username = base.username;\n                url.password = base.password;\n                url.host = base.host;\n                url.port = base.port;\n                url.path = base.path.slice();\n                url.query = base.query;\n                url.fragment = '';\n                state = FRAGMENT;\n              } else {\n                url.username = base.username;\n                url.password = base.password;\n                url.host = base.host;\n                url.port = base.port;\n                url.path = base.path.slice();\n                url.path.pop();\n                state = PATH;\n                continue;\n              }\n              break;\n            case RELATIVE_SLASH:\n              if (isSpecial(url) && (char == '/' || char == '\\\\')) {\n                state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n              } else if (char == '/') {\n                state = AUTHORITY;\n              } else {\n                url.username = base.username;\n                url.password = base.password;\n                url.host = base.host;\n                url.port = base.port;\n                state = PATH;\n                continue;\n              }\n              break;\n            case SPECIAL_AUTHORITY_SLASHES:\n              state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n              if (char != '/' || buffer.charAt(pointer + 1) != '/') continue;\n              pointer++;\n              break;\n            case SPECIAL_AUTHORITY_IGNORE_SLASHES:\n              if (char != '/' && char != '\\\\') {\n                state = AUTHORITY;\n                continue;\n              }\n              break;\n            case AUTHORITY:\n              if (char == '@') {\n                if (seenAt) buffer = '%40' + buffer;\n                seenAt = true;\n                bufferCodePoints = arrayFrom(buffer);\n                for (var i = 0; i < bufferCodePoints.length; i++) {\n                  var codePoint = bufferCodePoints[i];\n                  if (codePoint == ':' && !seenPasswordToken) {\n                    seenPasswordToken = true;\n                    continue;\n                  }\n                  var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);\n                  if (seenPasswordToken) url.password += encodedCodePoints;else url.username += encodedCodePoints;\n                }\n                buffer = '';\n              } else if (char == EOF || char == '/' || char == '?' || char == '#' || char == '\\\\' && isSpecial(url)) {\n                if (seenAt && buffer == '') return INVALID_AUTHORITY;\n                pointer -= arrayFrom(buffer).length + 1;\n                buffer = '';\n                state = HOST;\n              } else buffer += char;\n              break;\n            case HOST:\n            case HOSTNAME:\n              if (stateOverride && url.scheme == 'file') {\n                state = FILE_HOST;\n                continue;\n              } else if (char == ':' && !seenBracket) {\n                if (buffer == '') return INVALID_HOST;\n                failure = parseHost(url, buffer);\n                if (failure) return failure;\n                buffer = '';\n                state = PORT;\n                if (stateOverride == HOSTNAME) return;\n              } else if (char == EOF || char == '/' || char == '?' || char == '#' || char == '\\\\' && isSpecial(url)) {\n                if (isSpecial(url) && buffer == '') return INVALID_HOST;\n                if (stateOverride && buffer == '' && (includesCredentials(url) || url.port !== null)) return;\n                failure = parseHost(url, buffer);\n                if (failure) return failure;\n                buffer = '';\n                state = PATH_START;\n                if (stateOverride) return;\n                continue;\n              } else {\n                if (char == '[') seenBracket = true;else if (char == ']') seenBracket = false;\n                buffer += char;\n              }\n              break;\n            case PORT:\n              if (DIGIT.test(char)) {\n                buffer += char;\n              } else if (char == EOF || char == '/' || char == '?' || char == '#' || char == '\\\\' && isSpecial(url) || stateOverride) {\n                if (buffer != '') {\n                  var port = parseInt(buffer, 10);\n                  if (port > 0xFFFF) return INVALID_PORT;\n                  url.port = isSpecial(url) && port === specialSchemes[url.scheme] ? null : port;\n                  buffer = '';\n                }\n                if (stateOverride) return;\n                state = PATH_START;\n                continue;\n              } else return INVALID_PORT;\n              break;\n            case FILE:\n              url.scheme = 'file';\n              if (char == '/' || char == '\\\\') state = FILE_SLASH;else if (base && base.scheme == 'file') {\n                if (char == EOF) {\n                  url.host = base.host;\n                  url.path = base.path.slice();\n                  url.query = base.query;\n                } else if (char == '?') {\n                  url.host = base.host;\n                  url.path = base.path.slice();\n                  url.query = '';\n                  state = QUERY;\n                } else if (char == '#') {\n                  url.host = base.host;\n                  url.path = base.path.slice();\n                  url.query = base.query;\n                  url.fragment = '';\n                  state = FRAGMENT;\n                } else {\n                  if (!startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\n                    url.host = base.host;\n                    url.path = base.path.slice();\n                    shortenURLsPath(url);\n                  }\n                  state = PATH;\n                  continue;\n                }\n              } else {\n                state = PATH;\n                continue;\n              }\n              break;\n            case FILE_SLASH:\n              if (char == '/' || char == '\\\\') {\n                state = FILE_HOST;\n                break;\n              }\n              if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\n                if (isWindowsDriveLetter(base.path[0], true)) url.path.push(base.path[0]);else url.host = base.host;\n              }\n              state = PATH;\n              continue;\n            case FILE_HOST:\n              if (char == EOF || char == '/' || char == '\\\\' || char == '?' || char == '#') {\n                if (!stateOverride && isWindowsDriveLetter(buffer)) {\n                  state = PATH;\n                } else if (buffer == '') {\n                  url.host = '';\n                  if (stateOverride) return;\n                  state = PATH_START;\n                } else {\n                  failure = parseHost(url, buffer);\n                  if (failure) return failure;\n                  if (url.host == 'localhost') url.host = '';\n                  if (stateOverride) return;\n                  buffer = '';\n                  state = PATH_START;\n                }\n                continue;\n              } else buffer += char;\n              break;\n            case PATH_START:\n              if (isSpecial(url)) {\n                state = PATH;\n                if (char != '/' && char != '\\\\') continue;\n              } else if (!stateOverride && char == '?') {\n                url.query = '';\n                state = QUERY;\n              } else if (!stateOverride && char == '#') {\n                url.fragment = '';\n                state = FRAGMENT;\n              } else if (char != EOF) {\n                state = PATH;\n                if (char != '/') continue;\n              }\n              break;\n            case PATH:\n              if (char == EOF || char == '/' || char == '\\\\' && isSpecial(url) || !stateOverride && (char == '?' || char == '#')) {\n                if (isDoubleDot(buffer)) {\n                  shortenURLsPath(url);\n                  if (char != '/' && !(char == '\\\\' && isSpecial(url))) {\n                    url.path.push('');\n                  }\n                } else if (isSingleDot(buffer)) {\n                  if (char != '/' && !(char == '\\\\' && isSpecial(url))) {\n                    url.path.push('');\n                  }\n                } else {\n                  if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {\n                    if (url.host) url.host = '';\n                    buffer = buffer.charAt(0) + ':';\n                  }\n                  url.path.push(buffer);\n                }\n                buffer = '';\n                if (url.scheme == 'file' && (char == EOF || char == '?' || char == '#')) {\n                  while (url.path.length > 1 && url.path[0] === '') {\n                    url.path.shift();\n                  }\n                }\n                if (char == '?') {\n                  url.query = '';\n                  state = QUERY;\n                } else if (char == '#') {\n                  url.fragment = '';\n                  state = FRAGMENT;\n                }\n              } else {\n                buffer += percentEncode(char, pathPercentEncodeSet);\n              }\n              break;\n            case CANNOT_BE_A_BASE_URL_PATH:\n              if (char == '?') {\n                url.query = '';\n                state = QUERY;\n              } else if (char == '#') {\n                url.fragment = '';\n                state = FRAGMENT;\n              } else if (char != EOF) {\n                url.path[0] += percentEncode(char, C0ControlPercentEncodeSet);\n              }\n              break;\n            case QUERY:\n              if (!stateOverride && char == '#') {\n                url.fragment = '';\n                state = FRAGMENT;\n              } else if (char != EOF) {\n                if (char == \"'\" && isSpecial(url)) url.query += '%27';else if (char == '#') url.query += '%23';else url.query += percentEncode(char, C0ControlPercentEncodeSet);\n              }\n              break;\n            case FRAGMENT:\n              if (char != EOF) url.fragment += percentEncode(char, fragmentPercentEncodeSet);\n              break;\n          }\n          pointer++;\n        }\n      };\n      var URLConstructor = function URL(url) {\n        var that = anInstance(this, URLConstructor, 'URL');\n        var base = arguments.length > 1 ? arguments[1] : undefined;\n        var urlString = String(url);\n        var state = setInternalState(that, {\n          type: 'URL'\n        });\n        var baseState, failure;\n        if (base !== undefined) {\n          if (base instanceof URLConstructor) baseState = getInternalURLState(base);else {\n            failure = parseURL(baseState = {}, String(base));\n            if (failure) throw TypeError(failure);\n          }\n        }\n        failure = parseURL(state, urlString, null, baseState);\n        if (failure) throw TypeError(failure);\n        var searchParams = state.searchParams = new URLSearchParams();\n        var searchParamsState = getInternalSearchParamsState(searchParams);\n        searchParamsState.updateSearchParams(state.query);\n        searchParamsState.updateURL = function () {\n          state.query = String(searchParams) || null;\n        };\n        if (!DESCRIPTORS) {\n          that.href = serializeURL.call(that);\n          that.origin = getOrigin.call(that);\n          that.protocol = getProtocol.call(that);\n          that.username = getUsername.call(that);\n          that.password = getPassword.call(that);\n          that.host = getHost.call(that);\n          that.hostname = getHostname.call(that);\n          that.port = getPort.call(that);\n          that.pathname = getPathname.call(that);\n          that.search = getSearch.call(that);\n          that.searchParams = getSearchParams.call(that);\n          that.hash = getHash.call(that);\n        }\n      };\n      var URLPrototype = URLConstructor.prototype;\n      var serializeURL = function () {\n        var url = getInternalURLState(this);\n        var scheme = url.scheme;\n        var username = url.username;\n        var password = url.password;\n        var host = url.host;\n        var port = url.port;\n        var path = url.path;\n        var query = url.query;\n        var fragment = url.fragment;\n        var output = scheme + ':';\n        if (host !== null) {\n          output += '//';\n          if (includesCredentials(url)) {\n            output += username + (password ? ':' + password : '') + '@';\n          }\n          output += serializeHost(host);\n          if (port !== null) output += ':' + port;\n        } else if (scheme == 'file') output += '//';\n        output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\n        if (query !== null) output += '?' + query;\n        if (fragment !== null) output += '#' + fragment;\n        return output;\n      };\n      var getOrigin = function () {\n        var url = getInternalURLState(this);\n        var scheme = url.scheme;\n        var port = url.port;\n        if (scheme == 'blob') try {\n          return new URL(scheme.path[0]).origin;\n        } catch (error) {\n          return 'null';\n        }\n        if (scheme == 'file' || !isSpecial(url)) return 'null';\n        return scheme + '://' + serializeHost(url.host) + (port !== null ? ':' + port : '');\n      };\n      var getProtocol = function () {\n        return getInternalURLState(this).scheme + ':';\n      };\n      var getUsername = function () {\n        return getInternalURLState(this).username;\n      };\n      var getPassword = function () {\n        return getInternalURLState(this).password;\n      };\n      var getHost = function () {\n        var url = getInternalURLState(this);\n        var host = url.host;\n        var port = url.port;\n        return host === null ? '' : port === null ? serializeHost(host) : serializeHost(host) + ':' + port;\n      };\n      var getHostname = function () {\n        var host = getInternalURLState(this).host;\n        return host === null ? '' : serializeHost(host);\n      };\n      var getPort = function () {\n        var port = getInternalURLState(this).port;\n        return port === null ? '' : String(port);\n      };\n      var getPathname = function () {\n        var url = getInternalURLState(this);\n        var path = url.path;\n        return url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\n      };\n      var getSearch = function () {\n        var query = getInternalURLState(this).query;\n        return query ? '?' + query : '';\n      };\n      var getSearchParams = function () {\n        return getInternalURLState(this).searchParams;\n      };\n      var getHash = function () {\n        var fragment = getInternalURLState(this).fragment;\n        return fragment ? '#' + fragment : '';\n      };\n      var accessorDescriptor = function (getter, setter) {\n        return {\n          get: getter,\n          set: setter,\n          configurable: true,\n          enumerable: true\n        };\n      };\n      if (DESCRIPTORS) {\n        defineProperties(URLPrototype, {\n          href: accessorDescriptor(serializeURL, function (href) {\n            var url = getInternalURLState(this);\n            var urlString = String(href);\n            var failure = parseURL(url, urlString);\n            if (failure) throw TypeError(failure);\n            getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n          }),\n          origin: accessorDescriptor(getOrigin),\n          protocol: accessorDescriptor(getProtocol, function (protocol) {\n            var url = getInternalURLState(this);\n            parseURL(url, String(protocol) + ':', SCHEME_START);\n          }),\n          username: accessorDescriptor(getUsername, function (username) {\n            var url = getInternalURLState(this);\n            var codePoints = arrayFrom(String(username));\n            if (cannotHaveUsernamePasswordPort(url)) return;\n            url.username = '';\n            for (var i = 0; i < codePoints.length; i++) {\n              url.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n            }\n          }),\n          password: accessorDescriptor(getPassword, function (password) {\n            var url = getInternalURLState(this);\n            var codePoints = arrayFrom(String(password));\n            if (cannotHaveUsernamePasswordPort(url)) return;\n            url.password = '';\n            for (var i = 0; i < codePoints.length; i++) {\n              url.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n            }\n          }),\n          host: accessorDescriptor(getHost, function (host) {\n            var url = getInternalURLState(this);\n            if (url.cannotBeABaseURL) return;\n            parseURL(url, String(host), HOST);\n          }),\n          hostname: accessorDescriptor(getHostname, function (hostname) {\n            var url = getInternalURLState(this);\n            if (url.cannotBeABaseURL) return;\n            parseURL(url, String(hostname), HOSTNAME);\n          }),\n          port: accessorDescriptor(getPort, function (port) {\n            var url = getInternalURLState(this);\n            if (cannotHaveUsernamePasswordPort(url)) return;\n            port = String(port);\n            if (port == '') url.port = null;else parseURL(url, port, PORT);\n          }),\n          pathname: accessorDescriptor(getPathname, function (pathname) {\n            var url = getInternalURLState(this);\n            if (url.cannotBeABaseURL) return;\n            url.path = [];\n            parseURL(url, pathname + '', PATH_START);\n          }),\n          search: accessorDescriptor(getSearch, function (search) {\n            var url = getInternalURLState(this);\n            search = String(search);\n            if (search == '') {\n              url.query = null;\n            } else {\n              if ('?' == search.charAt(0)) search = search.slice(1);\n              url.query = '';\n              parseURL(url, search, QUERY);\n            }\n            getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n          }),\n          searchParams: accessorDescriptor(getSearchParams),\n          hash: accessorDescriptor(getHash, function (hash) {\n            var url = getInternalURLState(this);\n            hash = String(hash);\n            if (hash == '') {\n              url.fragment = null;\n              return;\n            }\n            if ('#' == hash.charAt(0)) hash = hash.slice(1);\n            url.fragment = '';\n            parseURL(url, hash, FRAGMENT);\n          })\n        });\n      }\n      redefine(URLPrototype, 'toJSON', function toJSON() {\n        return serializeURL.call(this);\n      }, {\n        enumerable: true\n      });\n      redefine(URLPrototype, 'toString', function toString() {\n        return serializeURL.call(this);\n      }, {\n        enumerable: true\n      });\n      if (NativeURL) {\n        var nativeCreateObjectURL = NativeURL.createObjectURL;\n        var nativeRevokeObjectURL = NativeURL.revokeObjectURL;\n        if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', function createObjectURL(blob) {\n          return nativeCreateObjectURL.apply(NativeURL, arguments);\n        });\n        if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', function revokeObjectURL(url) {\n          return nativeRevokeObjectURL.apply(NativeURL, arguments);\n        });\n      }\n      setToStringTag(URLConstructor, 'URL');\n      $({\n        global: true,\n        forced: !USE_NATIVE_URL,\n        sham: !DESCRIPTORS\n      }, {\n        URL: URLConstructor\n      });\n\n      /***/\n    }, /* 138 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var fails = __w_pdfjs_require__(14);\n      var wellKnownSymbol = __w_pdfjs_require__(57);\n      var IS_PURE = __w_pdfjs_require__(37);\n      var ITERATOR = wellKnownSymbol('iterator');\n      module.exports = !fails(function () {\n        var url = new URL('b?a=1&b=2&c=3', 'http://a');\n        var searchParams = url.searchParams;\n        var result = '';\n        url.pathname = 'c%20d';\n        searchParams.forEach(function (value, key) {\n          searchParams['delete']('b');\n          result += key + value;\n        });\n        return IS_PURE && !url.toJSON || !searchParams.sort || url.href !== 'http://a/c%20d?a=1&c=3' || searchParams.get('c') !== '3' || String(new URLSearchParams('?a=1')) !== 'a=1' || !searchParams[ITERATOR] || new URL('https://a@b').username !== 'a' || new URLSearchParams(new URLSearchParams('a=b')).get('a') !== 'b' || new URL('http://тест').host !== 'xn--e1aybc' || new URL('http://a#б').hash !== '#%D0%B1' || result !== 'a1c3' || new URL('http://x', undefined).host !== 'x';\n      });\n\n      /***/\n    }, /* 139 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var maxInt = 2147483647;\n      var base = 36;\n      var tMin = 1;\n      var tMax = 26;\n      var skew = 38;\n      var damp = 700;\n      var initialBias = 72;\n      var initialN = 128;\n      var delimiter = '-';\n      var regexNonASCII = /[^\\0-\\u007E]/;\n      var regexSeparators = /[.\\u3002\\uFF0E\\uFF61]/g;\n      var OVERFLOW_ERROR = 'Overflow: input needs wider integers to process';\n      var baseMinusTMin = base - tMin;\n      var floor = Math.floor;\n      var stringFromCharCode = String.fromCharCode;\n      var ucs2decode = function (string) {\n        var output = [];\n        var counter = 0;\n        var length = string.length;\n        while (counter < length) {\n          var value = string.charCodeAt(counter++);\n          if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n            var extra = string.charCodeAt(counter++);\n            if ((extra & 0xFC00) == 0xDC00) {\n              output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n            } else {\n              output.push(value);\n              counter--;\n            }\n          } else {\n            output.push(value);\n          }\n        }\n        return output;\n      };\n      var digitToBasic = function (digit) {\n        return digit + 22 + 75 * (digit < 26);\n      };\n      var adapt = function (delta, numPoints, firstTime) {\n        var k = 0;\n        delta = firstTime ? floor(delta / damp) : delta >> 1;\n        delta += floor(delta / numPoints);\n        for (; delta > baseMinusTMin * tMax >> 1; k += base) {\n          delta = floor(delta / baseMinusTMin);\n        }\n        return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n      };\n      var encode = function (input) {\n        var output = [];\n        input = ucs2decode(input);\n        var inputLength = input.length;\n        var n = initialN;\n        var delta = 0;\n        var bias = initialBias;\n        var i, currentValue;\n        for (i = 0; i < input.length; i++) {\n          currentValue = input[i];\n          if (currentValue < 0x80) {\n            output.push(stringFromCharCode(currentValue));\n          }\n        }\n        var basicLength = output.length;\n        var handledCPCount = basicLength;\n        if (basicLength) {\n          output.push(delimiter);\n        }\n        while (handledCPCount < inputLength) {\n          var m = maxInt;\n          for (i = 0; i < input.length; i++) {\n            currentValue = input[i];\n            if (currentValue >= n && currentValue < m) {\n              m = currentValue;\n            }\n          }\n          var handledCPCountPlusOne = handledCPCount + 1;\n          if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n            throw RangeError(OVERFLOW_ERROR);\n          }\n          delta += (m - n) * handledCPCountPlusOne;\n          n = m;\n          for (i = 0; i < input.length; i++) {\n            currentValue = input[i];\n            if (currentValue < n && ++delta > maxInt) {\n              throw RangeError(OVERFLOW_ERROR);\n            }\n            if (currentValue == n) {\n              var q = delta;\n              for (var k = base;; k += base) {\n                var t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n                if (q < t) break;\n                var qMinusT = q - t;\n                var baseMinusT = base - t;\n                output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT)));\n                q = floor(qMinusT / baseMinusT);\n              }\n              output.push(stringFromCharCode(digitToBasic(q)));\n              bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n              delta = 0;\n              ++handledCPCount;\n            }\n          }\n          ++delta;\n          ++n;\n        }\n        return output.join('');\n      };\n      module.exports = function (input) {\n        var encoded = [];\n        var labels = input.toLowerCase().replace(regexSeparators, '\\u002E').split('.');\n        var i, label;\n        for (i = 0; i < labels.length; i++) {\n          label = labels[i];\n          encoded.push(regexNonASCII.test(label) ? 'xn--' + encode(label) : label);\n        }\n        return encoded.join('.');\n      };\n\n      /***/\n    }, /* 140 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      __w_pdfjs_require__(118);\n      var $ = __w_pdfjs_require__(10);\n      var getBuiltIn = __w_pdfjs_require__(42);\n      var USE_NATIVE_URL = __w_pdfjs_require__(138);\n      var redefine = __w_pdfjs_require__(29);\n      var redefineAll = __w_pdfjs_require__(121);\n      var setToStringTag = __w_pdfjs_require__(85);\n      var createIteratorConstructor = __w_pdfjs_require__(80);\n      var InternalStateModule = __w_pdfjs_require__(33);\n      var anInstance = __w_pdfjs_require__(123);\n      var hasOwn = __w_pdfjs_require__(23);\n      var bind = __w_pdfjs_require__(62);\n      var classof = __w_pdfjs_require__(95);\n      var anObject = __w_pdfjs_require__(28);\n      var isObject = __w_pdfjs_require__(22);\n      var create = __w_pdfjs_require__(71);\n      var createPropertyDescriptor = __w_pdfjs_require__(16);\n      var getIterator = __w_pdfjs_require__(141);\n      var getIteratorMethod = __w_pdfjs_require__(94);\n      var wellKnownSymbol = __w_pdfjs_require__(57);\n      var $fetch = getBuiltIn('fetch');\n      var Headers = getBuiltIn('Headers');\n      var ITERATOR = wellKnownSymbol('iterator');\n      var URL_SEARCH_PARAMS = 'URLSearchParams';\n      var URL_SEARCH_PARAMS_ITERATOR = URL_SEARCH_PARAMS + 'Iterator';\n      var setInternalState = InternalStateModule.set;\n      var getInternalParamsState = InternalStateModule.getterFor(URL_SEARCH_PARAMS);\n      var getInternalIteratorState = InternalStateModule.getterFor(URL_SEARCH_PARAMS_ITERATOR);\n      var plus = /\\+/g;\n      var sequences = Array(4);\n      var percentSequence = function (bytes) {\n        return sequences[bytes - 1] || (sequences[bytes - 1] = RegExp('((?:%[\\\\da-f]{2}){' + bytes + '})', 'gi'));\n      };\n      var percentDecode = function (sequence) {\n        try {\n          return decodeURIComponent(sequence);\n        } catch (error) {\n          return sequence;\n        }\n      };\n      var deserialize = function (it) {\n        var result = it.replace(plus, ' ');\n        var bytes = 4;\n        try {\n          return decodeURIComponent(result);\n        } catch (error) {\n          while (bytes) {\n            result = result.replace(percentSequence(bytes--), percentDecode);\n          }\n          return result;\n        }\n      };\n      var find = /[!'()~]|%20/g;\n      var replace = {\n        '!': '%21',\n        \"'\": '%27',\n        '(': '%28',\n        ')': '%29',\n        '~': '%7E',\n        '%20': '+'\n      };\n      var replacer = function (match) {\n        return replace[match];\n      };\n      var serialize = function (it) {\n        return encodeURIComponent(it).replace(find, replacer);\n      };\n      var parseSearchParams = function (result, query) {\n        if (query) {\n          var attributes = query.split('&');\n          var index = 0;\n          var attribute, entry;\n          while (index < attributes.length) {\n            attribute = attributes[index++];\n            if (attribute.length) {\n              entry = attribute.split('=');\n              result.push({\n                key: deserialize(entry.shift()),\n                value: deserialize(entry.join('='))\n              });\n            }\n          }\n        }\n      };\n      var updateSearchParams = function (query) {\n        this.entries.length = 0;\n        parseSearchParams(this.entries, query);\n      };\n      var validateArgumentsLength = function (passed, required) {\n        if (passed < required) throw TypeError('Not enough arguments');\n      };\n      var URLSearchParamsIterator = createIteratorConstructor(function Iterator(params, kind) {\n        setInternalState(this, {\n          type: URL_SEARCH_PARAMS_ITERATOR,\n          iterator: getIterator(getInternalParamsState(params).entries),\n          kind: kind\n        });\n      }, 'Iterator', function next() {\n        var state = getInternalIteratorState(this);\n        var kind = state.kind;\n        var step = state.iterator.next();\n        var entry = step.value;\n        if (!step.done) {\n          step.value = kind === 'keys' ? entry.key : kind === 'values' ? entry.value : [entry.key, entry.value];\n        }\n        return step;\n      });\n      var URLSearchParamsConstructor = function URLSearchParams() {\n        anInstance(this, URLSearchParamsConstructor, URL_SEARCH_PARAMS);\n        var init = arguments.length > 0 ? arguments[0] : undefined;\n        var that = this;\n        var entries = [];\n        var iteratorMethod, iterator, next, step, entryIterator, entryNext, first, second, key;\n        setInternalState(that, {\n          type: URL_SEARCH_PARAMS,\n          entries: entries,\n          updateURL: function () {},\n          updateSearchParams: updateSearchParams\n        });\n        if (init !== undefined) {\n          if (isObject(init)) {\n            iteratorMethod = getIteratorMethod(init);\n            if (typeof iteratorMethod === 'function') {\n              iterator = iteratorMethod.call(init);\n              next = iterator.next;\n              while (!(step = next.call(iterator)).done) {\n                entryIterator = getIterator(anObject(step.value));\n                entryNext = entryIterator.next;\n                if ((first = entryNext.call(entryIterator)).done || (second = entryNext.call(entryIterator)).done || !entryNext.call(entryIterator).done) throw TypeError('Expected sequence with length 2');\n                entries.push({\n                  key: first.value + '',\n                  value: second.value + ''\n                });\n              }\n            } else for (key in init) if (hasOwn(init, key)) entries.push({\n              key: key,\n              value: init[key] + ''\n            });\n          } else {\n            parseSearchParams(entries, typeof init === 'string' ? init.charAt(0) === '?' ? init.slice(1) : init : init + '');\n          }\n        }\n      };\n      var URLSearchParamsPrototype = URLSearchParamsConstructor.prototype;\n      redefineAll(URLSearchParamsPrototype, {\n        append: function append(name, value) {\n          validateArgumentsLength(arguments.length, 2);\n          var state = getInternalParamsState(this);\n          state.entries.push({\n            key: name + '',\n            value: value + ''\n          });\n          state.updateURL();\n        },\n        'delete': function (name) {\n          validateArgumentsLength(arguments.length, 1);\n          var state = getInternalParamsState(this);\n          var entries = state.entries;\n          var key = name + '';\n          var index = 0;\n          while (index < entries.length) {\n            if (entries[index].key === key) entries.splice(index, 1);else index++;\n          }\n          state.updateURL();\n        },\n        get: function get(name) {\n          validateArgumentsLength(arguments.length, 1);\n          var entries = getInternalParamsState(this).entries;\n          var key = name + '';\n          var index = 0;\n          for (; index < entries.length; index++) {\n            if (entries[index].key === key) return entries[index].value;\n          }\n          return null;\n        },\n        getAll: function getAll(name) {\n          validateArgumentsLength(arguments.length, 1);\n          var entries = getInternalParamsState(this).entries;\n          var key = name + '';\n          var result = [];\n          var index = 0;\n          for (; index < entries.length; index++) {\n            if (entries[index].key === key) result.push(entries[index].value);\n          }\n          return result;\n        },\n        has: function has(name) {\n          validateArgumentsLength(arguments.length, 1);\n          var entries = getInternalParamsState(this).entries;\n          var key = name + '';\n          var index = 0;\n          while (index < entries.length) {\n            if (entries[index++].key === key) return true;\n          }\n          return false;\n        },\n        set: function set(name, value) {\n          validateArgumentsLength(arguments.length, 1);\n          var state = getInternalParamsState(this);\n          var entries = state.entries;\n          var found = false;\n          var key = name + '';\n          var val = value + '';\n          var index = 0;\n          var entry;\n          for (; index < entries.length; index++) {\n            entry = entries[index];\n            if (entry.key === key) {\n              if (found) entries.splice(index--, 1);else {\n                found = true;\n                entry.value = val;\n              }\n            }\n          }\n          if (!found) entries.push({\n            key: key,\n            value: val\n          });\n          state.updateURL();\n        },\n        sort: function sort() {\n          var state = getInternalParamsState(this);\n          var entries = state.entries;\n          var slice = entries.slice();\n          var entry, entriesIndex, sliceIndex;\n          entries.length = 0;\n          for (sliceIndex = 0; sliceIndex < slice.length; sliceIndex++) {\n            entry = slice[sliceIndex];\n            for (entriesIndex = 0; entriesIndex < sliceIndex; entriesIndex++) {\n              if (entries[entriesIndex].key > entry.key) {\n                entries.splice(entriesIndex, 0, entry);\n                break;\n              }\n            }\n            if (entriesIndex === sliceIndex) entries.push(entry);\n          }\n          state.updateURL();\n        },\n        forEach: function forEach(callback) {\n          var entries = getInternalParamsState(this).entries;\n          var boundFunction = bind(callback, arguments.length > 1 ? arguments[1] : undefined, 3);\n          var index = 0;\n          var entry;\n          while (index < entries.length) {\n            entry = entries[index++];\n            boundFunction(entry.value, entry.key, this);\n          }\n        },\n        keys: function keys() {\n          return new URLSearchParamsIterator(this, 'keys');\n        },\n        values: function values() {\n          return new URLSearchParamsIterator(this, 'values');\n        },\n        entries: function entries() {\n          return new URLSearchParamsIterator(this, 'entries');\n        }\n      }, {\n        enumerable: true\n      });\n      redefine(URLSearchParamsPrototype, ITERATOR, URLSearchParamsPrototype.entries);\n      redefine(URLSearchParamsPrototype, 'toString', function toString() {\n        var entries = getInternalParamsState(this).entries;\n        var result = [];\n        var index = 0;\n        var entry;\n        while (index < entries.length) {\n          entry = entries[index++];\n          result.push(serialize(entry.key) + '=' + serialize(entry.value));\n        }\n        return result.join('&');\n      }, {\n        enumerable: true\n      });\n      setToStringTag(URLSearchParamsConstructor, URL_SEARCH_PARAMS);\n      $({\n        global: true,\n        forced: !USE_NATIVE_URL\n      }, {\n        URLSearchParams: URLSearchParamsConstructor\n      });\n      if (!USE_NATIVE_URL && typeof $fetch == 'function' && typeof Headers == 'function') {\n        $({\n          global: true,\n          enumerable: true,\n          forced: true\n        }, {\n          fetch: function fetch(input) {\n            var args = [input];\n            var init, body, headers;\n            if (arguments.length > 1) {\n              init = arguments[1];\n              if (isObject(init)) {\n                body = init.body;\n                if (classof(body) === URL_SEARCH_PARAMS) {\n                  headers = init.headers ? new Headers(init.headers) : new Headers();\n                  if (!headers.has('content-type')) {\n                    headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n                  }\n                  init = create(init, {\n                    body: createPropertyDescriptor(0, String(body)),\n                    headers: createPropertyDescriptor(0, headers)\n                  });\n                }\n              }\n              args.push(init);\n            }\n            return $fetch.apply(this, args);\n          }\n        });\n      }\n      module.exports = {\n        URLSearchParams: URLSearchParamsConstructor,\n        getState: getInternalParamsState\n      };\n\n      /***/\n    }, /* 141 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var anObject = __w_pdfjs_require__(28);\n      var getIteratorMethod = __w_pdfjs_require__(94);\n      module.exports = function (it) {\n        var iteratorMethod = getIteratorMethod(it);\n        if (typeof iteratorMethod != 'function') {\n          throw TypeError(String(it) + ' is not iterable');\n        }\n        return anObject(iteratorMethod.call(it));\n      };\n\n      /***/\n    }, /* 142 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var $ = __w_pdfjs_require__(10);\n      $({\n        target: 'URL',\n        proto: true,\n        enumerable: true\n      }, {\n        toJSON: function toJSON() {\n          return URL.prototype.toString.call(this);\n        }\n      });\n\n      /***/\n    }, /* 143 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      (function (global, factory) {\n        true ? factory(exports) : undefined;\n      })(this, function (exports) {\n        'use strict';\n\n        var SymbolPolyfill = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol : function (description) {\n          return \"Symbol(\" + description + \")\";\n        };\n        function noop() {}\n        var NumberIsNaN = Number.isNaN || function (x) {\n          return x !== x;\n        };\n        var rethrowAssertionErrorRejection = noop;\n        function typeIsObject(x) {\n          return typeof x === 'object' && x !== null || typeof x === 'function';\n        }\n        function createArrayFromList(elements) {\n          return elements.slice();\n        }\n        function ArrayBufferCopy(dest, destOffset, src, srcOffset, n) {\n          new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n        }\n        function IsFiniteNonNegativeNumber(v) {\n          if (IsNonNegativeNumber(v) === false) {\n            return false;\n          }\n          if (v === Infinity) {\n            return false;\n          }\n          return true;\n        }\n        function IsNonNegativeNumber(v) {\n          if (typeof v !== 'number') {\n            return false;\n          }\n          if (NumberIsNaN(v)) {\n            return false;\n          }\n          if (v < 0) {\n            return false;\n          }\n          return true;\n        }\n        function Call(F, V, args) {\n          if (typeof F !== 'function') {\n            throw new TypeError('Argument is not a function');\n          }\n          return Function.prototype.apply.call(F, V, args);\n        }\n        function CreateAlgorithmFromUnderlyingMethod(underlyingObject, methodName, algoArgCount, extraArgs) {\n          var method = underlyingObject[methodName];\n          if (method !== undefined) {\n            if (typeof method !== 'function') {\n              throw new TypeError(method + \" is not a method\");\n            }\n            switch (algoArgCount) {\n              case 0:\n                {\n                  return function () {\n                    return PromiseCall(method, underlyingObject, extraArgs);\n                  };\n                }\n              case 1:\n                {\n                  return function (arg) {\n                    var fullArgs = [arg].concat(extraArgs);\n                    return PromiseCall(method, underlyingObject, fullArgs);\n                  };\n                }\n            }\n          }\n          return function () {\n            return promiseResolvedWith(undefined);\n          };\n        }\n        function InvokeOrNoop(O, P, args) {\n          var method = O[P];\n          if (method === undefined) {\n            return undefined;\n          }\n          return Call(method, O, args);\n        }\n        function PromiseCall(F, V, args) {\n          try {\n            return promiseResolvedWith(Call(F, V, args));\n          } catch (value) {\n            return promiseRejectedWith(value);\n          }\n        }\n        function TransferArrayBuffer(O) {\n          return O;\n        }\n        function IsDetachedBuffer(O) {\n          return false;\n        }\n        function ValidateAndNormalizeHighWaterMark(highWaterMark) {\n          highWaterMark = Number(highWaterMark);\n          if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {\n            throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');\n          }\n          return highWaterMark;\n        }\n        function MakeSizeAlgorithmFromSizeFunction(size) {\n          if (size === undefined) {\n            return function () {\n              return 1;\n            };\n          }\n          if (typeof size !== 'function') {\n            throw new TypeError('size property of a queuing strategy must be a function');\n          }\n          return function (chunk) {\n            return size(chunk);\n          };\n        }\n        var originalPromise = Promise;\n        var originalPromiseThen = Promise.prototype.then;\n        var originalPromiseResolve = Promise.resolve.bind(originalPromise);\n        var originalPromiseReject = Promise.reject.bind(originalPromise);\n        function newPromise(executor) {\n          return new originalPromise(executor);\n        }\n        function promiseResolvedWith(value) {\n          return originalPromiseResolve(value);\n        }\n        function promiseRejectedWith(reason) {\n          return originalPromiseReject(reason);\n        }\n        function PerformPromiseThen(promise, onFulfilled, onRejected) {\n          return originalPromiseThen.call(promise, onFulfilled, onRejected);\n        }\n        function uponPromise(promise, onFulfilled, onRejected) {\n          PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), undefined, rethrowAssertionErrorRejection);\n        }\n        function uponFulfillment(promise, onFulfilled) {\n          uponPromise(promise, onFulfilled);\n        }\n        function uponRejection(promise, onRejected) {\n          uponPromise(promise, undefined, onRejected);\n        }\n        function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {\n          return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\n        }\n        function setPromiseIsHandledToTrue(promise) {\n          PerformPromiseThen(promise, undefined, rethrowAssertionErrorRejection);\n        }\n        var QUEUE_MAX_ARRAY_SIZE = 16384;\n        var SimpleQueue = function () {\n          function SimpleQueue() {\n            this._cursor = 0;\n            this._size = 0;\n            this._front = {\n              _elements: [],\n              _next: undefined\n            };\n            this._back = this._front;\n            this._cursor = 0;\n            this._size = 0;\n          }\n          Object.defineProperty(SimpleQueue.prototype, \"length\", {\n            get: function () {\n              return this._size;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          SimpleQueue.prototype.push = function (element) {\n            var oldBack = this._back;\n            var newBack = oldBack;\n            if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {\n              newBack = {\n                _elements: [],\n                _next: undefined\n              };\n            }\n            oldBack._elements.push(element);\n            if (newBack !== oldBack) {\n              this._back = newBack;\n              oldBack._next = newBack;\n            }\n            ++this._size;\n          };\n          SimpleQueue.prototype.shift = function () {\n            var oldFront = this._front;\n            var newFront = oldFront;\n            var oldCursor = this._cursor;\n            var newCursor = oldCursor + 1;\n            var elements = oldFront._elements;\n            var element = elements[oldCursor];\n            if (newCursor === QUEUE_MAX_ARRAY_SIZE) {\n              newFront = oldFront._next;\n              newCursor = 0;\n            }\n            --this._size;\n            this._cursor = newCursor;\n            if (oldFront !== newFront) {\n              this._front = newFront;\n            }\n            elements[oldCursor] = undefined;\n            return element;\n          };\n          SimpleQueue.prototype.forEach = function (callback) {\n            var i = this._cursor;\n            var node = this._front;\n            var elements = node._elements;\n            while (i !== elements.length || node._next !== undefined) {\n              if (i === elements.length) {\n                node = node._next;\n                elements = node._elements;\n                i = 0;\n                if (elements.length === 0) {\n                  break;\n                }\n              }\n              callback(elements[i]);\n              ++i;\n            }\n          };\n          SimpleQueue.prototype.peek = function () {\n            var front = this._front;\n            var cursor = this._cursor;\n            return front._elements[cursor];\n          };\n          return SimpleQueue;\n        }();\n        function ReadableStreamCreateReadResult(value, done, forAuthorCode) {\n          var prototype = null;\n          if (forAuthorCode === true) {\n            prototype = Object.prototype;\n          }\n          var obj = Object.create(prototype);\n          obj.value = value;\n          obj.done = done;\n          return obj;\n        }\n        function ReadableStreamReaderGenericInitialize(reader, stream) {\n          reader._forAuthorCode = true;\n          reader._ownerReadableStream = stream;\n          stream._reader = reader;\n          if (stream._state === 'readable') {\n            defaultReaderClosedPromiseInitialize(reader);\n          } else if (stream._state === 'closed') {\n            defaultReaderClosedPromiseInitializeAsResolved(reader);\n          } else {\n            defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n          }\n        }\n        function ReadableStreamReaderGenericCancel(reader, reason) {\n          var stream = reader._ownerReadableStream;\n          return ReadableStreamCancel(stream, reason);\n        }\n        function ReadableStreamReaderGenericRelease(reader) {\n          if (reader._ownerReadableStream._state === 'readable') {\n            defaultReaderClosedPromiseReject(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n          } else {\n            defaultReaderClosedPromiseResetToRejected(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n          }\n          reader._ownerReadableStream._reader = undefined;\n          reader._ownerReadableStream = undefined;\n        }\n        function readerLockException(name) {\n          return new TypeError('Cannot ' + name + ' a stream using a released reader');\n        }\n        function defaultReaderClosedPromiseInitialize(reader) {\n          reader._closedPromise = newPromise(function (resolve, reject) {\n            reader._closedPromise_resolve = resolve;\n            reader._closedPromise_reject = reject;\n          });\n        }\n        function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n          defaultReaderClosedPromiseInitialize(reader);\n          defaultReaderClosedPromiseReject(reader, reason);\n        }\n        function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n          defaultReaderClosedPromiseInitialize(reader);\n          defaultReaderClosedPromiseResolve(reader);\n        }\n        function defaultReaderClosedPromiseReject(reader, reason) {\n          setPromiseIsHandledToTrue(reader._closedPromise);\n          reader._closedPromise_reject(reason);\n          reader._closedPromise_resolve = undefined;\n          reader._closedPromise_reject = undefined;\n        }\n        function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n          defaultReaderClosedPromiseInitializeAsRejected(reader, reason);\n        }\n        function defaultReaderClosedPromiseResolve(reader) {\n          reader._closedPromise_resolve(undefined);\n          reader._closedPromise_resolve = undefined;\n          reader._closedPromise_reject = undefined;\n        }\n        var CancelSteps = SymbolPolyfill('[[CancelSteps]]');\n        var PullSteps = SymbolPolyfill('[[PullSteps]]');\n        function AcquireReadableStreamDefaultReader(stream, forAuthorCode) {\n          if (forAuthorCode === void 0) {\n            forAuthorCode = false;\n          }\n          var reader = new ReadableStreamDefaultReader(stream);\n          reader._forAuthorCode = forAuthorCode;\n          return reader;\n        }\n        function ReadableStreamAddReadRequest(stream) {\n          var promise = newPromise(function (resolve, reject) {\n            var readRequest = {\n              _resolve: resolve,\n              _reject: reject\n            };\n            stream._reader._readRequests.push(readRequest);\n          });\n          return promise;\n        }\n        function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n          var reader = stream._reader;\n          var readRequest = reader._readRequests.shift();\n          readRequest._resolve(ReadableStreamCreateReadResult(chunk, done, reader._forAuthorCode));\n        }\n        function ReadableStreamGetNumReadRequests(stream) {\n          return stream._reader._readRequests.length;\n        }\n        function ReadableStreamHasDefaultReader(stream) {\n          var reader = stream._reader;\n          if (reader === undefined) {\n            return false;\n          }\n          if (!IsReadableStreamDefaultReader(reader)) {\n            return false;\n          }\n          return true;\n        }\n        var ReadableStreamDefaultReader = function () {\n          function ReadableStreamDefaultReader(stream) {\n            if (IsReadableStream(stream) === false) {\n              throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');\n            }\n            if (IsReadableStreamLocked(stream) === true) {\n              throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n            }\n            ReadableStreamReaderGenericInitialize(this, stream);\n            this._readRequests = new SimpleQueue();\n          }\n          Object.defineProperty(ReadableStreamDefaultReader.prototype, \"closed\", {\n            get: function () {\n              if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('closed'));\n              }\n              return this._closedPromise;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          ReadableStreamDefaultReader.prototype.cancel = function (reason) {\n            if (!IsReadableStreamDefaultReader(this)) {\n              return promiseRejectedWith(defaultReaderBrandCheckException('cancel'));\n            }\n            if (this._ownerReadableStream === undefined) {\n              return promiseRejectedWith(readerLockException('cancel'));\n            }\n            return ReadableStreamReaderGenericCancel(this, reason);\n          };\n          ReadableStreamDefaultReader.prototype.read = function () {\n            if (!IsReadableStreamDefaultReader(this)) {\n              return promiseRejectedWith(defaultReaderBrandCheckException('read'));\n            }\n            if (this._ownerReadableStream === undefined) {\n              return promiseRejectedWith(readerLockException('read from'));\n            }\n            return ReadableStreamDefaultReaderRead(this);\n          };\n          ReadableStreamDefaultReader.prototype.releaseLock = function () {\n            if (!IsReadableStreamDefaultReader(this)) {\n              throw defaultReaderBrandCheckException('releaseLock');\n            }\n            if (this._ownerReadableStream === undefined) {\n              return;\n            }\n            if (this._readRequests.length > 0) {\n              throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n            }\n            ReadableStreamReaderGenericRelease(this);\n          };\n          return ReadableStreamDefaultReader;\n        }();\n        function IsReadableStreamDefaultReader(x) {\n          if (!typeIsObject(x)) {\n            return false;\n          }\n          if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n            return false;\n          }\n          return true;\n        }\n        function ReadableStreamDefaultReaderRead(reader) {\n          var stream = reader._ownerReadableStream;\n          stream._disturbed = true;\n          if (stream._state === 'closed') {\n            return promiseResolvedWith(ReadableStreamCreateReadResult(undefined, true, reader._forAuthorCode));\n          }\n          if (stream._state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n          }\n          return stream._readableStreamController[PullSteps]();\n        }\n        function defaultReaderBrandCheckException(name) {\n          return new TypeError(\"ReadableStreamDefaultReader.prototype.\" + name + \" can only be used on a ReadableStreamDefaultReader\");\n        }\n        var _a;\n        var AsyncIteratorPrototype;\n        if (typeof SymbolPolyfill.asyncIterator === 'symbol') {\n          AsyncIteratorPrototype = (_a = {}, _a[SymbolPolyfill.asyncIterator] = function () {\n            return this;\n          }, _a);\n          Object.defineProperty(AsyncIteratorPrototype, SymbolPolyfill.asyncIterator, {\n            enumerable: false\n          });\n        }\n        var ReadableStreamAsyncIteratorPrototype = {\n          next: function () {\n            if (IsReadableStreamAsyncIterator(this) === false) {\n              return promiseRejectedWith(streamAsyncIteratorBrandCheckException('next'));\n            }\n            var reader = this._asyncIteratorReader;\n            if (reader._ownerReadableStream === undefined) {\n              return promiseRejectedWith(readerLockException('iterate'));\n            }\n            return transformPromiseWith(ReadableStreamDefaultReaderRead(reader), function (result) {\n              var done = result.done;\n              if (done) {\n                ReadableStreamReaderGenericRelease(reader);\n              }\n              var value = result.value;\n              return ReadableStreamCreateReadResult(value, done, true);\n            });\n          },\n          return: function (value) {\n            if (IsReadableStreamAsyncIterator(this) === false) {\n              return promiseRejectedWith(streamAsyncIteratorBrandCheckException('next'));\n            }\n            var reader = this._asyncIteratorReader;\n            if (reader._ownerReadableStream === undefined) {\n              return promiseRejectedWith(readerLockException('finish iterating'));\n            }\n            if (reader._readRequests.length > 0) {\n              return promiseRejectedWith(new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled'));\n            }\n            if (this._preventCancel === false) {\n              var result = ReadableStreamReaderGenericCancel(reader, value);\n              ReadableStreamReaderGenericRelease(reader);\n              return transformPromiseWith(result, function () {\n                return ReadableStreamCreateReadResult(value, true, true);\n              });\n            }\n            ReadableStreamReaderGenericRelease(reader);\n            return promiseResolvedWith(ReadableStreamCreateReadResult(value, true, true));\n          }\n        };\n        if (AsyncIteratorPrototype !== undefined) {\n          Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);\n        }\n        Object.defineProperty(ReadableStreamAsyncIteratorPrototype, 'next', {\n          enumerable: false\n        });\n        Object.defineProperty(ReadableStreamAsyncIteratorPrototype, 'return', {\n          enumerable: false\n        });\n        function AcquireReadableStreamAsyncIterator(stream, preventCancel) {\n          if (preventCancel === void 0) {\n            preventCancel = false;\n          }\n          var reader = AcquireReadableStreamDefaultReader(stream);\n          var iterator = Object.create(ReadableStreamAsyncIteratorPrototype);\n          iterator._asyncIteratorReader = reader;\n          iterator._preventCancel = Boolean(preventCancel);\n          return iterator;\n        }\n        function IsReadableStreamAsyncIterator(x) {\n          if (!typeIsObject(x)) {\n            return false;\n          }\n          if (!Object.prototype.hasOwnProperty.call(x, '_asyncIteratorReader')) {\n            return false;\n          }\n          return true;\n        }\n        function streamAsyncIteratorBrandCheckException(name) {\n          return new TypeError(\"ReadableStreamAsyncIterator.\" + name + \" can only be used on a ReadableSteamAsyncIterator\");\n        }\n        function DequeueValue(container) {\n          var pair = container._queue.shift();\n          container._queueTotalSize -= pair.size;\n          if (container._queueTotalSize < 0) {\n            container._queueTotalSize = 0;\n          }\n          return pair.value;\n        }\n        function EnqueueValueWithSize(container, value, size) {\n          size = Number(size);\n          if (!IsFiniteNonNegativeNumber(size)) {\n            throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n          }\n          container._queue.push({\n            value: value,\n            size: size\n          });\n          container._queueTotalSize += size;\n        }\n        function PeekQueueValue(container) {\n          var pair = container._queue.peek();\n          return pair.value;\n        }\n        function ResetQueue(container) {\n          container._queue = new SimpleQueue();\n          container._queueTotalSize = 0;\n        }\n        var AbortSteps = SymbolPolyfill('[[AbortSteps]]');\n        var ErrorSteps = SymbolPolyfill('[[ErrorSteps]]');\n        var WritableStream = function () {\n          function WritableStream(underlyingSink, strategy) {\n            if (underlyingSink === void 0) {\n              underlyingSink = {};\n            }\n            if (strategy === void 0) {\n              strategy = {};\n            }\n            InitializeWritableStream(this);\n            var size = strategy.size;\n            var highWaterMark = strategy.highWaterMark;\n            var type = underlyingSink.type;\n            if (type !== undefined) {\n              throw new RangeError('Invalid type is specified');\n            }\n            var sizeAlgorithm = MakeSizeAlgorithmFromSizeFunction(size);\n            if (highWaterMark === undefined) {\n              highWaterMark = 1;\n            }\n            highWaterMark = ValidateAndNormalizeHighWaterMark(highWaterMark);\n            SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n          }\n          Object.defineProperty(WritableStream.prototype, \"locked\", {\n            get: function () {\n              if (IsWritableStream(this) === false) {\n                throw streamBrandCheckException('locked');\n              }\n              return IsWritableStreamLocked(this);\n            },\n            enumerable: true,\n            configurable: true\n          });\n          WritableStream.prototype.abort = function (reason) {\n            if (IsWritableStream(this) === false) {\n              return promiseRejectedWith(streamBrandCheckException('abort'));\n            }\n            if (IsWritableStreamLocked(this) === true) {\n              return promiseRejectedWith(new TypeError('Cannot abort a stream that already has a writer'));\n            }\n            return WritableStreamAbort(this, reason);\n          };\n          WritableStream.prototype.close = function () {\n            if (IsWritableStream(this) === false) {\n              return promiseRejectedWith(streamBrandCheckException('close'));\n            }\n            if (IsWritableStreamLocked(this) === true) {\n              return promiseRejectedWith(new TypeError('Cannot close a stream that already has a writer'));\n            }\n            if (WritableStreamCloseQueuedOrInFlight(this) === true) {\n              return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n            }\n            return WritableStreamClose(this);\n          };\n          WritableStream.prototype.getWriter = function () {\n            if (IsWritableStream(this) === false) {\n              throw streamBrandCheckException('getWriter');\n            }\n            return AcquireWritableStreamDefaultWriter(this);\n          };\n          return WritableStream;\n        }();\n        function AcquireWritableStreamDefaultWriter(stream) {\n          return new WritableStreamDefaultWriter(stream);\n        }\n        function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {\n          if (highWaterMark === void 0) {\n            highWaterMark = 1;\n          }\n          if (sizeAlgorithm === void 0) {\n            sizeAlgorithm = function () {\n              return 1;\n            };\n          }\n          var stream = Object.create(WritableStream.prototype);\n          InitializeWritableStream(stream);\n          var controller = Object.create(WritableStreamDefaultController.prototype);\n          SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n          return stream;\n        }\n        function InitializeWritableStream(stream) {\n          stream._state = 'writable';\n          stream._storedError = undefined;\n          stream._writer = undefined;\n          stream._writableStreamController = undefined;\n          stream._writeRequests = new SimpleQueue();\n          stream._inFlightWriteRequest = undefined;\n          stream._closeRequest = undefined;\n          stream._inFlightCloseRequest = undefined;\n          stream._pendingAbortRequest = undefined;\n          stream._backpressure = false;\n        }\n        function IsWritableStream(x) {\n          if (!typeIsObject(x)) {\n            return false;\n          }\n          if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n            return false;\n          }\n          return true;\n        }\n        function IsWritableStreamLocked(stream) {\n          if (stream._writer === undefined) {\n            return false;\n          }\n          return true;\n        }\n        function WritableStreamAbort(stream, reason) {\n          var state = stream._state;\n          if (state === 'closed' || state === 'errored') {\n            return promiseResolvedWith(undefined);\n          }\n          if (stream._pendingAbortRequest !== undefined) {\n            return stream._pendingAbortRequest._promise;\n          }\n          var wasAlreadyErroring = false;\n          if (state === 'erroring') {\n            wasAlreadyErroring = true;\n            reason = undefined;\n          }\n          var promise = newPromise(function (resolve, reject) {\n            stream._pendingAbortRequest = {\n              _promise: undefined,\n              _resolve: resolve,\n              _reject: reject,\n              _reason: reason,\n              _wasAlreadyErroring: wasAlreadyErroring\n            };\n          });\n          stream._pendingAbortRequest._promise = promise;\n          if (wasAlreadyErroring === false) {\n            WritableStreamStartErroring(stream, reason);\n          }\n          return promise;\n        }\n        function WritableStreamClose(stream) {\n          var state = stream._state;\n          if (state === 'closed' || state === 'errored') {\n            return promiseRejectedWith(new TypeError(\"The stream (in \" + state + \" state) is not in the writable state and cannot be closed\"));\n          }\n          var promise = newPromise(function (resolve, reject) {\n            var closeRequest = {\n              _resolve: resolve,\n              _reject: reject\n            };\n            stream._closeRequest = closeRequest;\n          });\n          var writer = stream._writer;\n          if (writer !== undefined && stream._backpressure === true && state === 'writable') {\n            defaultWriterReadyPromiseResolve(writer);\n          }\n          WritableStreamDefaultControllerClose(stream._writableStreamController);\n          return promise;\n        }\n        function WritableStreamAddWriteRequest(stream) {\n          var promise = newPromise(function (resolve, reject) {\n            var writeRequest = {\n              _resolve: resolve,\n              _reject: reject\n            };\n            stream._writeRequests.push(writeRequest);\n          });\n          return promise;\n        }\n        function WritableStreamDealWithRejection(stream, error) {\n          var state = stream._state;\n          if (state === 'writable') {\n            WritableStreamStartErroring(stream, error);\n            return;\n          }\n          WritableStreamFinishErroring(stream);\n        }\n        function WritableStreamStartErroring(stream, reason) {\n          var controller = stream._writableStreamController;\n          stream._state = 'erroring';\n          stream._storedError = reason;\n          var writer = stream._writer;\n          if (writer !== undefined) {\n            WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n          }\n          if (WritableStreamHasOperationMarkedInFlight(stream) === false && controller._started === true) {\n            WritableStreamFinishErroring(stream);\n          }\n        }\n        function WritableStreamFinishErroring(stream) {\n          stream._state = 'errored';\n          stream._writableStreamController[ErrorSteps]();\n          var storedError = stream._storedError;\n          stream._writeRequests.forEach(function (writeRequest) {\n            writeRequest._reject(storedError);\n          });\n          stream._writeRequests = new SimpleQueue();\n          if (stream._pendingAbortRequest === undefined) {\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return;\n          }\n          var abortRequest = stream._pendingAbortRequest;\n          stream._pendingAbortRequest = undefined;\n          if (abortRequest._wasAlreadyErroring === true) {\n            abortRequest._reject(storedError);\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return;\n          }\n          var promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n          uponPromise(promise, function () {\n            abortRequest._resolve();\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n          }, function (reason) {\n            abortRequest._reject(reason);\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n          });\n        }\n        function WritableStreamFinishInFlightWrite(stream) {\n          stream._inFlightWriteRequest._resolve(undefined);\n          stream._inFlightWriteRequest = undefined;\n        }\n        function WritableStreamFinishInFlightWriteWithError(stream, error) {\n          stream._inFlightWriteRequest._reject(error);\n          stream._inFlightWriteRequest = undefined;\n          WritableStreamDealWithRejection(stream, error);\n        }\n        function WritableStreamFinishInFlightClose(stream) {\n          stream._inFlightCloseRequest._resolve(undefined);\n          stream._inFlightCloseRequest = undefined;\n          var state = stream._state;\n          if (state === 'erroring') {\n            stream._storedError = undefined;\n            if (stream._pendingAbortRequest !== undefined) {\n              stream._pendingAbortRequest._resolve();\n              stream._pendingAbortRequest = undefined;\n            }\n          }\n          stream._state = 'closed';\n          var writer = stream._writer;\n          if (writer !== undefined) {\n            defaultWriterClosedPromiseResolve(writer);\n          }\n        }\n        function WritableStreamFinishInFlightCloseWithError(stream, error) {\n          stream._inFlightCloseRequest._reject(error);\n          stream._inFlightCloseRequest = undefined;\n          if (stream._pendingAbortRequest !== undefined) {\n            stream._pendingAbortRequest._reject(error);\n            stream._pendingAbortRequest = undefined;\n          }\n          WritableStreamDealWithRejection(stream, error);\n        }\n        function WritableStreamCloseQueuedOrInFlight(stream) {\n          if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n            return false;\n          }\n          return true;\n        }\n        function WritableStreamHasOperationMarkedInFlight(stream) {\n          if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n            return false;\n          }\n          return true;\n        }\n        function WritableStreamMarkCloseRequestInFlight(stream) {\n          stream._inFlightCloseRequest = stream._closeRequest;\n          stream._closeRequest = undefined;\n        }\n        function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n          stream._inFlightWriteRequest = stream._writeRequests.shift();\n        }\n        function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n          if (stream._closeRequest !== undefined) {\n            stream._closeRequest._reject(stream._storedError);\n            stream._closeRequest = undefined;\n          }\n          var writer = stream._writer;\n          if (writer !== undefined) {\n            defaultWriterClosedPromiseReject(writer, stream._storedError);\n          }\n        }\n        function WritableStreamUpdateBackpressure(stream, backpressure) {\n          var writer = stream._writer;\n          if (writer !== undefined && backpressure !== stream._backpressure) {\n            if (backpressure === true) {\n              defaultWriterReadyPromiseReset(writer);\n            } else {\n              defaultWriterReadyPromiseResolve(writer);\n            }\n          }\n          stream._backpressure = backpressure;\n        }\n        var WritableStreamDefaultWriter = function () {\n          function WritableStreamDefaultWriter(stream) {\n            if (IsWritableStream(stream) === false) {\n              throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');\n            }\n            if (IsWritableStreamLocked(stream) === true) {\n              throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n            }\n            this._ownerWritableStream = stream;\n            stream._writer = this;\n            var state = stream._state;\n            if (state === 'writable') {\n              if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._backpressure === true) {\n                defaultWriterReadyPromiseInitialize(this);\n              } else {\n                defaultWriterReadyPromiseInitializeAsResolved(this);\n              }\n              defaultWriterClosedPromiseInitialize(this);\n            } else if (state === 'erroring') {\n              defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n              defaultWriterClosedPromiseInitialize(this);\n            } else if (state === 'closed') {\n              defaultWriterReadyPromiseInitializeAsResolved(this);\n              defaultWriterClosedPromiseInitializeAsResolved(this);\n            } else {\n              var storedError = stream._storedError;\n              defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n              defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n            }\n          }\n          Object.defineProperty(WritableStreamDefaultWriter.prototype, \"closed\", {\n            get: function () {\n              if (IsWritableStreamDefaultWriter(this) === false) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('closed'));\n              }\n              return this._closedPromise;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(WritableStreamDefaultWriter.prototype, \"desiredSize\", {\n            get: function () {\n              if (IsWritableStreamDefaultWriter(this) === false) {\n                throw defaultWriterBrandCheckException('desiredSize');\n              }\n              if (this._ownerWritableStream === undefined) {\n                throw defaultWriterLockException('desiredSize');\n              }\n              return WritableStreamDefaultWriterGetDesiredSize(this);\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(WritableStreamDefaultWriter.prototype, \"ready\", {\n            get: function () {\n              if (IsWritableStreamDefaultWriter(this) === false) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('ready'));\n              }\n              return this._readyPromise;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          WritableStreamDefaultWriter.prototype.abort = function (reason) {\n            if (IsWritableStreamDefaultWriter(this) === false) {\n              return promiseRejectedWith(defaultWriterBrandCheckException('abort'));\n            }\n            if (this._ownerWritableStream === undefined) {\n              return promiseRejectedWith(defaultWriterLockException('abort'));\n            }\n            return WritableStreamDefaultWriterAbort(this, reason);\n          };\n          WritableStreamDefaultWriter.prototype.close = function () {\n            if (IsWritableStreamDefaultWriter(this) === false) {\n              return promiseRejectedWith(defaultWriterBrandCheckException('close'));\n            }\n            var stream = this._ownerWritableStream;\n            if (stream === undefined) {\n              return promiseRejectedWith(defaultWriterLockException('close'));\n            }\n            if (WritableStreamCloseQueuedOrInFlight(stream) === true) {\n              return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n            }\n            return WritableStreamDefaultWriterClose(this);\n          };\n          WritableStreamDefaultWriter.prototype.releaseLock = function () {\n            if (IsWritableStreamDefaultWriter(this) === false) {\n              throw defaultWriterBrandCheckException('releaseLock');\n            }\n            var stream = this._ownerWritableStream;\n            if (stream === undefined) {\n              return;\n            }\n            WritableStreamDefaultWriterRelease(this);\n          };\n          WritableStreamDefaultWriter.prototype.write = function (chunk) {\n            if (IsWritableStreamDefaultWriter(this) === false) {\n              return promiseRejectedWith(defaultWriterBrandCheckException('write'));\n            }\n            if (this._ownerWritableStream === undefined) {\n              return promiseRejectedWith(defaultWriterLockException('write to'));\n            }\n            return WritableStreamDefaultWriterWrite(this, chunk);\n          };\n          return WritableStreamDefaultWriter;\n        }();\n        function IsWritableStreamDefaultWriter(x) {\n          if (!typeIsObject(x)) {\n            return false;\n          }\n          if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n            return false;\n          }\n          return true;\n        }\n        function WritableStreamDefaultWriterAbort(writer, reason) {\n          var stream = writer._ownerWritableStream;\n          return WritableStreamAbort(stream, reason);\n        }\n        function WritableStreamDefaultWriterClose(writer) {\n          var stream = writer._ownerWritableStream;\n          return WritableStreamClose(stream);\n        }\n        function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n          var stream = writer._ownerWritableStream;\n          var state = stream._state;\n          if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n            return promiseResolvedWith(undefined);\n          }\n          if (state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n          }\n          return WritableStreamDefaultWriterClose(writer);\n        }\n        function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n          if (writer._closedPromiseState === 'pending') {\n            defaultWriterClosedPromiseReject(writer, error);\n          } else {\n            defaultWriterClosedPromiseResetToRejected(writer, error);\n          }\n        }\n        function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n          if (writer._readyPromiseState === 'pending') {\n            defaultWriterReadyPromiseReject(writer, error);\n          } else {\n            defaultWriterReadyPromiseResetToRejected(writer, error);\n          }\n        }\n        function WritableStreamDefaultWriterGetDesiredSize(writer) {\n          var stream = writer._ownerWritableStream;\n          var state = stream._state;\n          if (state === 'errored' || state === 'erroring') {\n            return null;\n          }\n          if (state === 'closed') {\n            return 0;\n          }\n          return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n        }\n        function WritableStreamDefaultWriterRelease(writer) {\n          var stream = writer._ownerWritableStream;\n          var releasedError = new TypeError('Writer was released and can no longer be used to monitor the stream\\'s closedness');\n          WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n          WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n          stream._writer = undefined;\n          writer._ownerWritableStream = undefined;\n        }\n        function WritableStreamDefaultWriterWrite(writer, chunk) {\n          var stream = writer._ownerWritableStream;\n          var controller = stream._writableStreamController;\n          var chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n          if (stream !== writer._ownerWritableStream) {\n            return promiseRejectedWith(defaultWriterLockException('write to'));\n          }\n          var state = stream._state;\n          if (state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n          }\n          if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n            return promiseRejectedWith(new TypeError('The stream is closing or closed and cannot be written to'));\n          }\n          if (state === 'erroring') {\n            return promiseRejectedWith(stream._storedError);\n          }\n          var promise = WritableStreamAddWriteRequest(stream);\n          WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n          return promise;\n        }\n        var WritableStreamDefaultController = function () {\n          function WritableStreamDefaultController() {\n            throw new TypeError('WritableStreamDefaultController cannot be constructed explicitly');\n          }\n          WritableStreamDefaultController.prototype.error = function (e) {\n            if (IsWritableStreamDefaultController(this) === false) {\n              throw new TypeError('WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');\n            }\n            var state = this._controlledWritableStream._state;\n            if (state !== 'writable') {\n              return;\n            }\n            WritableStreamDefaultControllerError(this, e);\n          };\n          WritableStreamDefaultController.prototype[AbortSteps] = function (reason) {\n            var result = this._abortAlgorithm(reason);\n            WritableStreamDefaultControllerClearAlgorithms(this);\n            return result;\n          };\n          WritableStreamDefaultController.prototype[ErrorSteps] = function () {\n            ResetQueue(this);\n          };\n          return WritableStreamDefaultController;\n        }();\n        function IsWritableStreamDefaultController(x) {\n          if (!typeIsObject(x)) {\n            return false;\n          }\n          if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\n            return false;\n          }\n          return true;\n        }\n        function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {\n          controller._controlledWritableStream = stream;\n          stream._writableStreamController = controller;\n          controller._queue = undefined;\n          controller._queueTotalSize = undefined;\n          ResetQueue(controller);\n          controller._started = false;\n          controller._strategySizeAlgorithm = sizeAlgorithm;\n          controller._strategyHWM = highWaterMark;\n          controller._writeAlgorithm = writeAlgorithm;\n          controller._closeAlgorithm = closeAlgorithm;\n          controller._abortAlgorithm = abortAlgorithm;\n          var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n          WritableStreamUpdateBackpressure(stream, backpressure);\n          var startResult = startAlgorithm();\n          var startPromise = promiseResolvedWith(startResult);\n          uponPromise(startPromise, function () {\n            controller._started = true;\n            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n          }, function (r) {\n            controller._started = true;\n            WritableStreamDealWithRejection(stream, r);\n          });\n        }\n        function SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {\n          var controller = Object.create(WritableStreamDefaultController.prototype);\n          function startAlgorithm() {\n            return InvokeOrNoop(underlyingSink, 'start', [controller]);\n          }\n          var writeAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingSink, 'write', 1, [controller]);\n          var closeAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingSink, 'close', 0, []);\n          var abortAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingSink, 'abort', 1, []);\n          SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n        }\n        function WritableStreamDefaultControllerClearAlgorithms(controller) {\n          controller._writeAlgorithm = undefined;\n          controller._closeAlgorithm = undefined;\n          controller._abortAlgorithm = undefined;\n          controller._strategySizeAlgorithm = undefined;\n        }\n        function WritableStreamDefaultControllerClose(controller) {\n          EnqueueValueWithSize(controller, 'close', 0);\n          WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n        }\n        function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n          try {\n            return controller._strategySizeAlgorithm(chunk);\n          } catch (chunkSizeE) {\n            WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n            return 1;\n          }\n        }\n        function WritableStreamDefaultControllerGetDesiredSize(controller) {\n          return controller._strategyHWM - controller._queueTotalSize;\n        }\n        function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n          var writeRecord = {\n            chunk: chunk\n          };\n          try {\n            EnqueueValueWithSize(controller, writeRecord, chunkSize);\n          } catch (enqueueE) {\n            WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n            return;\n          }\n          var stream = controller._controlledWritableStream;\n          if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._state === 'writable') {\n            var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n            WritableStreamUpdateBackpressure(stream, backpressure);\n          }\n          WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n        }\n        function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n          var stream = controller._controlledWritableStream;\n          if (controller._started === false) {\n            return;\n          }\n          if (stream._inFlightWriteRequest !== undefined) {\n            return;\n          }\n          var state = stream._state;\n          if (state === 'erroring') {\n            WritableStreamFinishErroring(stream);\n            return;\n          }\n          if (controller._queue.length === 0) {\n            return;\n          }\n          var writeRecord = PeekQueueValue(controller);\n          if (writeRecord === 'close') {\n            WritableStreamDefaultControllerProcessClose(controller);\n          } else {\n            WritableStreamDefaultControllerProcessWrite(controller, writeRecord.chunk);\n          }\n        }\n        function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n          if (controller._controlledWritableStream._state === 'writable') {\n            WritableStreamDefaultControllerError(controller, error);\n          }\n        }\n        function WritableStreamDefaultControllerProcessClose(controller) {\n          var stream = controller._controlledWritableStream;\n          WritableStreamMarkCloseRequestInFlight(stream);\n          DequeueValue(controller);\n          var sinkClosePromise = controller._closeAlgorithm();\n          WritableStreamDefaultControllerClearAlgorithms(controller);\n          uponPromise(sinkClosePromise, function () {\n            WritableStreamFinishInFlightClose(stream);\n          }, function (reason) {\n            WritableStreamFinishInFlightCloseWithError(stream, reason);\n          });\n        }\n        function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n          var stream = controller._controlledWritableStream;\n          WritableStreamMarkFirstWriteRequestInFlight(stream);\n          var sinkWritePromise = controller._writeAlgorithm(chunk);\n          uponPromise(sinkWritePromise, function () {\n            WritableStreamFinishInFlightWrite(stream);\n            var state = stream._state;\n            DequeueValue(controller);\n            if (WritableStreamCloseQueuedOrInFlight(stream) === false && state === 'writable') {\n              var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n              WritableStreamUpdateBackpressure(stream, backpressure);\n            }\n            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n          }, function (reason) {\n            if (stream._state === 'writable') {\n              WritableStreamDefaultControllerClearAlgorithms(controller);\n            }\n            WritableStreamFinishInFlightWriteWithError(stream, reason);\n          });\n        }\n        function WritableStreamDefaultControllerGetBackpressure(controller) {\n          var desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n          return desiredSize <= 0;\n        }\n        function WritableStreamDefaultControllerError(controller, error) {\n          var stream = controller._controlledWritableStream;\n          WritableStreamDefaultControllerClearAlgorithms(controller);\n          WritableStreamStartErroring(stream, error);\n        }\n        function streamBrandCheckException(name) {\n          return new TypeError(\"WritableStream.prototype.\" + name + \" can only be used on a WritableStream\");\n        }\n        function defaultWriterBrandCheckException(name) {\n          return new TypeError(\"WritableStreamDefaultWriter.prototype.\" + name + \" can only be used on a WritableStreamDefaultWriter\");\n        }\n        function defaultWriterLockException(name) {\n          return new TypeError('Cannot ' + name + ' a stream using a released writer');\n        }\n        function defaultWriterClosedPromiseInitialize(writer) {\n          writer._closedPromise = newPromise(function (resolve, reject) {\n            writer._closedPromise_resolve = resolve;\n            writer._closedPromise_reject = reject;\n            writer._closedPromiseState = 'pending';\n          });\n        }\n        function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n          defaultWriterClosedPromiseInitialize(writer);\n          defaultWriterClosedPromiseReject(writer, reason);\n        }\n        function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n          defaultWriterClosedPromiseInitialize(writer);\n          defaultWriterClosedPromiseResolve(writer);\n        }\n        function defaultWriterClosedPromiseReject(writer, reason) {\n          setPromiseIsHandledToTrue(writer._closedPromise);\n          writer._closedPromise_reject(reason);\n          writer._closedPromise_resolve = undefined;\n          writer._closedPromise_reject = undefined;\n          writer._closedPromiseState = 'rejected';\n        }\n        function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n          defaultWriterClosedPromiseInitializeAsRejected(writer, reason);\n        }\n        function defaultWriterClosedPromiseResolve(writer) {\n          writer._closedPromise_resolve(undefined);\n          writer._closedPromise_resolve = undefined;\n          writer._closedPromise_reject = undefined;\n          writer._closedPromiseState = 'resolved';\n        }\n        function defaultWriterReadyPromiseInitialize(writer) {\n          writer._readyPromise = newPromise(function (resolve, reject) {\n            writer._readyPromise_resolve = resolve;\n            writer._readyPromise_reject = reject;\n          });\n          writer._readyPromiseState = 'pending';\n        }\n        function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n          defaultWriterReadyPromiseInitialize(writer);\n          defaultWriterReadyPromiseReject(writer, reason);\n        }\n        function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n          defaultWriterReadyPromiseInitialize(writer);\n          defaultWriterReadyPromiseResolve(writer);\n        }\n        function defaultWriterReadyPromiseReject(writer, reason) {\n          setPromiseIsHandledToTrue(writer._readyPromise);\n          writer._readyPromise_reject(reason);\n          writer._readyPromise_resolve = undefined;\n          writer._readyPromise_reject = undefined;\n          writer._readyPromiseState = 'rejected';\n        }\n        function defaultWriterReadyPromiseReset(writer) {\n          defaultWriterReadyPromiseInitialize(writer);\n        }\n        function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n          defaultWriterReadyPromiseInitializeAsRejected(writer, reason);\n        }\n        function defaultWriterReadyPromiseResolve(writer) {\n          writer._readyPromise_resolve(undefined);\n          writer._readyPromise_resolve = undefined;\n          writer._readyPromise_reject = undefined;\n          writer._readyPromiseState = 'fulfilled';\n        }\n        function isAbortSignal(value) {\n          if (typeof value !== 'object' || value === null) {\n            return false;\n          }\n          try {\n            return typeof value.aborted === 'boolean';\n          } catch (_a) {\n            return false;\n          }\n        }\n        var NativeDOMException = typeof DOMException !== 'undefined' ? DOMException : undefined;\n        function isDOMExceptionConstructor(ctor) {\n          if (!(typeof ctor === 'function' || typeof ctor === 'object')) {\n            return false;\n          }\n          try {\n            new ctor();\n            return true;\n          } catch (_a) {\n            return false;\n          }\n        }\n        function createDOMExceptionPolyfill() {\n          var ctor = function DOMException(message, name) {\n            this.message = message || '';\n            this.name = name || 'Error';\n            if (Error.captureStackTrace) {\n              Error.captureStackTrace(this, this.constructor);\n            }\n          };\n          ctor.prototype = Object.create(Error.prototype);\n          Object.defineProperty(ctor.prototype, 'constructor', {\n            value: ctor,\n            writable: true,\n            configurable: true\n          });\n          return ctor;\n        }\n        var DOMException$1 = isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();\n        function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {\n          var reader = AcquireReadableStreamDefaultReader(source);\n          var writer = AcquireWritableStreamDefaultWriter(dest);\n          source._disturbed = true;\n          var shuttingDown = false;\n          var currentWrite = promiseResolvedWith(undefined);\n          return newPromise(function (resolve, reject) {\n            var abortAlgorithm;\n            if (signal !== undefined) {\n              abortAlgorithm = function () {\n                var error = new DOMException$1('Aborted', 'AbortError');\n                var actions = [];\n                if (preventAbort === false) {\n                  actions.push(function () {\n                    if (dest._state === 'writable') {\n                      return WritableStreamAbort(dest, error);\n                    }\n                    return promiseResolvedWith(undefined);\n                  });\n                }\n                if (preventCancel === false) {\n                  actions.push(function () {\n                    if (source._state === 'readable') {\n                      return ReadableStreamCancel(source, error);\n                    }\n                    return promiseResolvedWith(undefined);\n                  });\n                }\n                shutdownWithAction(function () {\n                  return Promise.all(actions.map(function (action) {\n                    return action();\n                  }));\n                }, true, error);\n              };\n              if (signal.aborted === true) {\n                abortAlgorithm();\n                return;\n              }\n              signal.addEventListener('abort', abortAlgorithm);\n            }\n            function pipeLoop() {\n              return newPromise(function (resolveLoop, rejectLoop) {\n                function next(done) {\n                  if (done) {\n                    resolveLoop();\n                  } else {\n                    PerformPromiseThen(pipeStep(), next, rejectLoop);\n                  }\n                }\n                next(false);\n              });\n            }\n            function pipeStep() {\n              if (shuttingDown === true) {\n                return promiseResolvedWith(true);\n              }\n              return PerformPromiseThen(writer._readyPromise, function () {\n                return PerformPromiseThen(ReadableStreamDefaultReaderRead(reader), function (result) {\n                  if (result.done === true) {\n                    return true;\n                  }\n                  currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, result.value), undefined, noop);\n                  return false;\n                });\n              });\n            }\n            isOrBecomesErrored(source, reader._closedPromise, function (storedError) {\n              if (preventAbort === false) {\n                shutdownWithAction(function () {\n                  return WritableStreamAbort(dest, storedError);\n                }, true, storedError);\n              } else {\n                shutdown(true, storedError);\n              }\n            });\n            isOrBecomesErrored(dest, writer._closedPromise, function (storedError) {\n              if (preventCancel === false) {\n                shutdownWithAction(function () {\n                  return ReadableStreamCancel(source, storedError);\n                }, true, storedError);\n              } else {\n                shutdown(true, storedError);\n              }\n            });\n            isOrBecomesClosed(source, reader._closedPromise, function () {\n              if (preventClose === false) {\n                shutdownWithAction(function () {\n                  return WritableStreamDefaultWriterCloseWithErrorPropagation(writer);\n                });\n              } else {\n                shutdown();\n              }\n            });\n            if (WritableStreamCloseQueuedOrInFlight(dest) === true || dest._state === 'closed') {\n              var destClosed_1 = new TypeError('the destination writable stream closed before all data could be piped to it');\n              if (preventCancel === false) {\n                shutdownWithAction(function () {\n                  return ReadableStreamCancel(source, destClosed_1);\n                }, true, destClosed_1);\n              } else {\n                shutdown(true, destClosed_1);\n              }\n            }\n            setPromiseIsHandledToTrue(pipeLoop());\n            function waitForWritesToFinish() {\n              var oldCurrentWrite = currentWrite;\n              return PerformPromiseThen(currentWrite, function () {\n                return oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined;\n              });\n            }\n            function isOrBecomesErrored(stream, promise, action) {\n              if (stream._state === 'errored') {\n                action(stream._storedError);\n              } else {\n                uponRejection(promise, action);\n              }\n            }\n            function isOrBecomesClosed(stream, promise, action) {\n              if (stream._state === 'closed') {\n                action();\n              } else {\n                uponFulfillment(promise, action);\n              }\n            }\n            function shutdownWithAction(action, originalIsError, originalError) {\n              if (shuttingDown === true) {\n                return;\n              }\n              shuttingDown = true;\n              if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n                uponFulfillment(waitForWritesToFinish(), doTheRest);\n              } else {\n                doTheRest();\n              }\n              function doTheRest() {\n                uponPromise(action(), function () {\n                  return finalize(originalIsError, originalError);\n                }, function (newError) {\n                  return finalize(true, newError);\n                });\n              }\n            }\n            function shutdown(isError, error) {\n              if (shuttingDown === true) {\n                return;\n              }\n              shuttingDown = true;\n              if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n                uponFulfillment(waitForWritesToFinish(), function () {\n                  return finalize(isError, error);\n                });\n              } else {\n                finalize(isError, error);\n              }\n            }\n            function finalize(isError, error) {\n              WritableStreamDefaultWriterRelease(writer);\n              ReadableStreamReaderGenericRelease(reader);\n              if (signal !== undefined) {\n                signal.removeEventListener('abort', abortAlgorithm);\n              }\n              if (isError) {\n                reject(error);\n              } else {\n                resolve(undefined);\n              }\n            }\n          });\n        }\n        var ReadableStreamDefaultController = function () {\n          function ReadableStreamDefaultController() {\n            throw new TypeError();\n          }\n          Object.defineProperty(ReadableStreamDefaultController.prototype, \"desiredSize\", {\n            get: function () {\n              if (IsReadableStreamDefaultController(this) === false) {\n                throw defaultControllerBrandCheckException('desiredSize');\n              }\n              return ReadableStreamDefaultControllerGetDesiredSize(this);\n            },\n            enumerable: true,\n            configurable: true\n          });\n          ReadableStreamDefaultController.prototype.close = function () {\n            if (IsReadableStreamDefaultController(this) === false) {\n              throw defaultControllerBrandCheckException('close');\n            }\n            if (ReadableStreamDefaultControllerCanCloseOrEnqueue(this) === false) {\n              throw new TypeError('The stream is not in a state that permits close');\n            }\n            ReadableStreamDefaultControllerClose(this);\n          };\n          ReadableStreamDefaultController.prototype.enqueue = function (chunk) {\n            if (IsReadableStreamDefaultController(this) === false) {\n              throw defaultControllerBrandCheckException('enqueue');\n            }\n            if (ReadableStreamDefaultControllerCanCloseOrEnqueue(this) === false) {\n              throw new TypeError('The stream is not in a state that permits enqueue');\n            }\n            return ReadableStreamDefaultControllerEnqueue(this, chunk);\n          };\n          ReadableStreamDefaultController.prototype.error = function (e) {\n            if (IsReadableStreamDefaultController(this) === false) {\n              throw defaultControllerBrandCheckException('error');\n            }\n            ReadableStreamDefaultControllerError(this, e);\n          };\n          ReadableStreamDefaultController.prototype[CancelSteps] = function (reason) {\n            ResetQueue(this);\n            var result = this._cancelAlgorithm(reason);\n            ReadableStreamDefaultControllerClearAlgorithms(this);\n            return result;\n          };\n          ReadableStreamDefaultController.prototype[PullSteps] = function () {\n            var stream = this._controlledReadableStream;\n            if (this._queue.length > 0) {\n              var chunk = DequeueValue(this);\n              if (this._closeRequested === true && this._queue.length === 0) {\n                ReadableStreamDefaultControllerClearAlgorithms(this);\n                ReadableStreamClose(stream);\n              } else {\n                ReadableStreamDefaultControllerCallPullIfNeeded(this);\n              }\n              return promiseResolvedWith(ReadableStreamCreateReadResult(chunk, false, stream._reader._forAuthorCode));\n            }\n            var pendingPromise = ReadableStreamAddReadRequest(stream);\n            ReadableStreamDefaultControllerCallPullIfNeeded(this);\n            return pendingPromise;\n          };\n          return ReadableStreamDefaultController;\n        }();\n        function IsReadableStreamDefaultController(x) {\n          if (!typeIsObject(x)) {\n            return false;\n          }\n          if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\n            return false;\n          }\n          return true;\n        }\n        function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n          var shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n          if (shouldPull === false) {\n            return;\n          }\n          if (controller._pulling === true) {\n            controller._pullAgain = true;\n            return;\n          }\n          controller._pulling = true;\n          var pullPromise = controller._pullAlgorithm();\n          uponPromise(pullPromise, function () {\n            controller._pulling = false;\n            if (controller._pullAgain === true) {\n              controller._pullAgain = false;\n              ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n            }\n          }, function (e) {\n            ReadableStreamDefaultControllerError(controller, e);\n          });\n        }\n        function ReadableStreamDefaultControllerShouldCallPull(controller) {\n          var stream = controller._controlledReadableStream;\n          if (ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) === false) {\n            return false;\n          }\n          if (controller._started === false) {\n            return false;\n          }\n          if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n            return true;\n          }\n          var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n          if (desiredSize > 0) {\n            return true;\n          }\n          return false;\n        }\n        function ReadableStreamDefaultControllerClearAlgorithms(controller) {\n          controller._pullAlgorithm = undefined;\n          controller._cancelAlgorithm = undefined;\n          controller._strategySizeAlgorithm = undefined;\n        }\n        function ReadableStreamDefaultControllerClose(controller) {\n          var stream = controller._controlledReadableStream;\n          controller._closeRequested = true;\n          if (controller._queue.length === 0) {\n            ReadableStreamDefaultControllerClearAlgorithms(controller);\n            ReadableStreamClose(stream);\n          }\n        }\n        function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n          var stream = controller._controlledReadableStream;\n          if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n            ReadableStreamFulfillReadRequest(stream, chunk, false);\n          } else {\n            var chunkSize = void 0;\n            try {\n              chunkSize = controller._strategySizeAlgorithm(chunk);\n            } catch (chunkSizeE) {\n              ReadableStreamDefaultControllerError(controller, chunkSizeE);\n              throw chunkSizeE;\n            }\n            try {\n              EnqueueValueWithSize(controller, chunk, chunkSize);\n            } catch (enqueueE) {\n              ReadableStreamDefaultControllerError(controller, enqueueE);\n              throw enqueueE;\n            }\n          }\n          ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n        }\n        function ReadableStreamDefaultControllerError(controller, e) {\n          var stream = controller._controlledReadableStream;\n          if (stream._state !== 'readable') {\n            return;\n          }\n          ResetQueue(controller);\n          ReadableStreamDefaultControllerClearAlgorithms(controller);\n          ReadableStreamError(stream, e);\n        }\n        function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n          var stream = controller._controlledReadableStream;\n          var state = stream._state;\n          if (state === 'errored') {\n            return null;\n          }\n          if (state === 'closed') {\n            return 0;\n          }\n          return controller._strategyHWM - controller._queueTotalSize;\n        }\n        function ReadableStreamDefaultControllerHasBackpressure(controller) {\n          if (ReadableStreamDefaultControllerShouldCallPull(controller) === true) {\n            return false;\n          }\n          return true;\n        }\n        function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {\n          var state = controller._controlledReadableStream._state;\n          if (controller._closeRequested === false && state === 'readable') {\n            return true;\n          }\n          return false;\n        }\n        function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {\n          controller._controlledReadableStream = stream;\n          controller._queue = undefined;\n          controller._queueTotalSize = undefined;\n          ResetQueue(controller);\n          controller._started = false;\n          controller._closeRequested = false;\n          controller._pullAgain = false;\n          controller._pulling = false;\n          controller._strategySizeAlgorithm = sizeAlgorithm;\n          controller._strategyHWM = highWaterMark;\n          controller._pullAlgorithm = pullAlgorithm;\n          controller._cancelAlgorithm = cancelAlgorithm;\n          stream._readableStreamController = controller;\n          var startResult = startAlgorithm();\n          uponPromise(promiseResolvedWith(startResult), function () {\n            controller._started = true;\n            ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n          }, function (r) {\n            ReadableStreamDefaultControllerError(controller, r);\n          });\n        }\n        function SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {\n          var controller = Object.create(ReadableStreamDefaultController.prototype);\n          function startAlgorithm() {\n            return InvokeOrNoop(underlyingSource, 'start', [controller]);\n          }\n          var pullAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingSource, 'pull', 0, [controller]);\n          var cancelAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingSource, 'cancel', 1, []);\n          SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n        }\n        function defaultControllerBrandCheckException(name) {\n          return new TypeError(\"ReadableStreamDefaultController.prototype.\" + name + \" can only be used on a ReadableStreamDefaultController\");\n        }\n        function ReadableStreamTee(stream, cloneForBranch2) {\n          var reader = AcquireReadableStreamDefaultReader(stream);\n          var reading = false;\n          var canceled1 = false;\n          var canceled2 = false;\n          var reason1;\n          var reason2;\n          var branch1;\n          var branch2;\n          var resolveCancelPromise;\n          var cancelPromise = newPromise(function (resolve) {\n            resolveCancelPromise = resolve;\n          });\n          function pullAlgorithm() {\n            if (reading === true) {\n              return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            var readPromise = transformPromiseWith(ReadableStreamDefaultReaderRead(reader), function (result) {\n              reading = false;\n              var done = result.done;\n              if (done === true) {\n                if (canceled1 === false) {\n                  ReadableStreamDefaultControllerClose(branch1._readableStreamController);\n                }\n                if (canceled2 === false) {\n                  ReadableStreamDefaultControllerClose(branch2._readableStreamController);\n                }\n                return;\n              }\n              var value = result.value;\n              var value1 = value;\n              var value2 = value;\n              if (canceled1 === false) {\n                ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, value1);\n              }\n              if (canceled2 === false) {\n                ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, value2);\n              }\n            });\n            setPromiseIsHandledToTrue(readPromise);\n            return promiseResolvedWith(undefined);\n          }\n          function cancel1Algorithm(reason) {\n            canceled1 = true;\n            reason1 = reason;\n            if (canceled2 === true) {\n              var compositeReason = createArrayFromList([reason1, reason2]);\n              var cancelResult = ReadableStreamCancel(stream, compositeReason);\n              resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n          }\n          function cancel2Algorithm(reason) {\n            canceled2 = true;\n            reason2 = reason;\n            if (canceled1 === true) {\n              var compositeReason = createArrayFromList([reason1, reason2]);\n              var cancelResult = ReadableStreamCancel(stream, compositeReason);\n              resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n          }\n          function startAlgorithm() {}\n          branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n          branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n          uponRejection(reader._closedPromise, function (r) {\n            ReadableStreamDefaultControllerError(branch1._readableStreamController, r);\n            ReadableStreamDefaultControllerError(branch2._readableStreamController, r);\n          });\n          return [branch1, branch2];\n        }\n        var NumberIsInteger = Number.isInteger || function (value) {\n          return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n        };\n        var ReadableStreamBYOBRequest = function () {\n          function ReadableStreamBYOBRequest() {\n            throw new TypeError('ReadableStreamBYOBRequest cannot be used directly');\n          }\n          Object.defineProperty(ReadableStreamBYOBRequest.prototype, \"view\", {\n            get: function () {\n              if (IsReadableStreamBYOBRequest(this) === false) {\n                throw byobRequestBrandCheckException('view');\n              }\n              return this._view;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          ReadableStreamBYOBRequest.prototype.respond = function (bytesWritten) {\n            if (IsReadableStreamBYOBRequest(this) === false) {\n              throw byobRequestBrandCheckException('respond');\n            }\n            if (this._associatedReadableByteStreamController === undefined) {\n              throw new TypeError('This BYOB request has been invalidated');\n            }\n            if (IsDetachedBuffer(this._view.buffer) === true) ;\n            ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n          };\n          ReadableStreamBYOBRequest.prototype.respondWithNewView = function (view) {\n            if (IsReadableStreamBYOBRequest(this) === false) {\n              throw byobRequestBrandCheckException('respond');\n            }\n            if (this._associatedReadableByteStreamController === undefined) {\n              throw new TypeError('This BYOB request has been invalidated');\n            }\n            if (!ArrayBuffer.isView(view)) {\n              throw new TypeError('You can only respond with array buffer views');\n            }\n            if (IsDetachedBuffer(view.buffer) === true) ;\n            ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n          };\n          return ReadableStreamBYOBRequest;\n        }();\n        var ReadableByteStreamController = function () {\n          function ReadableByteStreamController() {\n            throw new TypeError('ReadableByteStreamController constructor cannot be used directly');\n          }\n          Object.defineProperty(ReadableByteStreamController.prototype, \"byobRequest\", {\n            get: function () {\n              if (IsReadableByteStreamController(this) === false) {\n                throw byteStreamControllerBrandCheckException('byobRequest');\n              }\n              if (this._byobRequest === undefined && this._pendingPullIntos.length > 0) {\n                var firstDescriptor = this._pendingPullIntos.peek();\n                var view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n                var byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n                SetUpReadableStreamBYOBRequest(byobRequest, this, view);\n                this._byobRequest = byobRequest;\n              }\n              return this._byobRequest;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(ReadableByteStreamController.prototype, \"desiredSize\", {\n            get: function () {\n              if (IsReadableByteStreamController(this) === false) {\n                throw byteStreamControllerBrandCheckException('desiredSize');\n              }\n              return ReadableByteStreamControllerGetDesiredSize(this);\n            },\n            enumerable: true,\n            configurable: true\n          });\n          ReadableByteStreamController.prototype.close = function () {\n            if (IsReadableByteStreamController(this) === false) {\n              throw byteStreamControllerBrandCheckException('close');\n            }\n            if (this._closeRequested === true) {\n              throw new TypeError('The stream has already been closed; do not close it again!');\n            }\n            var state = this._controlledReadableByteStream._state;\n            if (state !== 'readable') {\n              throw new TypeError(\"The stream (in \" + state + \" state) is not in the readable state and cannot be closed\");\n            }\n            ReadableByteStreamControllerClose(this);\n          };\n          ReadableByteStreamController.prototype.enqueue = function (chunk) {\n            if (IsReadableByteStreamController(this) === false) {\n              throw byteStreamControllerBrandCheckException('enqueue');\n            }\n            if (this._closeRequested === true) {\n              throw new TypeError('stream is closed or draining');\n            }\n            var state = this._controlledReadableByteStream._state;\n            if (state !== 'readable') {\n              throw new TypeError(\"The stream (in \" + state + \" state) is not in the readable state and cannot be enqueued to\");\n            }\n            if (!ArrayBuffer.isView(chunk)) {\n              throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');\n            }\n            if (IsDetachedBuffer(chunk.buffer) === true) ;\n            ReadableByteStreamControllerEnqueue(this, chunk);\n          };\n          ReadableByteStreamController.prototype.error = function (e) {\n            if (IsReadableByteStreamController(this) === false) {\n              throw byteStreamControllerBrandCheckException('error');\n            }\n            ReadableByteStreamControllerError(this, e);\n          };\n          ReadableByteStreamController.prototype[CancelSteps] = function (reason) {\n            if (this._pendingPullIntos.length > 0) {\n              var firstDescriptor = this._pendingPullIntos.peek();\n              firstDescriptor.bytesFilled = 0;\n            }\n            ResetQueue(this);\n            var result = this._cancelAlgorithm(reason);\n            ReadableByteStreamControllerClearAlgorithms(this);\n            return result;\n          };\n          ReadableByteStreamController.prototype[PullSteps] = function () {\n            var stream = this._controlledReadableByteStream;\n            if (this._queueTotalSize > 0) {\n              var entry = this._queue.shift();\n              this._queueTotalSize -= entry.byteLength;\n              ReadableByteStreamControllerHandleQueueDrain(this);\n              var view = void 0;\n              try {\n                view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n              } catch (viewE) {\n                return promiseRejectedWith(viewE);\n              }\n              return promiseResolvedWith(ReadableStreamCreateReadResult(view, false, stream._reader._forAuthorCode));\n            }\n            var autoAllocateChunkSize = this._autoAllocateChunkSize;\n            if (autoAllocateChunkSize !== undefined) {\n              var buffer = void 0;\n              try {\n                buffer = new ArrayBuffer(autoAllocateChunkSize);\n              } catch (bufferE) {\n                return promiseRejectedWith(bufferE);\n              }\n              var pullIntoDescriptor = {\n                buffer: buffer,\n                byteOffset: 0,\n                byteLength: autoAllocateChunkSize,\n                bytesFilled: 0,\n                elementSize: 1,\n                ctor: Uint8Array,\n                readerType: 'default'\n              };\n              this._pendingPullIntos.push(pullIntoDescriptor);\n            }\n            var promise = ReadableStreamAddReadRequest(stream);\n            ReadableByteStreamControllerCallPullIfNeeded(this);\n            return promise;\n          };\n          return ReadableByteStreamController;\n        }();\n        function IsReadableByteStreamController(x) {\n          if (!typeIsObject(x)) {\n            return false;\n          }\n          if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\n            return false;\n          }\n          return true;\n        }\n        function IsReadableStreamBYOBRequest(x) {\n          if (!typeIsObject(x)) {\n            return false;\n          }\n          if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n            return false;\n          }\n          return true;\n        }\n        function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n          var shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n          if (shouldPull === false) {\n            return;\n          }\n          if (controller._pulling === true) {\n            controller._pullAgain = true;\n            return;\n          }\n          controller._pulling = true;\n          var pullPromise = controller._pullAlgorithm();\n          uponPromise(pullPromise, function () {\n            controller._pulling = false;\n            if (controller._pullAgain === true) {\n              controller._pullAgain = false;\n              ReadableByteStreamControllerCallPullIfNeeded(controller);\n            }\n          }, function (e) {\n            ReadableByteStreamControllerError(controller, e);\n          });\n        }\n        function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n          ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n          controller._pendingPullIntos = new SimpleQueue();\n        }\n        function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n          var done = false;\n          if (stream._state === 'closed') {\n            done = true;\n          }\n          var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n          if (pullIntoDescriptor.readerType === 'default') {\n            ReadableStreamFulfillReadRequest(stream, filledView, done);\n          } else {\n            ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n          }\n        }\n        function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n          var bytesFilled = pullIntoDescriptor.bytesFilled;\n          var elementSize = pullIntoDescriptor.elementSize;\n          return new pullIntoDescriptor.ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n        }\n        function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n          controller._queue.push({\n            buffer: buffer,\n            byteOffset: byteOffset,\n            byteLength: byteLength\n          });\n          controller._queueTotalSize += byteLength;\n        }\n        function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n          var elementSize = pullIntoDescriptor.elementSize;\n          var currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n          var maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n          var maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n          var maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n          var totalBytesToCopyRemaining = maxBytesToCopy;\n          var ready = false;\n          if (maxAlignedBytes > currentAlignedBytes) {\n            totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n            ready = true;\n          }\n          var queue = controller._queue;\n          while (totalBytesToCopyRemaining > 0) {\n            var headOfQueue = queue.peek();\n            var bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n            var destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n            ArrayBufferCopy(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n            if (headOfQueue.byteLength === bytesToCopy) {\n              queue.shift();\n            } else {\n              headOfQueue.byteOffset += bytesToCopy;\n              headOfQueue.byteLength -= bytesToCopy;\n            }\n            controller._queueTotalSize -= bytesToCopy;\n            ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n            totalBytesToCopyRemaining -= bytesToCopy;\n          }\n          return ready;\n        }\n        function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n          ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n          pullIntoDescriptor.bytesFilled += size;\n        }\n        function ReadableByteStreamControllerHandleQueueDrain(controller) {\n          if (controller._queueTotalSize === 0 && controller._closeRequested === true) {\n            ReadableByteStreamControllerClearAlgorithms(controller);\n            ReadableStreamClose(controller._controlledReadableByteStream);\n          } else {\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n          }\n        }\n        function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n          if (controller._byobRequest === undefined) {\n            return;\n          }\n          controller._byobRequest._associatedReadableByteStreamController = undefined;\n          controller._byobRequest._view = undefined;\n          controller._byobRequest = undefined;\n        }\n        function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n          while (controller._pendingPullIntos.length > 0) {\n            if (controller._queueTotalSize === 0) {\n              return;\n            }\n            var pullIntoDescriptor = controller._pendingPullIntos.peek();\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n              ReadableByteStreamControllerShiftPendingPullInto(controller);\n              ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n            }\n          }\n        }\n        function ReadableByteStreamControllerPullInto(controller, view) {\n          var stream = controller._controlledReadableByteStream;\n          var elementSize = 1;\n          if (view.constructor !== DataView) {\n            elementSize = view.constructor.BYTES_PER_ELEMENT;\n          }\n          var ctor = view.constructor;\n          var buffer = TransferArrayBuffer(view.buffer);\n          var pullIntoDescriptor = {\n            buffer: buffer,\n            byteOffset: view.byteOffset,\n            byteLength: view.byteLength,\n            bytesFilled: 0,\n            elementSize: elementSize,\n            ctor: ctor,\n            readerType: 'byob'\n          };\n          if (controller._pendingPullIntos.length > 0) {\n            controller._pendingPullIntos.push(pullIntoDescriptor);\n            return ReadableStreamAddReadIntoRequest(stream);\n          }\n          if (stream._state === 'closed') {\n            var emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n            return promiseResolvedWith(ReadableStreamCreateReadResult(emptyView, true, stream._reader._forAuthorCode));\n          }\n          if (controller._queueTotalSize > 0) {\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n              var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n              ReadableByteStreamControllerHandleQueueDrain(controller);\n              return promiseResolvedWith(ReadableStreamCreateReadResult(filledView, false, stream._reader._forAuthorCode));\n            }\n            if (controller._closeRequested === true) {\n              var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n              ReadableByteStreamControllerError(controller, e);\n              return promiseRejectedWith(e);\n            }\n          }\n          controller._pendingPullIntos.push(pullIntoDescriptor);\n          var promise = ReadableStreamAddReadIntoRequest(stream);\n          ReadableByteStreamControllerCallPullIfNeeded(controller);\n          return promise;\n        }\n        function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n          firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n          var stream = controller._controlledReadableByteStream;\n          if (ReadableStreamHasBYOBReader(stream) === true) {\n            while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n              var pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n              ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n            }\n          }\n        }\n        function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n          if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {\n            throw new RangeError('bytesWritten out of range');\n          }\n          ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n          if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n            return;\n          }\n          ReadableByteStreamControllerShiftPendingPullInto(controller);\n          var remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n          if (remainderSize > 0) {\n            var end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n            var remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n          }\n          pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n          pullIntoDescriptor.bytesFilled -= remainderSize;\n          ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n          ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n        }\n        function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n          var firstDescriptor = controller._pendingPullIntos.peek();\n          var stream = controller._controlledReadableByteStream;\n          if (stream._state === 'closed') {\n            if (bytesWritten !== 0) {\n              throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n            }\n            ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n          } else {\n            ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n          }\n          ReadableByteStreamControllerCallPullIfNeeded(controller);\n        }\n        function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n          var descriptor = controller._pendingPullIntos.shift();\n          ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n          return descriptor;\n        }\n        function ReadableByteStreamControllerShouldCallPull(controller) {\n          var stream = controller._controlledReadableByteStream;\n          if (stream._state !== 'readable') {\n            return false;\n          }\n          if (controller._closeRequested === true) {\n            return false;\n          }\n          if (controller._started === false) {\n            return false;\n          }\n          if (ReadableStreamHasDefaultReader(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n            return true;\n          }\n          if (ReadableStreamHasBYOBReader(stream) === true && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n            return true;\n          }\n          var desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n          if (desiredSize > 0) {\n            return true;\n          }\n          return false;\n        }\n        function ReadableByteStreamControllerClearAlgorithms(controller) {\n          controller._pullAlgorithm = undefined;\n          controller._cancelAlgorithm = undefined;\n        }\n        function ReadableByteStreamControllerClose(controller) {\n          var stream = controller._controlledReadableByteStream;\n          if (controller._queueTotalSize > 0) {\n            controller._closeRequested = true;\n            return;\n          }\n          if (controller._pendingPullIntos.length > 0) {\n            var firstPendingPullInto = controller._pendingPullIntos.peek();\n            if (firstPendingPullInto.bytesFilled > 0) {\n              var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n              ReadableByteStreamControllerError(controller, e);\n              throw e;\n            }\n          }\n          ReadableByteStreamControllerClearAlgorithms(controller);\n          ReadableStreamClose(stream);\n        }\n        function ReadableByteStreamControllerEnqueue(controller, chunk) {\n          var stream = controller._controlledReadableByteStream;\n          var buffer = chunk.buffer;\n          var byteOffset = chunk.byteOffset;\n          var byteLength = chunk.byteLength;\n          var transferredBuffer = TransferArrayBuffer(buffer);\n          if (ReadableStreamHasDefaultReader(stream) === true) {\n            if (ReadableStreamGetNumReadRequests(stream) === 0) {\n              ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n            } else {\n              var transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n              ReadableStreamFulfillReadRequest(stream, transferredView, false);\n            }\n          } else if (ReadableStreamHasBYOBReader(stream) === true) {\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n            ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n          } else {\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n          }\n          ReadableByteStreamControllerCallPullIfNeeded(controller);\n        }\n        function ReadableByteStreamControllerError(controller, e) {\n          var stream = controller._controlledReadableByteStream;\n          if (stream._state !== 'readable') {\n            return;\n          }\n          ReadableByteStreamControllerClearPendingPullIntos(controller);\n          ResetQueue(controller);\n          ReadableByteStreamControllerClearAlgorithms(controller);\n          ReadableStreamError(stream, e);\n        }\n        function ReadableByteStreamControllerGetDesiredSize(controller) {\n          var stream = controller._controlledReadableByteStream;\n          var state = stream._state;\n          if (state === 'errored') {\n            return null;\n          }\n          if (state === 'closed') {\n            return 0;\n          }\n          return controller._strategyHWM - controller._queueTotalSize;\n        }\n        function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n          bytesWritten = Number(bytesWritten);\n          if (IsFiniteNonNegativeNumber(bytesWritten) === false) {\n            throw new RangeError('bytesWritten must be a finite');\n          }\n          ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n        }\n        function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n          var firstDescriptor = controller._pendingPullIntos.peek();\n          if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n            throw new RangeError('The region specified by view does not match byobRequest');\n          }\n          if (firstDescriptor.byteLength !== view.byteLength) {\n            throw new RangeError('The buffer of view has different capacity than byobRequest');\n          }\n          firstDescriptor.buffer = view.buffer;\n          ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\n        }\n        function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {\n          controller._controlledReadableByteStream = stream;\n          controller._pullAgain = false;\n          controller._pulling = false;\n          controller._byobRequest = undefined;\n          controller._queue = controller._queueTotalSize = undefined;\n          ResetQueue(controller);\n          controller._closeRequested = false;\n          controller._started = false;\n          controller._strategyHWM = ValidateAndNormalizeHighWaterMark(highWaterMark);\n          controller._pullAlgorithm = pullAlgorithm;\n          controller._cancelAlgorithm = cancelAlgorithm;\n          controller._autoAllocateChunkSize = autoAllocateChunkSize;\n          controller._pendingPullIntos = new SimpleQueue();\n          stream._readableStreamController = controller;\n          var startResult = startAlgorithm();\n          uponPromise(promiseResolvedWith(startResult), function () {\n            controller._started = true;\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n          }, function (r) {\n            ReadableByteStreamControllerError(controller, r);\n          });\n        }\n        function SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {\n          var controller = Object.create(ReadableByteStreamController.prototype);\n          function startAlgorithm() {\n            return InvokeOrNoop(underlyingByteSource, 'start', [controller]);\n          }\n          var pullAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingByteSource, 'pull', 0, [controller]);\n          var cancelAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingByteSource, 'cancel', 1, []);\n          var autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n          if (autoAllocateChunkSize !== undefined) {\n            autoAllocateChunkSize = Number(autoAllocateChunkSize);\n            if (NumberIsInteger(autoAllocateChunkSize) === false || autoAllocateChunkSize <= 0) {\n              throw new RangeError('autoAllocateChunkSize must be a positive integer');\n            }\n          }\n          SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);\n        }\n        function SetUpReadableStreamBYOBRequest(request, controller, view) {\n          request._associatedReadableByteStreamController = controller;\n          request._view = view;\n        }\n        function byobRequestBrandCheckException(name) {\n          return new TypeError(\"ReadableStreamBYOBRequest.prototype.\" + name + \" can only be used on a ReadableStreamBYOBRequest\");\n        }\n        function byteStreamControllerBrandCheckException(name) {\n          return new TypeError(\"ReadableByteStreamController.prototype.\" + name + \" can only be used on a ReadableByteStreamController\");\n        }\n        function AcquireReadableStreamBYOBReader(stream, forAuthorCode) {\n          if (forAuthorCode === void 0) {\n            forAuthorCode = false;\n          }\n          var reader = new ReadableStreamBYOBReader(stream);\n          reader._forAuthorCode = forAuthorCode;\n          return reader;\n        }\n        function ReadableStreamAddReadIntoRequest(stream) {\n          var promise = newPromise(function (resolve, reject) {\n            var readIntoRequest = {\n              _resolve: resolve,\n              _reject: reject\n            };\n            stream._reader._readIntoRequests.push(readIntoRequest);\n          });\n          return promise;\n        }\n        function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n          var reader = stream._reader;\n          var readIntoRequest = reader._readIntoRequests.shift();\n          readIntoRequest._resolve(ReadableStreamCreateReadResult(chunk, done, reader._forAuthorCode));\n        }\n        function ReadableStreamGetNumReadIntoRequests(stream) {\n          return stream._reader._readIntoRequests.length;\n        }\n        function ReadableStreamHasBYOBReader(stream) {\n          var reader = stream._reader;\n          if (reader === undefined) {\n            return false;\n          }\n          if (!IsReadableStreamBYOBReader(reader)) {\n            return false;\n          }\n          return true;\n        }\n        var ReadableStreamBYOBReader = function () {\n          function ReadableStreamBYOBReader(stream) {\n            if (!IsReadableStream(stream)) {\n              throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a ' + 'byte source');\n            }\n            if (IsReadableByteStreamController(stream._readableStreamController) === false) {\n              throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' + 'source');\n            }\n            if (IsReadableStreamLocked(stream)) {\n              throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n            }\n            ReadableStreamReaderGenericInitialize(this, stream);\n            this._readIntoRequests = new SimpleQueue();\n          }\n          Object.defineProperty(ReadableStreamBYOBReader.prototype, \"closed\", {\n            get: function () {\n              if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('closed'));\n              }\n              return this._closedPromise;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          ReadableStreamBYOBReader.prototype.cancel = function (reason) {\n            if (!IsReadableStreamBYOBReader(this)) {\n              return promiseRejectedWith(byobReaderBrandCheckException('cancel'));\n            }\n            if (this._ownerReadableStream === undefined) {\n              return promiseRejectedWith(readerLockException('cancel'));\n            }\n            return ReadableStreamReaderGenericCancel(this, reason);\n          };\n          ReadableStreamBYOBReader.prototype.read = function (view) {\n            if (!IsReadableStreamBYOBReader(this)) {\n              return promiseRejectedWith(byobReaderBrandCheckException('read'));\n            }\n            if (this._ownerReadableStream === undefined) {\n              return promiseRejectedWith(readerLockException('read from'));\n            }\n            if (!ArrayBuffer.isView(view)) {\n              return promiseRejectedWith(new TypeError('view must be an array buffer view'));\n            }\n            if (IsDetachedBuffer(view.buffer) === true) ;\n            if (view.byteLength === 0) {\n              return promiseRejectedWith(new TypeError('view must have non-zero byteLength'));\n            }\n            return ReadableStreamBYOBReaderRead(this, view);\n          };\n          ReadableStreamBYOBReader.prototype.releaseLock = function () {\n            if (!IsReadableStreamBYOBReader(this)) {\n              throw byobReaderBrandCheckException('releaseLock');\n            }\n            if (this._ownerReadableStream === undefined) {\n              return;\n            }\n            if (this._readIntoRequests.length > 0) {\n              throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n            }\n            ReadableStreamReaderGenericRelease(this);\n          };\n          return ReadableStreamBYOBReader;\n        }();\n        function IsReadableStreamBYOBReader(x) {\n          if (!typeIsObject(x)) {\n            return false;\n          }\n          if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n            return false;\n          }\n          return true;\n        }\n        function ReadableStreamBYOBReaderRead(reader, view) {\n          var stream = reader._ownerReadableStream;\n          stream._disturbed = true;\n          if (stream._state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n          }\n          return ReadableByteStreamControllerPullInto(stream._readableStreamController, view);\n        }\n        function byobReaderBrandCheckException(name) {\n          return new TypeError(\"ReadableStreamBYOBReader.prototype.\" + name + \" can only be used on a ReadableStreamBYOBReader\");\n        }\n        var ReadableStream = function () {\n          function ReadableStream(underlyingSource, strategy) {\n            if (underlyingSource === void 0) {\n              underlyingSource = {};\n            }\n            if (strategy === void 0) {\n              strategy = {};\n            }\n            InitializeReadableStream(this);\n            var size = strategy.size;\n            var highWaterMark = strategy.highWaterMark;\n            var type = underlyingSource.type;\n            var typeString = String(type);\n            if (typeString === 'bytes') {\n              if (size !== undefined) {\n                throw new RangeError('The strategy for a byte stream cannot have a size function');\n              }\n              if (highWaterMark === undefined) {\n                highWaterMark = 0;\n              }\n              highWaterMark = ValidateAndNormalizeHighWaterMark(highWaterMark);\n              SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);\n            } else if (type === undefined) {\n              var sizeAlgorithm = MakeSizeAlgorithmFromSizeFunction(size);\n              if (highWaterMark === undefined) {\n                highWaterMark = 1;\n              }\n              highWaterMark = ValidateAndNormalizeHighWaterMark(highWaterMark);\n              SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);\n            } else {\n              throw new RangeError('Invalid type is specified');\n            }\n          }\n          Object.defineProperty(ReadableStream.prototype, \"locked\", {\n            get: function () {\n              if (IsReadableStream(this) === false) {\n                throw streamBrandCheckException$1('locked');\n              }\n              return IsReadableStreamLocked(this);\n            },\n            enumerable: true,\n            configurable: true\n          });\n          ReadableStream.prototype.cancel = function (reason) {\n            if (IsReadableStream(this) === false) {\n              return promiseRejectedWith(streamBrandCheckException$1('cancel'));\n            }\n            if (IsReadableStreamLocked(this) === true) {\n              return promiseRejectedWith(new TypeError('Cannot cancel a stream that already has a reader'));\n            }\n            return ReadableStreamCancel(this, reason);\n          };\n          ReadableStream.prototype.getReader = function (_a) {\n            var mode = (_a === void 0 ? {} : _a).mode;\n            if (IsReadableStream(this) === false) {\n              throw streamBrandCheckException$1('getReader');\n            }\n            if (mode === undefined) {\n              return AcquireReadableStreamDefaultReader(this, true);\n            }\n            mode = String(mode);\n            if (mode === 'byob') {\n              return AcquireReadableStreamBYOBReader(this, true);\n            }\n            throw new RangeError('Invalid mode is specified');\n          };\n          ReadableStream.prototype.pipeThrough = function (_a, _b) {\n            var writable = _a.writable,\n              readable = _a.readable;\n            var _c = _b === void 0 ? {} : _b,\n              preventClose = _c.preventClose,\n              preventAbort = _c.preventAbort,\n              preventCancel = _c.preventCancel,\n              signal = _c.signal;\n            if (IsReadableStream(this) === false) {\n              throw streamBrandCheckException$1('pipeThrough');\n            }\n            if (IsWritableStream(writable) === false) {\n              throw new TypeError('writable argument to pipeThrough must be a WritableStream');\n            }\n            if (IsReadableStream(readable) === false) {\n              throw new TypeError('readable argument to pipeThrough must be a ReadableStream');\n            }\n            preventClose = Boolean(preventClose);\n            preventAbort = Boolean(preventAbort);\n            preventCancel = Boolean(preventCancel);\n            if (signal !== undefined && !isAbortSignal(signal)) {\n              throw new TypeError('ReadableStream.prototype.pipeThrough\\'s signal option must be an AbortSignal');\n            }\n            if (IsReadableStreamLocked(this) === true) {\n              throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');\n            }\n            if (IsWritableStreamLocked(writable) === true) {\n              throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');\n            }\n            var promise = ReadableStreamPipeTo(this, writable, preventClose, preventAbort, preventCancel, signal);\n            setPromiseIsHandledToTrue(promise);\n            return readable;\n          };\n          ReadableStream.prototype.pipeTo = function (dest, _a) {\n            var _b = _a === void 0 ? {} : _a,\n              preventClose = _b.preventClose,\n              preventAbort = _b.preventAbort,\n              preventCancel = _b.preventCancel,\n              signal = _b.signal;\n            if (IsReadableStream(this) === false) {\n              return promiseRejectedWith(streamBrandCheckException$1('pipeTo'));\n            }\n            if (IsWritableStream(dest) === false) {\n              return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo\\'s first argument must be a WritableStream'));\n            }\n            preventClose = Boolean(preventClose);\n            preventAbort = Boolean(preventAbort);\n            preventCancel = Boolean(preventCancel);\n            if (signal !== undefined && !isAbortSignal(signal)) {\n              return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo\\'s signal option must be an AbortSignal'));\n            }\n            if (IsReadableStreamLocked(this) === true) {\n              return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n            }\n            if (IsWritableStreamLocked(dest) === true) {\n              return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n            }\n            return ReadableStreamPipeTo(this, dest, preventClose, preventAbort, preventCancel, signal);\n          };\n          ReadableStream.prototype.tee = function () {\n            if (IsReadableStream(this) === false) {\n              throw streamBrandCheckException$1('tee');\n            }\n            var branches = ReadableStreamTee(this);\n            return createArrayFromList(branches);\n          };\n          ReadableStream.prototype.getIterator = function (_a) {\n            var _b = (_a === void 0 ? {} : _a).preventCancel,\n              preventCancel = _b === void 0 ? false : _b;\n            if (IsReadableStream(this) === false) {\n              throw streamBrandCheckException$1('getIterator');\n            }\n            return AcquireReadableStreamAsyncIterator(this, preventCancel);\n          };\n          return ReadableStream;\n        }();\n        if (typeof SymbolPolyfill.asyncIterator === 'symbol') {\n          Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.asyncIterator, {\n            value: ReadableStream.prototype.getIterator,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          });\n        }\n        function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {\n          if (highWaterMark === void 0) {\n            highWaterMark = 1;\n          }\n          if (sizeAlgorithm === void 0) {\n            sizeAlgorithm = function () {\n              return 1;\n            };\n          }\n          var stream = Object.create(ReadableStream.prototype);\n          InitializeReadableStream(stream);\n          var controller = Object.create(ReadableStreamDefaultController.prototype);\n          SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n          return stream;\n        }\n        function InitializeReadableStream(stream) {\n          stream._state = 'readable';\n          stream._reader = undefined;\n          stream._storedError = undefined;\n          stream._disturbed = false;\n        }\n        function IsReadableStream(x) {\n          if (!typeIsObject(x)) {\n            return false;\n          }\n          if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n            return false;\n          }\n          return true;\n        }\n        function IsReadableStreamLocked(stream) {\n          if (stream._reader === undefined) {\n            return false;\n          }\n          return true;\n        }\n        function ReadableStreamCancel(stream, reason) {\n          stream._disturbed = true;\n          if (stream._state === 'closed') {\n            return promiseResolvedWith(undefined);\n          }\n          if (stream._state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n          }\n          ReadableStreamClose(stream);\n          var sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n          return transformPromiseWith(sourceCancelPromise, noop);\n        }\n        function ReadableStreamClose(stream) {\n          stream._state = 'closed';\n          var reader = stream._reader;\n          if (reader === undefined) {\n            return;\n          }\n          if (IsReadableStreamDefaultReader(reader)) {\n            reader._readRequests.forEach(function (readRequest) {\n              readRequest._resolve(ReadableStreamCreateReadResult(undefined, true, reader._forAuthorCode));\n            });\n            reader._readRequests = new SimpleQueue();\n          }\n          defaultReaderClosedPromiseResolve(reader);\n        }\n        function ReadableStreamError(stream, e) {\n          stream._state = 'errored';\n          stream._storedError = e;\n          var reader = stream._reader;\n          if (reader === undefined) {\n            return;\n          }\n          if (IsReadableStreamDefaultReader(reader)) {\n            reader._readRequests.forEach(function (readRequest) {\n              readRequest._reject(e);\n            });\n            reader._readRequests = new SimpleQueue();\n          } else {\n            reader._readIntoRequests.forEach(function (readIntoRequest) {\n              readIntoRequest._reject(e);\n            });\n            reader._readIntoRequests = new SimpleQueue();\n          }\n          defaultReaderClosedPromiseReject(reader, e);\n        }\n        function streamBrandCheckException$1(name) {\n          return new TypeError(\"ReadableStream.prototype.\" + name + \" can only be used on a ReadableStream\");\n        }\n        var ByteLengthQueuingStrategy = function () {\n          function ByteLengthQueuingStrategy(_a) {\n            var highWaterMark = _a.highWaterMark;\n            this.highWaterMark = highWaterMark;\n          }\n          ByteLengthQueuingStrategy.prototype.size = function (chunk) {\n            return chunk.byteLength;\n          };\n          return ByteLengthQueuingStrategy;\n        }();\n        var CountQueuingStrategy = function () {\n          function CountQueuingStrategy(_a) {\n            var highWaterMark = _a.highWaterMark;\n            this.highWaterMark = highWaterMark;\n          }\n          CountQueuingStrategy.prototype.size = function () {\n            return 1;\n          };\n          return CountQueuingStrategy;\n        }();\n        var TransformStream = function () {\n          function TransformStream(transformer, writableStrategy, readableStrategy) {\n            if (transformer === void 0) {\n              transformer = {};\n            }\n            if (writableStrategy === void 0) {\n              writableStrategy = {};\n            }\n            if (readableStrategy === void 0) {\n              readableStrategy = {};\n            }\n            var writableSizeFunction = writableStrategy.size;\n            var writableHighWaterMark = writableStrategy.highWaterMark;\n            var readableSizeFunction = readableStrategy.size;\n            var readableHighWaterMark = readableStrategy.highWaterMark;\n            var writableType = transformer.writableType;\n            if (writableType !== undefined) {\n              throw new RangeError('Invalid writable type specified');\n            }\n            var writableSizeAlgorithm = MakeSizeAlgorithmFromSizeFunction(writableSizeFunction);\n            if (writableHighWaterMark === undefined) {\n              writableHighWaterMark = 1;\n            }\n            writableHighWaterMark = ValidateAndNormalizeHighWaterMark(writableHighWaterMark);\n            var readableType = transformer.readableType;\n            if (readableType !== undefined) {\n              throw new RangeError('Invalid readable type specified');\n            }\n            var readableSizeAlgorithm = MakeSizeAlgorithmFromSizeFunction(readableSizeFunction);\n            if (readableHighWaterMark === undefined) {\n              readableHighWaterMark = 0;\n            }\n            readableHighWaterMark = ValidateAndNormalizeHighWaterMark(readableHighWaterMark);\n            var startPromise_resolve;\n            var startPromise = newPromise(function (resolve) {\n              startPromise_resolve = resolve;\n            });\n            InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n            SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n            var startResult = InvokeOrNoop(transformer, 'start', [this._transformStreamController]);\n            startPromise_resolve(startResult);\n          }\n          Object.defineProperty(TransformStream.prototype, \"readable\", {\n            get: function () {\n              if (IsTransformStream(this) === false) {\n                throw streamBrandCheckException$2('readable');\n              }\n              return this._readable;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(TransformStream.prototype, \"writable\", {\n            get: function () {\n              if (IsTransformStream(this) === false) {\n                throw streamBrandCheckException$2('writable');\n              }\n              return this._writable;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          return TransformStream;\n        }();\n        function InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {\n          function startAlgorithm() {\n            return startPromise;\n          }\n          function writeAlgorithm(chunk) {\n            return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n          }\n          function abortAlgorithm(reason) {\n            return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n          }\n          function closeAlgorithm() {\n            return TransformStreamDefaultSinkCloseAlgorithm(stream);\n          }\n          stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);\n          function pullAlgorithm() {\n            return TransformStreamDefaultSourcePullAlgorithm(stream);\n          }\n          function cancelAlgorithm(reason) {\n            TransformStreamErrorWritableAndUnblockWrite(stream, reason);\n            return promiseResolvedWith(undefined);\n          }\n          stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n          stream._backpressure = undefined;\n          stream._backpressureChangePromise = undefined;\n          stream._backpressureChangePromise_resolve = undefined;\n          TransformStreamSetBackpressure(stream, true);\n          stream._transformStreamController = undefined;\n        }\n        function IsTransformStream(x) {\n          if (!typeIsObject(x)) {\n            return false;\n          }\n          if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n            return false;\n          }\n          return true;\n        }\n        function TransformStreamError(stream, e) {\n          ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);\n          TransformStreamErrorWritableAndUnblockWrite(stream, e);\n        }\n        function TransformStreamErrorWritableAndUnblockWrite(stream, e) {\n          TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n          WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\n          if (stream._backpressure === true) {\n            TransformStreamSetBackpressure(stream, false);\n          }\n        }\n        function TransformStreamSetBackpressure(stream, backpressure) {\n          if (stream._backpressureChangePromise !== undefined) {\n            stream._backpressureChangePromise_resolve();\n          }\n          stream._backpressureChangePromise = newPromise(function (resolve) {\n            stream._backpressureChangePromise_resolve = resolve;\n          });\n          stream._backpressure = backpressure;\n        }\n        var TransformStreamDefaultController = function () {\n          function TransformStreamDefaultController() {\n            throw new TypeError('TransformStreamDefaultController instances cannot be created directly');\n          }\n          Object.defineProperty(TransformStreamDefaultController.prototype, \"desiredSize\", {\n            get: function () {\n              if (IsTransformStreamDefaultController(this) === false) {\n                throw defaultControllerBrandCheckException$1('desiredSize');\n              }\n              var readableController = this._controlledTransformStream._readable._readableStreamController;\n              return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n            },\n            enumerable: true,\n            configurable: true\n          });\n          TransformStreamDefaultController.prototype.enqueue = function (chunk) {\n            if (IsTransformStreamDefaultController(this) === false) {\n              throw defaultControllerBrandCheckException$1('enqueue');\n            }\n            TransformStreamDefaultControllerEnqueue(this, chunk);\n          };\n          TransformStreamDefaultController.prototype.error = function (reason) {\n            if (IsTransformStreamDefaultController(this) === false) {\n              throw defaultControllerBrandCheckException$1('error');\n            }\n            TransformStreamDefaultControllerError(this, reason);\n          };\n          TransformStreamDefaultController.prototype.terminate = function () {\n            if (IsTransformStreamDefaultController(this) === false) {\n              throw defaultControllerBrandCheckException$1('terminate');\n            }\n            TransformStreamDefaultControllerTerminate(this);\n          };\n          return TransformStreamDefaultController;\n        }();\n        function IsTransformStreamDefaultController(x) {\n          if (!typeIsObject(x)) {\n            return false;\n          }\n          if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n            return false;\n          }\n          return true;\n        }\n        function SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {\n          controller._controlledTransformStream = stream;\n          stream._transformStreamController = controller;\n          controller._transformAlgorithm = transformAlgorithm;\n          controller._flushAlgorithm = flushAlgorithm;\n        }\n        function SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {\n          var controller = Object.create(TransformStreamDefaultController.prototype);\n          var transformAlgorithm = function (chunk) {\n            try {\n              TransformStreamDefaultControllerEnqueue(controller, chunk);\n              return promiseResolvedWith(undefined);\n            } catch (transformResultE) {\n              return promiseRejectedWith(transformResultE);\n            }\n          };\n          var transformMethod = transformer.transform;\n          if (transformMethod !== undefined) {\n            if (typeof transformMethod !== 'function') {\n              throw new TypeError('transform is not a method');\n            }\n            transformAlgorithm = function (chunk) {\n              return PromiseCall(transformMethod, transformer, [chunk, controller]);\n            };\n          }\n          var flushAlgorithm = CreateAlgorithmFromUnderlyingMethod(transformer, 'flush', 0, [controller]);\n          SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n        }\n        function TransformStreamDefaultControllerClearAlgorithms(controller) {\n          controller._transformAlgorithm = undefined;\n          controller._flushAlgorithm = undefined;\n        }\n        function TransformStreamDefaultControllerEnqueue(controller, chunk) {\n          var stream = controller._controlledTransformStream;\n          var readableController = stream._readable._readableStreamController;\n          if (ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController) === false) {\n            throw new TypeError('Readable side is not in a state that permits enqueue');\n          }\n          try {\n            ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n          } catch (e) {\n            TransformStreamErrorWritableAndUnblockWrite(stream, e);\n            throw stream._readable._storedError;\n          }\n          var backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n          if (backpressure !== stream._backpressure) {\n            TransformStreamSetBackpressure(stream, true);\n          }\n        }\n        function TransformStreamDefaultControllerError(controller, e) {\n          TransformStreamError(controller._controlledTransformStream, e);\n        }\n        function TransformStreamDefaultControllerPerformTransform(controller, chunk) {\n          var transformPromise = controller._transformAlgorithm(chunk);\n          return transformPromiseWith(transformPromise, undefined, function (r) {\n            TransformStreamError(controller._controlledTransformStream, r);\n            throw r;\n          });\n        }\n        function TransformStreamDefaultControllerTerminate(controller) {\n          var stream = controller._controlledTransformStream;\n          var readableController = stream._readable._readableStreamController;\n          if (ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController) === true) {\n            ReadableStreamDefaultControllerClose(readableController);\n          }\n          var error = new TypeError('TransformStream terminated');\n          TransformStreamErrorWritableAndUnblockWrite(stream, error);\n        }\n        function TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {\n          var controller = stream._transformStreamController;\n          if (stream._backpressure === true) {\n            var backpressureChangePromise = stream._backpressureChangePromise;\n            return transformPromiseWith(backpressureChangePromise, function () {\n              var writable = stream._writable;\n              var state = writable._state;\n              if (state === 'erroring') {\n                throw writable._storedError;\n              }\n              return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n            });\n          }\n          return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n        }\n        function TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {\n          TransformStreamError(stream, reason);\n          return promiseResolvedWith(undefined);\n        }\n        function TransformStreamDefaultSinkCloseAlgorithm(stream) {\n          var readable = stream._readable;\n          var controller = stream._transformStreamController;\n          var flushPromise = controller._flushAlgorithm();\n          TransformStreamDefaultControllerClearAlgorithms(controller);\n          return transformPromiseWith(flushPromise, function () {\n            if (readable._state === 'errored') {\n              throw readable._storedError;\n            }\n            var readableController = readable._readableStreamController;\n            if (ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController) === true) {\n              ReadableStreamDefaultControllerClose(readableController);\n            }\n          }, function (r) {\n            TransformStreamError(stream, r);\n            throw readable._storedError;\n          });\n        }\n        function TransformStreamDefaultSourcePullAlgorithm(stream) {\n          TransformStreamSetBackpressure(stream, false);\n          return stream._backpressureChangePromise;\n        }\n        function defaultControllerBrandCheckException$1(name) {\n          return new TypeError(\"TransformStreamDefaultController.prototype.\" + name + \" can only be used on a TransformStreamDefaultController\");\n        }\n        function streamBrandCheckException$2(name) {\n          return new TypeError(\"TransformStream.prototype.\" + name + \" can only be used on a TransformStream\");\n        }\n        exports.ByteLengthQueuingStrategy = ByteLengthQueuingStrategy;\n        exports.CountQueuingStrategy = CountQueuingStrategy;\n        exports.ReadableStream = ReadableStream;\n        exports.TransformStream = TransformStream;\n        exports.WritableStream = WritableStream;\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n      });\n\n      /***/\n    }, /* 144 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      __w_pdfjs_require__(145);\n      __w_pdfjs_require__(114);\n      __w_pdfjs_require__(77);\n      __w_pdfjs_require__(116);\n      var path = __w_pdfjs_require__(43);\n      module.exports = path.Map;\n\n      /***/\n    }, /* 145 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var collection = __w_pdfjs_require__(146);\n      var collectionStrong = __w_pdfjs_require__(150);\n      module.exports = collection('Map', function (init) {\n        return function Map() {\n          return init(this, arguments.length ? arguments[0] : undefined);\n        };\n      }, collectionStrong);\n\n      /***/\n    }, /* 146 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var $ = __w_pdfjs_require__(10);\n      var global = __w_pdfjs_require__(11);\n      var isForced = __w_pdfjs_require__(52);\n      var redefine = __w_pdfjs_require__(29);\n      var InternalMetadataModule = __w_pdfjs_require__(147);\n      var iterate = __w_pdfjs_require__(124);\n      var anInstance = __w_pdfjs_require__(123);\n      var isObject = __w_pdfjs_require__(22);\n      var fails = __w_pdfjs_require__(14);\n      var checkCorrectnessOfIteration = __w_pdfjs_require__(97);\n      var setToStringTag = __w_pdfjs_require__(85);\n      var inheritIfRequired = __w_pdfjs_require__(149);\n      module.exports = function (CONSTRUCTOR_NAME, wrapper, common) {\n        var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;\n        var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;\n        var ADDER = IS_MAP ? 'set' : 'add';\n        var NativeConstructor = global[CONSTRUCTOR_NAME];\n        var NativePrototype = NativeConstructor && NativeConstructor.prototype;\n        var Constructor = NativeConstructor;\n        var exported = {};\n        var fixMethod = function (KEY) {\n          var nativeMethod = NativePrototype[KEY];\n          redefine(NativePrototype, KEY, KEY == 'add' ? function add(value) {\n            nativeMethod.call(this, value === 0 ? 0 : value);\n            return this;\n          } : KEY == 'delete' ? function (key) {\n            return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n          } : KEY == 'get' ? function get(key) {\n            return IS_WEAK && !isObject(key) ? undefined : nativeMethod.call(this, key === 0 ? 0 : key);\n          } : KEY == 'has' ? function has(key) {\n            return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n          } : function set(key, value) {\n            nativeMethod.call(this, key === 0 ? 0 : key, value);\n            return this;\n          });\n        };\n        if (isForced(CONSTRUCTOR_NAME, typeof NativeConstructor != 'function' || !(IS_WEAK || NativePrototype.forEach && !fails(function () {\n          new NativeConstructor().entries().next();\n        })))) {\n          Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);\n          InternalMetadataModule.REQUIRED = true;\n        } else if (isForced(CONSTRUCTOR_NAME, true)) {\n          var instance = new Constructor();\n          var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n          var THROWS_ON_PRIMITIVES = fails(function () {\n            instance.has(1);\n          });\n          var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) {\n            new NativeConstructor(iterable);\n          });\n          var BUGGY_ZERO = !IS_WEAK && fails(function () {\n            var $instance = new NativeConstructor();\n            var index = 5;\n            while (index--) $instance[ADDER](index, index);\n            return !$instance.has(-0);\n          });\n          if (!ACCEPT_ITERABLES) {\n            Constructor = wrapper(function (dummy, iterable) {\n              anInstance(dummy, Constructor, CONSTRUCTOR_NAME);\n              var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);\n              if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);\n              return that;\n            });\n            Constructor.prototype = NativePrototype;\n            NativePrototype.constructor = Constructor;\n          }\n          if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n            fixMethod('delete');\n            fixMethod('has');\n            IS_MAP && fixMethod('get');\n          }\n          if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n          if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;\n        }\n        exported[CONSTRUCTOR_NAME] = Constructor;\n        $({\n          global: true,\n          forced: Constructor != NativeConstructor\n        }, exported);\n        setToStringTag(Constructor, CONSTRUCTOR_NAME);\n        if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);\n        return Constructor;\n      };\n\n      /***/\n    }, /* 147 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var hiddenKeys = __w_pdfjs_require__(39);\n      var isObject = __w_pdfjs_require__(22);\n      var has = __w_pdfjs_require__(23);\n      var defineProperty = __w_pdfjs_require__(27).f;\n      var uid = __w_pdfjs_require__(38);\n      var FREEZING = __w_pdfjs_require__(148);\n      var METADATA = uid('meta');\n      var id = 0;\n      var isExtensible = Object.isExtensible || function () {\n        return true;\n      };\n      var setMetadata = function (it) {\n        defineProperty(it, METADATA, {\n          value: {\n            objectID: 'O' + ++id,\n            weakData: {}\n          }\n        });\n      };\n      var fastKey = function (it, create) {\n        if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n        if (!has(it, METADATA)) {\n          if (!isExtensible(it)) return 'F';\n          if (!create) return 'E';\n          setMetadata(it);\n        }\n        return it[METADATA].objectID;\n      };\n      var getWeakData = function (it, create) {\n        if (!has(it, METADATA)) {\n          if (!isExtensible(it)) return true;\n          if (!create) return false;\n          setMetadata(it);\n        }\n        return it[METADATA].weakData;\n      };\n      var onFreeze = function (it) {\n        if (FREEZING && meta.REQUIRED && isExtensible(it) && !has(it, METADATA)) setMetadata(it);\n        return it;\n      };\n      var meta = module.exports = {\n        REQUIRED: false,\n        fastKey: fastKey,\n        getWeakData: getWeakData,\n        onFreeze: onFreeze\n      };\n      hiddenKeys[METADATA] = true;\n\n      /***/\n    }, /* 148 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var fails = __w_pdfjs_require__(14);\n      module.exports = !fails(function () {\n        return Object.isExtensible(Object.preventExtensions({}));\n      });\n\n      /***/\n    }, /* 149 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var isObject = __w_pdfjs_require__(22);\n      var setPrototypeOf = __w_pdfjs_require__(87);\n      module.exports = function ($this, dummy, Wrapper) {\n        var NewTarget, NewTargetPrototype;\n        if (setPrototypeOf && typeof (NewTarget = dummy.constructor) == 'function' && NewTarget !== Wrapper && isObject(NewTargetPrototype = NewTarget.prototype) && NewTargetPrototype !== Wrapper.prototype) setPrototypeOf($this, NewTargetPrototype);\n        return $this;\n      };\n\n      /***/\n    }, /* 150 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var defineProperty = __w_pdfjs_require__(27).f;\n      var create = __w_pdfjs_require__(71);\n      var redefineAll = __w_pdfjs_require__(121);\n      var bind = __w_pdfjs_require__(62);\n      var anInstance = __w_pdfjs_require__(123);\n      var iterate = __w_pdfjs_require__(124);\n      var defineIterator = __w_pdfjs_require__(79);\n      var setSpecies = __w_pdfjs_require__(122);\n      var DESCRIPTORS = __w_pdfjs_require__(13);\n      var fastKey = __w_pdfjs_require__(147).fastKey;\n      var InternalStateModule = __w_pdfjs_require__(33);\n      var setInternalState = InternalStateModule.set;\n      var internalStateGetterFor = InternalStateModule.getterFor;\n      module.exports = {\n        getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {\n          var C = wrapper(function (that, iterable) {\n            anInstance(that, C, CONSTRUCTOR_NAME);\n            setInternalState(that, {\n              type: CONSTRUCTOR_NAME,\n              index: create(null),\n              first: undefined,\n              last: undefined,\n              size: 0\n            });\n            if (!DESCRIPTORS) that.size = 0;\n            if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);\n          });\n          var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);\n          var define = function (that, key, value) {\n            var state = getInternalState(that);\n            var entry = getEntry(that, key);\n            var previous, index;\n            if (entry) {\n              entry.value = value;\n            } else {\n              state.last = entry = {\n                index: index = fastKey(key, true),\n                key: key,\n                value: value,\n                previous: previous = state.last,\n                next: undefined,\n                removed: false\n              };\n              if (!state.first) state.first = entry;\n              if (previous) previous.next = entry;\n              if (DESCRIPTORS) state.size++;else that.size++;\n              if (index !== 'F') state.index[index] = entry;\n            }\n            return that;\n          };\n          var getEntry = function (that, key) {\n            var state = getInternalState(that);\n            var index = fastKey(key);\n            var entry;\n            if (index !== 'F') return state.index[index];\n            for (entry = state.first; entry; entry = entry.next) {\n              if (entry.key == key) return entry;\n            }\n          };\n          redefineAll(C.prototype, {\n            clear: function clear() {\n              var that = this;\n              var state = getInternalState(that);\n              var data = state.index;\n              var entry = state.first;\n              while (entry) {\n                entry.removed = true;\n                if (entry.previous) entry.previous = entry.previous.next = undefined;\n                delete data[entry.index];\n                entry = entry.next;\n              }\n              state.first = state.last = undefined;\n              if (DESCRIPTORS) state.size = 0;else that.size = 0;\n            },\n            'delete': function (key) {\n              var that = this;\n              var state = getInternalState(that);\n              var entry = getEntry(that, key);\n              if (entry) {\n                var next = entry.next;\n                var prev = entry.previous;\n                delete state.index[entry.index];\n                entry.removed = true;\n                if (prev) prev.next = next;\n                if (next) next.previous = prev;\n                if (state.first == entry) state.first = next;\n                if (state.last == entry) state.last = prev;\n                if (DESCRIPTORS) state.size--;else that.size--;\n              }\n              return !!entry;\n            },\n            forEach: function forEach(callbackfn) {\n              var state = getInternalState(this);\n              var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n              var entry;\n              while (entry = entry ? entry.next : state.first) {\n                boundFunction(entry.value, entry.key, this);\n                while (entry && entry.removed) entry = entry.previous;\n              }\n            },\n            has: function has(key) {\n              return !!getEntry(this, key);\n            }\n          });\n          redefineAll(C.prototype, IS_MAP ? {\n            get: function get(key) {\n              var entry = getEntry(this, key);\n              return entry && entry.value;\n            },\n            set: function set(key, value) {\n              return define(this, key === 0 ? 0 : key, value);\n            }\n          } : {\n            add: function add(value) {\n              return define(this, value = value === 0 ? 0 : value, value);\n            }\n          });\n          if (DESCRIPTORS) defineProperty(C.prototype, 'size', {\n            get: function () {\n              return getInternalState(this).size;\n            }\n          });\n          return C;\n        },\n        setStrong: function (C, CONSTRUCTOR_NAME, IS_MAP) {\n          var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';\n          var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);\n          var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);\n          defineIterator(C, CONSTRUCTOR_NAME, function (iterated, kind) {\n            setInternalState(this, {\n              type: ITERATOR_NAME,\n              target: iterated,\n              state: getInternalCollectionState(iterated),\n              kind: kind,\n              last: undefined\n            });\n          }, function () {\n            var state = getInternalIteratorState(this);\n            var kind = state.kind;\n            var entry = state.last;\n            while (entry && entry.removed) entry = entry.previous;\n            if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {\n              state.target = undefined;\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n            if (kind == 'keys') return {\n              value: entry.key,\n              done: false\n            };\n            if (kind == 'values') return {\n              value: entry.value,\n              done: false\n            };\n            return {\n              value: [entry.key, entry.value],\n              done: false\n            };\n          }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n          setSpecies(CONSTRUCTOR_NAME);\n        }\n      };\n\n      /***/\n    }, /* 151 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      __w_pdfjs_require__(152);\n      __w_pdfjs_require__(114);\n      __w_pdfjs_require__(77);\n      __w_pdfjs_require__(116);\n      var path = __w_pdfjs_require__(43);\n      module.exports = path.Set;\n\n      /***/\n    }, /* 152 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var collection = __w_pdfjs_require__(146);\n      var collectionStrong = __w_pdfjs_require__(150);\n      module.exports = collection('Set', function (init) {\n        return function Set() {\n          return init(this, arguments.length ? arguments[0] : undefined);\n        };\n      }, collectionStrong);\n\n      /***/\n    }, /* 153 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      __w_pdfjs_require__(114);\n      __w_pdfjs_require__(154);\n      __w_pdfjs_require__(116);\n      var path = __w_pdfjs_require__(43);\n      module.exports = path.WeakMap;\n\n      /***/\n    }, /* 154 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var global = __w_pdfjs_require__(11);\n      var redefineAll = __w_pdfjs_require__(121);\n      var InternalMetadataModule = __w_pdfjs_require__(147);\n      var collection = __w_pdfjs_require__(146);\n      var collectionWeak = __w_pdfjs_require__(155);\n      var isObject = __w_pdfjs_require__(22);\n      var enforceIternalState = __w_pdfjs_require__(33).enforce;\n      var NATIVE_WEAK_MAP = __w_pdfjs_require__(34);\n      var IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;\n      var isExtensible = Object.isExtensible;\n      var InternalWeakMap;\n      var wrapper = function (init) {\n        return function WeakMap() {\n          return init(this, arguments.length ? arguments[0] : undefined);\n        };\n      };\n      var $WeakMap = module.exports = collection('WeakMap', wrapper, collectionWeak);\n      if (NATIVE_WEAK_MAP && IS_IE11) {\n        InternalWeakMap = collectionWeak.getConstructor(wrapper, 'WeakMap', true);\n        InternalMetadataModule.REQUIRED = true;\n        var WeakMapPrototype = $WeakMap.prototype;\n        var nativeDelete = WeakMapPrototype['delete'];\n        var nativeHas = WeakMapPrototype.has;\n        var nativeGet = WeakMapPrototype.get;\n        var nativeSet = WeakMapPrototype.set;\n        redefineAll(WeakMapPrototype, {\n          'delete': function (key) {\n            if (isObject(key) && !isExtensible(key)) {\n              var state = enforceIternalState(this);\n              if (!state.frozen) state.frozen = new InternalWeakMap();\n              return nativeDelete.call(this, key) || state.frozen['delete'](key);\n            }\n            return nativeDelete.call(this, key);\n          },\n          has: function has(key) {\n            if (isObject(key) && !isExtensible(key)) {\n              var state = enforceIternalState(this);\n              if (!state.frozen) state.frozen = new InternalWeakMap();\n              return nativeHas.call(this, key) || state.frozen.has(key);\n            }\n            return nativeHas.call(this, key);\n          },\n          get: function get(key) {\n            if (isObject(key) && !isExtensible(key)) {\n              var state = enforceIternalState(this);\n              if (!state.frozen) state.frozen = new InternalWeakMap();\n              return nativeHas.call(this, key) ? nativeGet.call(this, key) : state.frozen.get(key);\n            }\n            return nativeGet.call(this, key);\n          },\n          set: function set(key, value) {\n            if (isObject(key) && !isExtensible(key)) {\n              var state = enforceIternalState(this);\n              if (!state.frozen) state.frozen = new InternalWeakMap();\n              nativeHas.call(this, key) ? nativeSet.call(this, key, value) : state.frozen.set(key, value);\n            } else nativeSet.call(this, key, value);\n            return this;\n          }\n        });\n      }\n\n      /***/\n    }, /* 155 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var redefineAll = __w_pdfjs_require__(121);\n      var getWeakData = __w_pdfjs_require__(147).getWeakData;\n      var anObject = __w_pdfjs_require__(28);\n      var isObject = __w_pdfjs_require__(22);\n      var anInstance = __w_pdfjs_require__(123);\n      var iterate = __w_pdfjs_require__(124);\n      var ArrayIterationModule = __w_pdfjs_require__(156);\n      var $has = __w_pdfjs_require__(23);\n      var InternalStateModule = __w_pdfjs_require__(33);\n      var setInternalState = InternalStateModule.set;\n      var internalStateGetterFor = InternalStateModule.getterFor;\n      var find = ArrayIterationModule.find;\n      var findIndex = ArrayIterationModule.findIndex;\n      var id = 0;\n      var uncaughtFrozenStore = function (store) {\n        return store.frozen || (store.frozen = new UncaughtFrozenStore());\n      };\n      var UncaughtFrozenStore = function () {\n        this.entries = [];\n      };\n      var findUncaughtFrozen = function (store, key) {\n        return find(store.entries, function (it) {\n          return it[0] === key;\n        });\n      };\n      UncaughtFrozenStore.prototype = {\n        get: function (key) {\n          var entry = findUncaughtFrozen(this, key);\n          if (entry) return entry[1];\n        },\n        has: function (key) {\n          return !!findUncaughtFrozen(this, key);\n        },\n        set: function (key, value) {\n          var entry = findUncaughtFrozen(this, key);\n          if (entry) entry[1] = value;else this.entries.push([key, value]);\n        },\n        'delete': function (key) {\n          var index = findIndex(this.entries, function (it) {\n            return it[0] === key;\n          });\n          if (~index) this.entries.splice(index, 1);\n          return !!~index;\n        }\n      };\n      module.exports = {\n        getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {\n          var C = wrapper(function (that, iterable) {\n            anInstance(that, C, CONSTRUCTOR_NAME);\n            setInternalState(that, {\n              type: CONSTRUCTOR_NAME,\n              id: id++,\n              frozen: undefined\n            });\n            if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);\n          });\n          var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);\n          var define = function (that, key, value) {\n            var state = getInternalState(that);\n            var data = getWeakData(anObject(key), true);\n            if (data === true) uncaughtFrozenStore(state).set(key, value);else data[state.id] = value;\n            return that;\n          };\n          redefineAll(C.prototype, {\n            'delete': function (key) {\n              var state = getInternalState(this);\n              if (!isObject(key)) return false;\n              var data = getWeakData(key);\n              if (data === true) return uncaughtFrozenStore(state)['delete'](key);\n              return data && $has(data, state.id) && delete data[state.id];\n            },\n            has: function has(key) {\n              var state = getInternalState(this);\n              if (!isObject(key)) return false;\n              var data = getWeakData(key);\n              if (data === true) return uncaughtFrozenStore(state).has(key);\n              return data && $has(data, state.id);\n            }\n          });\n          redefineAll(C.prototype, IS_MAP ? {\n            get: function get(key) {\n              var state = getInternalState(this);\n              if (isObject(key)) {\n                var data = getWeakData(key);\n                if (data === true) return uncaughtFrozenStore(state).get(key);\n                return data ? data[state.id] : undefined;\n              }\n            },\n            set: function set(key, value) {\n              return define(this, key, value);\n            }\n          } : {\n            add: function add(value) {\n              return define(this, value, true);\n            }\n          });\n          return C;\n        }\n      };\n\n      /***/\n    }, /* 156 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var bind = __w_pdfjs_require__(62);\n      var IndexedObject = __w_pdfjs_require__(18);\n      var toObject = __w_pdfjs_require__(83);\n      var toLength = __w_pdfjs_require__(47);\n      var arraySpeciesCreate = __w_pdfjs_require__(157);\n      var push = [].push;\n      var createMethod = function (TYPE) {\n        var IS_MAP = TYPE == 1;\n        var IS_FILTER = TYPE == 2;\n        var IS_SOME = TYPE == 3;\n        var IS_EVERY = TYPE == 4;\n        var IS_FIND_INDEX = TYPE == 6;\n        var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n        return function ($this, callbackfn, that, specificCreate) {\n          var O = toObject($this);\n          var self = IndexedObject(O);\n          var boundFunction = bind(callbackfn, that, 3);\n          var length = toLength(self.length);\n          var index = 0;\n          var create = specificCreate || arraySpeciesCreate;\n          var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n          var value, result;\n          for (; length > index; index++) if (NO_HOLES || index in self) {\n            value = self[index];\n            result = boundFunction(value, index, O);\n            if (TYPE) {\n              if (IS_MAP) target[index] = result;else if (result) switch (TYPE) {\n                case 3:\n                  return true;\n                case 5:\n                  return value;\n                case 6:\n                  return index;\n                case 2:\n                  push.call(target, value);\n              } else if (IS_EVERY) return false;\n            }\n          }\n          return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n        };\n      };\n      module.exports = {\n        forEach: createMethod(0),\n        map: createMethod(1),\n        filter: createMethod(2),\n        some: createMethod(3),\n        every: createMethod(4),\n        find: createMethod(5),\n        findIndex: createMethod(6)\n      };\n\n      /***/\n    }, /* 157 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var isObject = __w_pdfjs_require__(22);\n      var isArray = __w_pdfjs_require__(158);\n      var wellKnownSymbol = __w_pdfjs_require__(57);\n      var SPECIES = wellKnownSymbol('species');\n      module.exports = function (originalArray, length) {\n        var C;\n        if (isArray(originalArray)) {\n          C = originalArray.constructor;\n          if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;else if (isObject(C)) {\n            C = C[SPECIES];\n            if (C === null) C = undefined;\n          }\n        }\n        return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n      };\n\n      /***/\n    }, /* 158 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var classof = __w_pdfjs_require__(19);\n      module.exports = Array.isArray || function isArray(arg) {\n        return classof(arg) == 'Array';\n      };\n\n      /***/\n    }, /* 159 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      __w_pdfjs_require__(114);\n      __w_pdfjs_require__(160);\n      __w_pdfjs_require__(116);\n      var path = __w_pdfjs_require__(43);\n      module.exports = path.WeakSet;\n\n      /***/\n    }, /* 160 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var collection = __w_pdfjs_require__(146);\n      var collectionWeak = __w_pdfjs_require__(155);\n      collection('WeakSet', function (init) {\n        return function WeakSet() {\n          return init(this, arguments.length ? arguments[0] : undefined);\n        };\n      }, collectionWeak);\n\n      /***/\n    }, /* 161 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      __w_pdfjs_require__(162);\n      var entryUnbind = __w_pdfjs_require__(61);\n      module.exports = entryUnbind('String', 'codePointAt');\n\n      /***/\n    }, /* 162 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var $ = __w_pdfjs_require__(10);\n      var codeAt = __w_pdfjs_require__(78).codeAt;\n      $({\n        target: 'String',\n        proto: true\n      }, {\n        codePointAt: function codePointAt(pos) {\n          return codeAt(this, pos);\n        }\n      });\n\n      /***/\n    }, /* 163 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      __w_pdfjs_require__(164);\n      var path = __w_pdfjs_require__(43);\n      module.exports = path.String.fromCodePoint;\n\n      /***/\n    }, /* 164 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var $ = __w_pdfjs_require__(10);\n      var toAbsoluteIndex = __w_pdfjs_require__(49);\n      var fromCharCode = String.fromCharCode;\n      var nativeFromCodePoint = String.fromCodePoint;\n      var INCORRECT_LENGTH = !!nativeFromCodePoint && nativeFromCodePoint.length != 1;\n      $({\n        target: 'String',\n        stat: true,\n        forced: INCORRECT_LENGTH\n      }, {\n        fromCodePoint: function fromCodePoint(x) {\n          var elements = [];\n          var length = arguments.length;\n          var i = 0;\n          var code;\n          while (length > i) {\n            code = +arguments[i++];\n            if (toAbsoluteIndex(code, 0x10FFFF) !== code) throw RangeError(code + ' is not a valid code point');\n            elements.push(code < 0x10000 ? fromCharCode(code) : fromCharCode(((code -= 0x10000) >> 10) + 0xD800, code % 0x400 + 0xDC00));\n          }\n          return elements.join('');\n        }\n      });\n\n      /***/\n    }, /* 165 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      __w_pdfjs_require__(166);\n      __w_pdfjs_require__(114);\n      __w_pdfjs_require__(168);\n      __w_pdfjs_require__(172);\n      __w_pdfjs_require__(173);\n      __w_pdfjs_require__(174);\n      __w_pdfjs_require__(175);\n      __w_pdfjs_require__(176);\n      __w_pdfjs_require__(177);\n      __w_pdfjs_require__(178);\n      __w_pdfjs_require__(179);\n      __w_pdfjs_require__(180);\n      __w_pdfjs_require__(181);\n      __w_pdfjs_require__(182);\n      __w_pdfjs_require__(183);\n      __w_pdfjs_require__(184);\n      __w_pdfjs_require__(185);\n      __w_pdfjs_require__(186);\n      __w_pdfjs_require__(187);\n      var path = __w_pdfjs_require__(43);\n      module.exports = path.Symbol;\n\n      /***/\n    }, /* 166 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var $ = __w_pdfjs_require__(10);\n      var fails = __w_pdfjs_require__(14);\n      var isArray = __w_pdfjs_require__(158);\n      var isObject = __w_pdfjs_require__(22);\n      var toObject = __w_pdfjs_require__(83);\n      var toLength = __w_pdfjs_require__(47);\n      var createProperty = __w_pdfjs_require__(93);\n      var arraySpeciesCreate = __w_pdfjs_require__(157);\n      var arrayMethodHasSpeciesSupport = __w_pdfjs_require__(167);\n      var wellKnownSymbol = __w_pdfjs_require__(57);\n      var V8_VERSION = __w_pdfjs_require__(133);\n      var IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\n      var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\n      var MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n      var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n        var array = [];\n        array[IS_CONCAT_SPREADABLE] = false;\n        return array.concat()[0] !== array;\n      });\n      var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n      var isConcatSpreadable = function (O) {\n        if (!isObject(O)) return false;\n        var spreadable = O[IS_CONCAT_SPREADABLE];\n        return spreadable !== undefined ? !!spreadable : isArray(O);\n      };\n      var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n      $({\n        target: 'Array',\n        proto: true,\n        forced: FORCED\n      }, {\n        concat: function concat(arg) {\n          var O = toObject(this);\n          var A = arraySpeciesCreate(O, 0);\n          var n = 0;\n          var i, k, length, len, E;\n          for (i = -1, length = arguments.length; i < length; i++) {\n            E = i === -1 ? O : arguments[i];\n            if (isConcatSpreadable(E)) {\n              len = toLength(E.length);\n              if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n              for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n            } else {\n              if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n              createProperty(A, n++, E);\n            }\n          }\n          A.length = n;\n          return A;\n        }\n      });\n\n      /***/\n    }, /* 167 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var fails = __w_pdfjs_require__(14);\n      var wellKnownSymbol = __w_pdfjs_require__(57);\n      var V8_VERSION = __w_pdfjs_require__(133);\n      var SPECIES = wellKnownSymbol('species');\n      module.exports = function (METHOD_NAME) {\n        return V8_VERSION >= 51 || !fails(function () {\n          var array = [];\n          var constructor = array.constructor = {};\n          constructor[SPECIES] = function () {\n            return {\n              foo: 1\n            };\n          };\n          return array[METHOD_NAME](Boolean).foo !== 1;\n        });\n      };\n\n      /***/\n    }, /* 168 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var $ = __w_pdfjs_require__(10);\n      var global = __w_pdfjs_require__(11);\n      var getBuiltIn = __w_pdfjs_require__(42);\n      var IS_PURE = __w_pdfjs_require__(37);\n      var DESCRIPTORS = __w_pdfjs_require__(13);\n      var NATIVE_SYMBOL = __w_pdfjs_require__(58);\n      var USE_SYMBOL_AS_UID = __w_pdfjs_require__(59);\n      var fails = __w_pdfjs_require__(14);\n      var has = __w_pdfjs_require__(23);\n      var isArray = __w_pdfjs_require__(158);\n      var isObject = __w_pdfjs_require__(22);\n      var anObject = __w_pdfjs_require__(28);\n      var toObject = __w_pdfjs_require__(83);\n      var toIndexedObject = __w_pdfjs_require__(17);\n      var toPrimitive = __w_pdfjs_require__(21);\n      var createPropertyDescriptor = __w_pdfjs_require__(16);\n      var nativeObjectCreate = __w_pdfjs_require__(71);\n      var objectKeys = __w_pdfjs_require__(73);\n      var getOwnPropertyNamesModule = __w_pdfjs_require__(44);\n      var getOwnPropertyNamesExternal = __w_pdfjs_require__(169);\n      var getOwnPropertySymbolsModule = __w_pdfjs_require__(51);\n      var getOwnPropertyDescriptorModule = __w_pdfjs_require__(12);\n      var definePropertyModule = __w_pdfjs_require__(27);\n      var propertyIsEnumerableModule = __w_pdfjs_require__(15);\n      var createNonEnumerableProperty = __w_pdfjs_require__(26);\n      var redefine = __w_pdfjs_require__(29);\n      var shared = __w_pdfjs_require__(36);\n      var sharedKey = __w_pdfjs_require__(35);\n      var hiddenKeys = __w_pdfjs_require__(39);\n      var uid = __w_pdfjs_require__(38);\n      var wellKnownSymbol = __w_pdfjs_require__(57);\n      var wrappedWellKnownSymbolModule = __w_pdfjs_require__(170);\n      var defineWellKnownSymbol = __w_pdfjs_require__(171);\n      var setToStringTag = __w_pdfjs_require__(85);\n      var InternalStateModule = __w_pdfjs_require__(33);\n      var $forEach = __w_pdfjs_require__(156).forEach;\n      var HIDDEN = sharedKey('hidden');\n      var SYMBOL = 'Symbol';\n      var PROTOTYPE = 'prototype';\n      var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n      var setInternalState = InternalStateModule.set;\n      var getInternalState = InternalStateModule.getterFor(SYMBOL);\n      var ObjectPrototype = Object[PROTOTYPE];\n      var $Symbol = global.Symbol;\n      var $stringify = getBuiltIn('JSON', 'stringify');\n      var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n      var nativeDefineProperty = definePropertyModule.f;\n      var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\n      var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;\n      var AllSymbols = shared('symbols');\n      var ObjectPrototypeSymbols = shared('op-symbols');\n      var StringToSymbolRegistry = shared('string-to-symbol-registry');\n      var SymbolToStringRegistry = shared('symbol-to-string-registry');\n      var WellKnownSymbolsStore = shared('wks');\n      var QObject = global.QObject;\n      var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n      var setSymbolDescriptor = DESCRIPTORS && fails(function () {\n        return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n          get: function () {\n            return nativeDefineProperty(this, 'a', {\n              value: 7\n            }).a;\n          }\n        })).a != 7;\n      }) ? function (O, P, Attributes) {\n        var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);\n        if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];\n        nativeDefineProperty(O, P, Attributes);\n        if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {\n          nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);\n        }\n      } : nativeDefineProperty;\n      var wrap = function (tag, description) {\n        var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);\n        setInternalState(symbol, {\n          type: SYMBOL,\n          tag: tag,\n          description: description\n        });\n        if (!DESCRIPTORS) symbol.description = description;\n        return symbol;\n      };\n      var isSymbol = USE_SYMBOL_AS_UID ? function (it) {\n        return typeof it == 'symbol';\n      } : function (it) {\n        return Object(it) instanceof $Symbol;\n      };\n      var $defineProperty = function defineProperty(O, P, Attributes) {\n        if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n        anObject(O);\n        var key = toPrimitive(P, true);\n        anObject(Attributes);\n        if (has(AllSymbols, key)) {\n          if (!Attributes.enumerable) {\n            if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));\n            O[HIDDEN][key] = true;\n          } else {\n            if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n            Attributes = nativeObjectCreate(Attributes, {\n              enumerable: createPropertyDescriptor(0, false)\n            });\n          }\n          return setSymbolDescriptor(O, key, Attributes);\n        }\n        return nativeDefineProperty(O, key, Attributes);\n      };\n      var $defineProperties = function defineProperties(O, Properties) {\n        anObject(O);\n        var properties = toIndexedObject(Properties);\n        var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n        $forEach(keys, function (key) {\n          if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);\n        });\n        return O;\n      };\n      var $create = function create(O, Properties) {\n        return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n      };\n      var $propertyIsEnumerable = function propertyIsEnumerable(V) {\n        var P = toPrimitive(V, true);\n        var enumerable = nativePropertyIsEnumerable.call(this, P);\n        if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;\n        return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;\n      };\n      var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n        var it = toIndexedObject(O);\n        var key = toPrimitive(P, true);\n        if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;\n        var descriptor = nativeGetOwnPropertyDescriptor(it, key);\n        if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {\n          descriptor.enumerable = true;\n        }\n        return descriptor;\n      };\n      var $getOwnPropertyNames = function getOwnPropertyNames(O) {\n        var names = nativeGetOwnPropertyNames(toIndexedObject(O));\n        var result = [];\n        $forEach(names, function (key) {\n          if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);\n        });\n        return result;\n      };\n      var $getOwnPropertySymbols = function getOwnPropertySymbols(O) {\n        var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n        var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n        var result = [];\n        $forEach(names, function (key) {\n          if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {\n            result.push(AllSymbols[key]);\n          }\n        });\n        return result;\n      };\n      if (!NATIVE_SYMBOL) {\n        $Symbol = function Symbol() {\n          if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');\n          var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);\n          var tag = uid(description);\n          var setter = function (value) {\n            if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);\n            if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n            setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));\n          };\n          if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, {\n            configurable: true,\n            set: setter\n          });\n          return wrap(tag, description);\n        };\n        redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n          return getInternalState(this).tag;\n        });\n        redefine($Symbol, 'withoutSetter', function (description) {\n          return wrap(uid(description), description);\n        });\n        propertyIsEnumerableModule.f = $propertyIsEnumerable;\n        definePropertyModule.f = $defineProperty;\n        getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;\n        getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n        getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;\n        wrappedWellKnownSymbolModule.f = function (name) {\n          return wrap(wellKnownSymbol(name), name);\n        };\n        if (DESCRIPTORS) {\n          nativeDefineProperty($Symbol[PROTOTYPE], 'description', {\n            configurable: true,\n            get: function description() {\n              return getInternalState(this).description;\n            }\n          });\n          if (!IS_PURE) {\n            redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, {\n              unsafe: true\n            });\n          }\n        }\n      }\n      $({\n        global: true,\n        wrap: true,\n        forced: !NATIVE_SYMBOL,\n        sham: !NATIVE_SYMBOL\n      }, {\n        Symbol: $Symbol\n      });\n      $forEach(objectKeys(WellKnownSymbolsStore), function (name) {\n        defineWellKnownSymbol(name);\n      });\n      $({\n        target: SYMBOL,\n        stat: true,\n        forced: !NATIVE_SYMBOL\n      }, {\n        'for': function (key) {\n          var string = String(key);\n          if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n          var symbol = $Symbol(string);\n          StringToSymbolRegistry[string] = symbol;\n          SymbolToStringRegistry[symbol] = string;\n          return symbol;\n        },\n        keyFor: function keyFor(sym) {\n          if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');\n          if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n        },\n        useSetter: function () {\n          USE_SETTER = true;\n        },\n        useSimple: function () {\n          USE_SETTER = false;\n        }\n      });\n      $({\n        target: 'Object',\n        stat: true,\n        forced: !NATIVE_SYMBOL,\n        sham: !DESCRIPTORS\n      }, {\n        create: $create,\n        defineProperty: $defineProperty,\n        defineProperties: $defineProperties,\n        getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n      });\n      $({\n        target: 'Object',\n        stat: true,\n        forced: !NATIVE_SYMBOL\n      }, {\n        getOwnPropertyNames: $getOwnPropertyNames,\n        getOwnPropertySymbols: $getOwnPropertySymbols\n      });\n      $({\n        target: 'Object',\n        stat: true,\n        forced: fails(function () {\n          getOwnPropertySymbolsModule.f(1);\n        })\n      }, {\n        getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n          return getOwnPropertySymbolsModule.f(toObject(it));\n        }\n      });\n      if ($stringify) {\n        var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {\n          var symbol = $Symbol();\n          return $stringify([symbol]) != '[null]' || $stringify({\n            a: symbol\n          }) != '{}' || $stringify(Object(symbol)) != '{}';\n        });\n        $({\n          target: 'JSON',\n          stat: true,\n          forced: FORCED_JSON_STRINGIFY\n        }, {\n          stringify: function stringify(it, replacer, space) {\n            var args = [it];\n            var index = 1;\n            var $replacer;\n            while (arguments.length > index) args.push(arguments[index++]);\n            $replacer = replacer;\n            if (!isObject(replacer) && it === undefined || isSymbol(it)) return;\n            if (!isArray(replacer)) replacer = function (key, value) {\n              if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n              if (!isSymbol(value)) return value;\n            };\n            args[1] = replacer;\n            return $stringify.apply(null, args);\n          }\n        });\n      }\n      if (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {\n        createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n      }\n      setToStringTag($Symbol, SYMBOL);\n      hiddenKeys[HIDDEN] = true;\n\n      /***/\n    }, /* 169 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var toIndexedObject = __w_pdfjs_require__(17);\n      var nativeGetOwnPropertyNames = __w_pdfjs_require__(44).f;\n      var toString = {}.toString;\n      var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];\n      var getWindowNames = function (it) {\n        try {\n          return nativeGetOwnPropertyNames(it);\n        } catch (error) {\n          return windowNames.slice();\n        }\n      };\n      module.exports.f = function getOwnPropertyNames(it) {\n        return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : nativeGetOwnPropertyNames(toIndexedObject(it));\n      };\n\n      /***/\n    }, /* 170 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var wellKnownSymbol = __w_pdfjs_require__(57);\n      exports.f = wellKnownSymbol;\n\n      /***/\n    }, /* 171 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var path = __w_pdfjs_require__(43);\n      var has = __w_pdfjs_require__(23);\n      var wrappedWellKnownSymbolModule = __w_pdfjs_require__(170);\n      var defineProperty = __w_pdfjs_require__(27).f;\n      module.exports = function (NAME) {\n        var Symbol = path.Symbol || (path.Symbol = {});\n        if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {\n          value: wrappedWellKnownSymbolModule.f(NAME)\n        });\n      };\n\n      /***/\n    }, /* 172 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var defineWellKnownSymbol = __w_pdfjs_require__(171);\n      defineWellKnownSymbol('asyncIterator');\n\n      /***/\n    }, /* 173 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var $ = __w_pdfjs_require__(10);\n      var DESCRIPTORS = __w_pdfjs_require__(13);\n      var global = __w_pdfjs_require__(11);\n      var has = __w_pdfjs_require__(23);\n      var isObject = __w_pdfjs_require__(22);\n      var defineProperty = __w_pdfjs_require__(27).f;\n      var copyConstructorProperties = __w_pdfjs_require__(40);\n      var NativeSymbol = global.Symbol;\n      if (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) || NativeSymbol().description !== undefined)) {\n        var EmptyStringDescriptionStore = {};\n        var SymbolWrapper = function Symbol() {\n          var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);\n          var result = this instanceof SymbolWrapper ? new NativeSymbol(description) : description === undefined ? NativeSymbol() : NativeSymbol(description);\n          if (description === '') EmptyStringDescriptionStore[result] = true;\n          return result;\n        };\n        copyConstructorProperties(SymbolWrapper, NativeSymbol);\n        var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;\n        symbolPrototype.constructor = SymbolWrapper;\n        var symbolToString = symbolPrototype.toString;\n        var native = String(NativeSymbol('test')) == 'Symbol(test)';\n        var regexp = /^Symbol\\((.*)\\)[^)]+$/;\n        defineProperty(symbolPrototype, 'description', {\n          configurable: true,\n          get: function description() {\n            var symbol = isObject(this) ? this.valueOf() : this;\n            var string = symbolToString.call(symbol);\n            if (has(EmptyStringDescriptionStore, symbol)) return '';\n            var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');\n            return desc === '' ? undefined : desc;\n          }\n        });\n        $({\n          global: true,\n          forced: true\n        }, {\n          Symbol: SymbolWrapper\n        });\n      }\n\n      /***/\n    }, /* 174 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var defineWellKnownSymbol = __w_pdfjs_require__(171);\n      defineWellKnownSymbol('hasInstance');\n\n      /***/\n    }, /* 175 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var defineWellKnownSymbol = __w_pdfjs_require__(171);\n      defineWellKnownSymbol('isConcatSpreadable');\n\n      /***/\n    }, /* 176 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var defineWellKnownSymbol = __w_pdfjs_require__(171);\n      defineWellKnownSymbol('iterator');\n\n      /***/\n    }, /* 177 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var defineWellKnownSymbol = __w_pdfjs_require__(171);\n      defineWellKnownSymbol('match');\n\n      /***/\n    }, /* 178 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var defineWellKnownSymbol = __w_pdfjs_require__(171);\n      defineWellKnownSymbol('matchAll');\n\n      /***/\n    }, /* 179 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var defineWellKnownSymbol = __w_pdfjs_require__(171);\n      defineWellKnownSymbol('replace');\n\n      /***/\n    }, /* 180 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var defineWellKnownSymbol = __w_pdfjs_require__(171);\n      defineWellKnownSymbol('search');\n\n      /***/\n    }, /* 181 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var defineWellKnownSymbol = __w_pdfjs_require__(171);\n      defineWellKnownSymbol('species');\n\n      /***/\n    }, /* 182 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var defineWellKnownSymbol = __w_pdfjs_require__(171);\n      defineWellKnownSymbol('split');\n\n      /***/\n    }, /* 183 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var defineWellKnownSymbol = __w_pdfjs_require__(171);\n      defineWellKnownSymbol('toPrimitive');\n\n      /***/\n    }, /* 184 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var defineWellKnownSymbol = __w_pdfjs_require__(171);\n      defineWellKnownSymbol('toStringTag');\n\n      /***/\n    }, /* 185 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var defineWellKnownSymbol = __w_pdfjs_require__(171);\n      defineWellKnownSymbol('unscopables');\n\n      /***/\n    }, /* 186 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var setToStringTag = __w_pdfjs_require__(85);\n      setToStringTag(Math, 'Math', true);\n\n      /***/\n    }, /* 187 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var global = __w_pdfjs_require__(11);\n      var setToStringTag = __w_pdfjs_require__(85);\n      setToStringTag(global.JSON, 'JSON', true);\n\n      /***/\n    }, /* 188 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      __w_pdfjs_require__(189);\n      var entryUnbind = __w_pdfjs_require__(61);\n      module.exports = entryUnbind('String', 'padStart');\n\n      /***/\n    }, /* 189 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var $ = __w_pdfjs_require__(10);\n      var $padStart = __w_pdfjs_require__(190).start;\n      var WEBKIT_BUG = __w_pdfjs_require__(192);\n      $({\n        target: 'String',\n        proto: true,\n        forced: WEBKIT_BUG\n      }, {\n        padStart: function padStart(maxLength) {\n          return $padStart(this, maxLength, arguments.length > 1 ? arguments[1] : undefined);\n        }\n      });\n\n      /***/\n    }, /* 190 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var toLength = __w_pdfjs_require__(47);\n      var repeat = __w_pdfjs_require__(191);\n      var requireObjectCoercible = __w_pdfjs_require__(20);\n      var ceil = Math.ceil;\n      var createMethod = function (IS_END) {\n        return function ($this, maxLength, fillString) {\n          var S = String(requireObjectCoercible($this));\n          var stringLength = S.length;\n          var fillStr = fillString === undefined ? ' ' : String(fillString);\n          var intMaxLength = toLength(maxLength);\n          var fillLen, stringFiller;\n          if (intMaxLength <= stringLength || fillStr == '') return S;\n          fillLen = intMaxLength - stringLength;\n          stringFiller = repeat.call(fillStr, ceil(fillLen / fillStr.length));\n          if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n          return IS_END ? S + stringFiller : stringFiller + S;\n        };\n      };\n      module.exports = {\n        start: createMethod(false),\n        end: createMethod(true)\n      };\n\n      /***/\n    }, /* 191 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var toInteger = __w_pdfjs_require__(48);\n      var requireObjectCoercible = __w_pdfjs_require__(20);\n      module.exports = ''.repeat || function repeat(count) {\n        var str = String(requireObjectCoercible(this));\n        var result = '';\n        var n = toInteger(count);\n        if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');\n        for (; n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n        return result;\n      };\n\n      /***/\n    }, /* 192 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var userAgent = __w_pdfjs_require__(127);\n      module.exports = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n\n      /***/\n    }, /* 193 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      __w_pdfjs_require__(194);\n      var entryUnbind = __w_pdfjs_require__(61);\n      module.exports = entryUnbind('String', 'padEnd');\n\n      /***/\n    }, /* 194 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var $ = __w_pdfjs_require__(10);\n      var $padEnd = __w_pdfjs_require__(190).end;\n      var WEBKIT_BUG = __w_pdfjs_require__(192);\n      $({\n        target: 'String',\n        proto: true,\n        forced: WEBKIT_BUG\n      }, {\n        padEnd: function padEnd(maxLength) {\n          return $padEnd(this, maxLength, arguments.length > 1 ? arguments[1] : undefined);\n        }\n      });\n\n      /***/\n    }, /* 195 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      __w_pdfjs_require__(196);\n      var path = __w_pdfjs_require__(43);\n      module.exports = path.Object.values;\n\n      /***/\n    }, /* 196 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var $ = __w_pdfjs_require__(10);\n      var $values = __w_pdfjs_require__(197).values;\n      $({\n        target: 'Object',\n        stat: true\n      }, {\n        values: function values(O) {\n          return $values(O);\n        }\n      });\n\n      /***/\n    }, /* 197 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      var DESCRIPTORS = __w_pdfjs_require__(13);\n      var objectKeys = __w_pdfjs_require__(73);\n      var toIndexedObject = __w_pdfjs_require__(17);\n      var propertyIsEnumerable = __w_pdfjs_require__(15).f;\n      var createMethod = function (TO_ENTRIES) {\n        return function (it) {\n          var O = toIndexedObject(it);\n          var keys = objectKeys(O);\n          var length = keys.length;\n          var i = 0;\n          var result = [];\n          var key;\n          while (length > i) {\n            key = keys[i++];\n            if (!DESCRIPTORS || propertyIsEnumerable.call(O, key)) {\n              result.push(TO_ENTRIES ? [key, O[key]] : O[key]);\n            }\n          }\n          return result;\n        };\n      };\n      module.exports = {\n        entries: createMethod(true),\n        values: createMethod(false)\n      };\n\n      /***/\n    }, /* 198 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getDocument = getDocument;\n      exports.setPDFNetworkStreamFactory = setPDFNetworkStreamFactory;\n      exports.build = exports.version = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFWorker = exports.PDFDataRangeTransport = exports.LoopbackPort = void 0;\n      var _regenerator = _interopRequireDefault(__w_pdfjs_require__(2));\n      var _util = __w_pdfjs_require__(5);\n      var _display_utils = __w_pdfjs_require__(1);\n      var _font_loader = __w_pdfjs_require__(199);\n      var _api_compatibility = __w_pdfjs_require__(200);\n      var _canvas = __w_pdfjs_require__(201);\n      var _worker_options = __w_pdfjs_require__(203);\n      var _is_node = __w_pdfjs_require__(7);\n      var _message_handler = __w_pdfjs_require__(204);\n      var _metadata = __w_pdfjs_require__(205);\n      var _transport_stream = __w_pdfjs_require__(207);\n      var _webgl = __w_pdfjs_require__(208);\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n      function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n        if (info.done) {\n          resolve(value);\n        } else {\n          Promise.resolve(value).then(_next, _throw);\n        }\n      }\n      function _asyncToGenerator(fn) {\n        return function () {\n          var self = this,\n            args = arguments;\n          return new Promise(function (resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n          });\n        };\n      }\n      function _toConsumableArray(arr) {\n        return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n      }\n      function _nonIterableSpread() {\n        throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n      }\n      function _iterableToArray(iter) {\n        if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n      }\n      function _arrayWithoutHoles(arr) {\n        if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n      }\n      function _createForOfIteratorHelper(o, allowArrayLike) {\n        var it;\n        if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n          if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n            if (it) o = it;\n            var i = 0;\n            var F = function F() {};\n            return {\n              s: F,\n              n: function n() {\n                if (i >= o.length) return {\n                  done: true\n                };\n                return {\n                  done: false,\n                  value: o[i++]\n                };\n              },\n              e: function e(_e2) {\n                throw _e2;\n              },\n              f: F\n            };\n          }\n          throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n        }\n        var normalCompletion = true,\n          didErr = false,\n          err;\n        return {\n          s: function s() {\n            it = o[Symbol.iterator]();\n          },\n          n: function n() {\n            var step = it.next();\n            normalCompletion = step.done;\n            return step;\n          },\n          e: function e(_e3) {\n            didErr = true;\n            err = _e3;\n          },\n          f: function f() {\n            try {\n              if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n            } finally {\n              if (didErr) throw err;\n            }\n          }\n        };\n      }\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n      function _defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n      function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        return Constructor;\n      }\n      function _slicedToArray(arr, i) {\n        return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n      }\n      function _nonIterableRest() {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n      }\n      function _unsupportedIterableToArray(o, minLen) {\n        if (!o) return;\n        if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n        var n = Object.prototype.toString.call(o).slice(8, -1);\n        if (n === \"Object\" && o.constructor) n = o.constructor.name;\n        if (n === \"Map\" || n === \"Set\") return Array.from(o);\n        if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n      }\n      function _arrayLikeToArray(arr, len) {\n        if (len == null || len > arr.length) len = arr.length;\n        for (var i = 0, arr2 = new Array(len); i < len; i++) {\n          arr2[i] = arr[i];\n        }\n        return arr2;\n      }\n      function _iterableToArrayLimit(arr, i) {\n        if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n        var _arr = [];\n        var _n = true;\n        var _d = false;\n        var _e = undefined;\n        try {\n          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n          }\n        } catch (err) {\n          _d = true;\n          _e = err;\n        } finally {\n          try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n          } finally {\n            if (_d) throw _e;\n          }\n        }\n        return _arr;\n      }\n      function _arrayWithHoles(arr) {\n        if (Array.isArray(arr)) return arr;\n      }\n      function _typeof(obj) {\n        \"@babel/helpers - typeof\";\n\n        if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n          _typeof = function _typeof(obj) {\n            return typeof obj;\n          };\n        } else {\n          _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n          };\n        }\n        return _typeof(obj);\n      }\n      var DEFAULT_RANGE_CHUNK_SIZE = 65536;\n      var RENDERING_CANCELLED_TIMEOUT = 100;\n      var createPDFNetworkStream;\n      function setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n        createPDFNetworkStream = pdfNetworkStreamFactory;\n      }\n      function getDocument(src) {\n        var task = new PDFDocumentLoadingTask();\n        var source;\n        if (typeof src === \"string\") {\n          source = {\n            url: src\n          };\n        } else if ((0, _util.isArrayBuffer)(src)) {\n          source = {\n            data: src\n          };\n        } else if (src instanceof PDFDataRangeTransport) {\n          source = {\n            range: src\n          };\n        } else {\n          if (_typeof(src) !== \"object\") {\n            throw new Error(\"Invalid parameter in getDocument, \" + \"need either Uint8Array, string or a parameter object\");\n          }\n          if (!src.url && !src.data && !src.range) {\n            throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\n          }\n          source = src;\n        }\n        var params = Object.create(null);\n        var rangeTransport = null,\n          worker = null;\n        for (var key in source) {\n          if (key === \"url\" && typeof window !== \"undefined\") {\n            params[key] = new URL(source[key], window.location).href;\n            continue;\n          } else if (key === \"range\") {\n            rangeTransport = source[key];\n            continue;\n          } else if (key === \"worker\") {\n            worker = source[key];\n            continue;\n          } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n            var pdfBytes = source[key];\n            if (typeof pdfBytes === \"string\") {\n              params[key] = (0, _util.stringToBytes)(pdfBytes);\n            } else if (_typeof(pdfBytes) === \"object\" && pdfBytes !== null && !isNaN(pdfBytes.length)) {\n              params[key] = new Uint8Array(pdfBytes);\n            } else if ((0, _util.isArrayBuffer)(pdfBytes)) {\n              params[key] = new Uint8Array(pdfBytes);\n            } else {\n              throw new Error(\"Invalid PDF binary data: either typed array, \" + \"string or array-like object is expected in the \" + \"data property.\");\n            }\n            continue;\n          }\n          params[key] = source[key];\n        }\n        params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n        params.CMapReaderFactory = params.CMapReaderFactory || _display_utils.DOMCMapReaderFactory;\n        params.ignoreErrors = params.stopAtErrors !== true;\n        params.fontExtraProperties = params.fontExtraProperties === true;\n        params.pdfBug = params.pdfBug === true;\n        if (!Number.isInteger(params.maxImageSize)) {\n          params.maxImageSize = -1;\n        }\n        if (typeof params.isEvalSupported !== \"boolean\") {\n          params.isEvalSupported = true;\n        }\n        if (typeof params.disableFontFace !== \"boolean\") {\n          params.disableFontFace = _api_compatibility.apiCompatibilityParams.disableFontFace || false;\n        }\n        if (typeof params.disableRange !== \"boolean\") {\n          params.disableRange = false;\n        }\n        if (typeof params.disableStream !== \"boolean\") {\n          params.disableStream = false;\n        }\n        if (typeof params.disableAutoFetch !== \"boolean\") {\n          params.disableAutoFetch = false;\n        }\n        (0, _util.setVerbosityLevel)(params.verbosity);\n        if (!worker) {\n          var workerParams = {\n            verbosity: params.verbosity,\n            port: _worker_options.GlobalWorkerOptions.workerPort\n          };\n          worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\n          task._worker = worker;\n        }\n        var docId = task.docId;\n        worker.promise.then(function () {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n          var workerIdPromise = _fetchDocument(worker, params, rangeTransport, docId);\n          var networkStreamPromise = new Promise(function (resolve) {\n            var networkStream;\n            if (rangeTransport) {\n              networkStream = new _transport_stream.PDFDataTransportStream({\n                length: params.length,\n                initialData: params.initialData,\n                progressiveDone: params.progressiveDone,\n                disableRange: params.disableRange,\n                disableStream: params.disableStream\n              }, rangeTransport);\n            } else if (!params.data) {\n              networkStream = createPDFNetworkStream({\n                url: params.url,\n                length: params.length,\n                httpHeaders: params.httpHeaders,\n                withCredentials: params.withCredentials,\n                rangeChunkSize: params.rangeChunkSize,\n                disableRange: params.disableRange,\n                disableStream: params.disableStream\n              });\n            }\n            resolve(networkStream);\n          });\n          return Promise.all([workerIdPromise, networkStreamPromise]).then(function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n              workerId = _ref2[0],\n              networkStream = _ref2[1];\n            if (task.destroyed) {\n              throw new Error(\"Loading aborted\");\n            }\n            var messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);\n            messageHandler.postMessageTransfers = worker.postMessageTransfers;\n            var transport = new WorkerTransport(messageHandler, task, networkStream, params);\n            task._transport = transport;\n            messageHandler.send(\"Ready\", null);\n          });\n        })[\"catch\"](task._capability.reject);\n        return task;\n      }\n      function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n        if (worker.destroyed) {\n          return Promise.reject(new Error(\"Worker was destroyed\"));\n        }\n        if (pdfDataRangeTransport) {\n          source.length = pdfDataRangeTransport.length;\n          source.initialData = pdfDataRangeTransport.initialData;\n          source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n        }\n        return worker.messageHandler.sendWithPromise(\"GetDocRequest\", {\n          docId: docId,\n          apiVersion: '2.5.207',\n          source: {\n            data: source.data,\n            url: source.url,\n            password: source.password,\n            disableAutoFetch: source.disableAutoFetch,\n            rangeChunkSize: source.rangeChunkSize,\n            length: source.length\n          },\n          maxImageSize: source.maxImageSize,\n          disableFontFace: source.disableFontFace,\n          postMessageTransfers: worker.postMessageTransfers,\n          docBaseUrl: source.docBaseUrl,\n          ignoreErrors: source.ignoreErrors,\n          isEvalSupported: source.isEvalSupported,\n          fontExtraProperties: source.fontExtraProperties\n        }).then(function (workerId) {\n          if (worker.destroyed) {\n            throw new Error(\"Worker was destroyed\");\n          }\n          return workerId;\n        });\n      }\n      var PDFDocumentLoadingTask = function PDFDocumentLoadingTaskClosure() {\n        var nextDocumentId = 0;\n        var PDFDocumentLoadingTask = /*#__PURE__*/function () {\n          function PDFDocumentLoadingTask() {\n            _classCallCheck(this, PDFDocumentLoadingTask);\n            this._capability = (0, _util.createPromiseCapability)();\n            this._transport = null;\n            this._worker = null;\n            this.docId = \"d\" + nextDocumentId++;\n            this.destroyed = false;\n            this.onPassword = null;\n            this.onProgress = null;\n            this.onUnsupportedFeature = null;\n          }\n          _createClass(PDFDocumentLoadingTask, [{\n            key: \"destroy\",\n            value: function destroy() {\n              var _this = this;\n              this.destroyed = true;\n              var transportDestroyed = !this._transport ? Promise.resolve() : this._transport.destroy();\n              return transportDestroyed.then(function () {\n                _this._transport = null;\n                if (_this._worker) {\n                  _this._worker.destroy();\n                  _this._worker = null;\n                }\n              });\n            }\n          }, {\n            key: \"promise\",\n            get: function get() {\n              return this._capability.promise;\n            }\n          }]);\n          return PDFDocumentLoadingTask;\n        }();\n        return PDFDocumentLoadingTask;\n      }();\n      var PDFDataRangeTransport = /*#__PURE__*/function () {\n        function PDFDataRangeTransport(length, initialData) {\n          var progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          _classCallCheck(this, PDFDataRangeTransport);\n          this.length = length;\n          this.initialData = initialData;\n          this.progressiveDone = progressiveDone;\n          this._rangeListeners = [];\n          this._progressListeners = [];\n          this._progressiveReadListeners = [];\n          this._progressiveDoneListeners = [];\n          this._readyCapability = (0, _util.createPromiseCapability)();\n        }\n        _createClass(PDFDataRangeTransport, [{\n          key: \"addRangeListener\",\n          value: function addRangeListener(listener) {\n            this._rangeListeners.push(listener);\n          }\n        }, {\n          key: \"addProgressListener\",\n          value: function addProgressListener(listener) {\n            this._progressListeners.push(listener);\n          }\n        }, {\n          key: \"addProgressiveReadListener\",\n          value: function addProgressiveReadListener(listener) {\n            this._progressiveReadListeners.push(listener);\n          }\n        }, {\n          key: \"addProgressiveDoneListener\",\n          value: function addProgressiveDoneListener(listener) {\n            this._progressiveDoneListeners.push(listener);\n          }\n        }, {\n          key: \"onDataRange\",\n          value: function onDataRange(begin, chunk) {\n            var _iterator = _createForOfIteratorHelper(this._rangeListeners),\n              _step;\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var listener = _step.value;\n                listener(begin, chunk);\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n          }\n        }, {\n          key: \"onDataProgress\",\n          value: function onDataProgress(loaded, total) {\n            var _this2 = this;\n            this._readyCapability.promise.then(function () {\n              var _iterator2 = _createForOfIteratorHelper(_this2._progressListeners),\n                _step2;\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  var listener = _step2.value;\n                  listener(loaded, total);\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n            });\n          }\n        }, {\n          key: \"onDataProgressiveRead\",\n          value: function onDataProgressiveRead(chunk) {\n            var _this3 = this;\n            this._readyCapability.promise.then(function () {\n              var _iterator3 = _createForOfIteratorHelper(_this3._progressiveReadListeners),\n                _step3;\n              try {\n                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  var listener = _step3.value;\n                  listener(chunk);\n                }\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n            });\n          }\n        }, {\n          key: \"onDataProgressiveDone\",\n          value: function onDataProgressiveDone() {\n            var _this4 = this;\n            this._readyCapability.promise.then(function () {\n              var _iterator4 = _createForOfIteratorHelper(_this4._progressiveDoneListeners),\n                _step4;\n              try {\n                for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                  var listener = _step4.value;\n                  listener();\n                }\n              } catch (err) {\n                _iterator4.e(err);\n              } finally {\n                _iterator4.f();\n              }\n            });\n          }\n        }, {\n          key: \"transportReady\",\n          value: function transportReady() {\n            this._readyCapability.resolve();\n          }\n        }, {\n          key: \"requestDataRange\",\n          value: function requestDataRange(begin, end) {\n            (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n          }\n        }, {\n          key: \"abort\",\n          value: function abort() {}\n        }]);\n        return PDFDataRangeTransport;\n      }();\n      exports.PDFDataRangeTransport = PDFDataRangeTransport;\n      var PDFDocumentProxy = /*#__PURE__*/function () {\n        function PDFDocumentProxy(pdfInfo, transport) {\n          _classCallCheck(this, PDFDocumentProxy);\n          this._pdfInfo = pdfInfo;\n          this._transport = transport;\n        }\n        _createClass(PDFDocumentProxy, [{\n          key: \"getPage\",\n          value: function getPage(pageNumber) {\n            return this._transport.getPage(pageNumber);\n          }\n        }, {\n          key: \"getPageIndex\",\n          value: function getPageIndex(ref) {\n            return this._transport.getPageIndex(ref);\n          }\n        }, {\n          key: \"getDestinations\",\n          value: function getDestinations() {\n            return this._transport.getDestinations();\n          }\n        }, {\n          key: \"getDestination\",\n          value: function getDestination(id) {\n            return this._transport.getDestination(id);\n          }\n        }, {\n          key: \"getPageLabels\",\n          value: function getPageLabels() {\n            return this._transport.getPageLabels();\n          }\n        }, {\n          key: \"getPageLayout\",\n          value: function getPageLayout() {\n            return this._transport.getPageLayout();\n          }\n        }, {\n          key: \"getPageMode\",\n          value: function getPageMode() {\n            return this._transport.getPageMode();\n          }\n        }, {\n          key: \"getViewerPreferences\",\n          value: function getViewerPreferences() {\n            return this._transport.getViewerPreferences();\n          }\n        }, {\n          key: \"getOpenAction\",\n          value: function getOpenAction() {\n            return this._transport.getOpenAction();\n          }\n        }, {\n          key: \"getOpenActionDestination\",\n          value: function getOpenActionDestination() {\n            (0, _display_utils.deprecated)(\"getOpenActionDestination, use getOpenAction instead.\");\n            return this.getOpenAction().then(function (openAction) {\n              return openAction && openAction.dest ? openAction.dest : null;\n            });\n          }\n        }, {\n          key: \"getAttachments\",\n          value: function getAttachments() {\n            return this._transport.getAttachments();\n          }\n        }, {\n          key: \"getJavaScript\",\n          value: function getJavaScript() {\n            return this._transport.getJavaScript();\n          }\n        }, {\n          key: \"getOutline\",\n          value: function getOutline() {\n            return this._transport.getOutline();\n          }\n        }, {\n          key: \"getPermissions\",\n          value: function getPermissions() {\n            return this._transport.getPermissions();\n          }\n        }, {\n          key: \"getMetadata\",\n          value: function getMetadata() {\n            return this._transport.getMetadata();\n          }\n        }, {\n          key: \"getData\",\n          value: function getData() {\n            return this._transport.getData();\n          }\n        }, {\n          key: \"getDownloadInfo\",\n          value: function getDownloadInfo() {\n            return this._transport.downloadInfoCapability.promise;\n          }\n        }, {\n          key: \"getStats\",\n          value: function getStats() {\n            return this._transport.getStats();\n          }\n        }, {\n          key: \"cleanup\",\n          value: function cleanup() {\n            return this._transport.startCleanup();\n          }\n        }, {\n          key: \"destroy\",\n          value: function destroy() {\n            return this.loadingTask.destroy();\n          }\n        }, {\n          key: \"numPages\",\n          get: function get() {\n            return this._pdfInfo.numPages;\n          }\n        }, {\n          key: \"fingerprint\",\n          get: function get() {\n            return this._pdfInfo.fingerprint;\n          }\n        }, {\n          key: \"loadingParams\",\n          get: function get() {\n            return this._transport.loadingParams;\n          }\n        }, {\n          key: \"loadingTask\",\n          get: function get() {\n            return this._transport.loadingTask;\n          }\n        }]);\n        return PDFDocumentProxy;\n      }();\n      exports.PDFDocumentProxy = PDFDocumentProxy;\n      var PDFPageProxy = /*#__PURE__*/function () {\n        function PDFPageProxy(pageIndex, pageInfo, transport) {\n          var pdfBug = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n          _classCallCheck(this, PDFPageProxy);\n          this._pageIndex = pageIndex;\n          this._pageInfo = pageInfo;\n          this._transport = transport;\n          this._stats = pdfBug ? new _display_utils.StatTimer() : null;\n          this._pdfBug = pdfBug;\n          this.commonObjs = transport.commonObjs;\n          this.objs = new PDFObjects();\n          this.cleanupAfterRender = false;\n          this.pendingCleanup = false;\n          this.intentStates = Object.create(null);\n          this.destroyed = false;\n        }\n        _createClass(PDFPageProxy, [{\n          key: \"getViewport\",\n          value: function getViewport() {\n            var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n              scale = _ref3.scale,\n              _ref3$rotation = _ref3.rotation,\n              rotation = _ref3$rotation === void 0 ? this.rotate : _ref3$rotation,\n              _ref3$offsetX = _ref3.offsetX,\n              offsetX = _ref3$offsetX === void 0 ? 0 : _ref3$offsetX,\n              _ref3$offsetY = _ref3.offsetY,\n              offsetY = _ref3$offsetY === void 0 ? 0 : _ref3$offsetY,\n              _ref3$dontFlip = _ref3.dontFlip,\n              dontFlip = _ref3$dontFlip === void 0 ? false : _ref3$dontFlip;\n            return new _display_utils.PageViewport({\n              viewBox: this.view,\n              scale: scale,\n              rotation: rotation,\n              offsetX: offsetX,\n              offsetY: offsetY,\n              dontFlip: dontFlip\n            });\n          }\n        }, {\n          key: \"getAnnotations\",\n          value: function getAnnotations() {\n            var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n              _ref4$intent = _ref4.intent,\n              intent = _ref4$intent === void 0 ? null : _ref4$intent;\n            if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n              this.annotationsPromise = this._transport.getAnnotations(this._pageIndex, intent);\n              this.annotationsIntent = intent;\n            }\n            return this.annotationsPromise;\n          }\n        }, {\n          key: \"render\",\n          value: function render(_ref5) {\n            var _this5 = this;\n            var canvasContext = _ref5.canvasContext,\n              viewport = _ref5.viewport,\n              _ref5$intent = _ref5.intent,\n              intent = _ref5$intent === void 0 ? \"display\" : _ref5$intent,\n              _ref5$enableWebGL = _ref5.enableWebGL,\n              enableWebGL = _ref5$enableWebGL === void 0 ? false : _ref5$enableWebGL,\n              _ref5$renderInteracti = _ref5.renderInteractiveForms,\n              renderInteractiveForms = _ref5$renderInteracti === void 0 ? false : _ref5$renderInteracti,\n              _ref5$transform = _ref5.transform,\n              transform = _ref5$transform === void 0 ? null : _ref5$transform,\n              _ref5$imageLayer = _ref5.imageLayer,\n              imageLayer = _ref5$imageLayer === void 0 ? null : _ref5$imageLayer,\n              _ref5$canvasFactory = _ref5.canvasFactory,\n              canvasFactory = _ref5$canvasFactory === void 0 ? null : _ref5$canvasFactory,\n              _ref5$background = _ref5.background,\n              background = _ref5$background === void 0 ? null : _ref5$background;\n            if (this._stats) {\n              this._stats.time(\"Overall\");\n            }\n            var renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n            this.pendingCleanup = false;\n            if (!this.intentStates[renderingIntent]) {\n              this.intentStates[renderingIntent] = Object.create(null);\n            }\n            var intentState = this.intentStates[renderingIntent];\n            if (intentState.streamReaderCancelTimeout) {\n              clearTimeout(intentState.streamReaderCancelTimeout);\n              intentState.streamReaderCancelTimeout = null;\n            }\n            var canvasFactoryInstance = canvasFactory || new _display_utils.DOMCanvasFactory();\n            var webGLContext = new _webgl.WebGLContext({\n              enable: enableWebGL\n            });\n            if (!intentState.displayReadyCapability) {\n              intentState.displayReadyCapability = (0, _util.createPromiseCapability)();\n              intentState.operatorList = {\n                fnArray: [],\n                argsArray: [],\n                lastChunk: false\n              };\n              if (this._stats) {\n                this._stats.time(\"Page Request\");\n              }\n              this._pumpOperatorList({\n                pageIndex: this._pageIndex,\n                intent: renderingIntent,\n                renderInteractiveForms: renderInteractiveForms === true\n              });\n            }\n            var complete = function complete(error) {\n              var i = intentState.renderTasks.indexOf(internalRenderTask);\n              if (i >= 0) {\n                intentState.renderTasks.splice(i, 1);\n              }\n              if (_this5.cleanupAfterRender || renderingIntent === \"print\") {\n                _this5.pendingCleanup = true;\n              }\n              _this5._tryCleanup();\n              if (error) {\n                internalRenderTask.capability.reject(error);\n                _this5._abortOperatorList({\n                  intentState: intentState,\n                  reason: error\n                });\n              } else {\n                internalRenderTask.capability.resolve();\n              }\n              if (_this5._stats) {\n                _this5._stats.timeEnd(\"Rendering\");\n                _this5._stats.timeEnd(\"Overall\");\n              }\n            };\n            var internalRenderTask = new InternalRenderTask({\n              callback: complete,\n              params: {\n                canvasContext: canvasContext,\n                viewport: viewport,\n                transform: transform,\n                imageLayer: imageLayer,\n                background: background\n              },\n              objs: this.objs,\n              commonObjs: this.commonObjs,\n              operatorList: intentState.operatorList,\n              pageIndex: this._pageIndex,\n              canvasFactory: canvasFactoryInstance,\n              webGLContext: webGLContext,\n              useRequestAnimationFrame: renderingIntent !== \"print\",\n              pdfBug: this._pdfBug\n            });\n            if (!intentState.renderTasks) {\n              intentState.renderTasks = [];\n            }\n            intentState.renderTasks.push(internalRenderTask);\n            var renderTask = internalRenderTask.task;\n            intentState.displayReadyCapability.promise.then(function (transparency) {\n              if (_this5.pendingCleanup) {\n                complete();\n                return;\n              }\n              if (_this5._stats) {\n                _this5._stats.time(\"Rendering\");\n              }\n              internalRenderTask.initializeGraphics(transparency);\n              internalRenderTask.operatorListChanged();\n            })[\"catch\"](complete);\n            return renderTask;\n          }\n        }, {\n          key: \"getOperatorList\",\n          value: function getOperatorList() {\n            function operatorListChanged() {\n              if (intentState.operatorList.lastChunk) {\n                intentState.opListReadCapability.resolve(intentState.operatorList);\n                var i = intentState.renderTasks.indexOf(opListTask);\n                if (i >= 0) {\n                  intentState.renderTasks.splice(i, 1);\n                }\n              }\n            }\n            var renderingIntent = \"oplist\";\n            if (!this.intentStates[renderingIntent]) {\n              this.intentStates[renderingIntent] = Object.create(null);\n            }\n            var intentState = this.intentStates[renderingIntent];\n            var opListTask;\n            if (!intentState.opListReadCapability) {\n              opListTask = {};\n              opListTask.operatorListChanged = operatorListChanged;\n              intentState.opListReadCapability = (0, _util.createPromiseCapability)();\n              intentState.renderTasks = [];\n              intentState.renderTasks.push(opListTask);\n              intentState.operatorList = {\n                fnArray: [],\n                argsArray: [],\n                lastChunk: false\n              };\n              if (this._stats) {\n                this._stats.time(\"Page Request\");\n              }\n              this._pumpOperatorList({\n                pageIndex: this._pageIndex,\n                intent: renderingIntent\n              });\n            }\n            return intentState.opListReadCapability.promise;\n          }\n        }, {\n          key: \"streamTextContent\",\n          value: function streamTextContent() {\n            var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n              _ref6$normalizeWhites = _ref6.normalizeWhitespace,\n              normalizeWhitespace = _ref6$normalizeWhites === void 0 ? false : _ref6$normalizeWhites,\n              _ref6$disableCombineT = _ref6.disableCombineTextItems,\n              disableCombineTextItems = _ref6$disableCombineT === void 0 ? false : _ref6$disableCombineT;\n            var TEXT_CONTENT_CHUNK_SIZE = 100;\n            return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n              pageIndex: this._pageIndex,\n              normalizeWhitespace: normalizeWhitespace === true,\n              combineTextItems: disableCombineTextItems !== true\n            }, {\n              highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n              size: function size(textContent) {\n                return textContent.items.length;\n              }\n            });\n          }\n        }, {\n          key: \"getTextContent\",\n          value: function getTextContent() {\n            var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            var readableStream = this.streamTextContent(params);\n            return new Promise(function (resolve, reject) {\n              function pump() {\n                reader.read().then(function (_ref7) {\n                  var _textContent$items;\n                  var value = _ref7.value,\n                    done = _ref7.done;\n                  if (done) {\n                    resolve(textContent);\n                    return;\n                  }\n                  Object.assign(textContent.styles, value.styles);\n                  (_textContent$items = textContent.items).push.apply(_textContent$items, _toConsumableArray(value.items));\n                  pump();\n                }, reject);\n              }\n              var reader = readableStream.getReader();\n              var textContent = {\n                items: [],\n                styles: Object.create(null)\n              };\n              pump();\n            });\n          }\n        }, {\n          key: \"_destroy\",\n          value: function _destroy() {\n            var _this6 = this;\n            this.destroyed = true;\n            this._transport.pageCache[this._pageIndex] = null;\n            var waitOn = [];\n            Object.keys(this.intentStates).forEach(function (intent) {\n              var intentState = _this6.intentStates[intent];\n              _this6._abortOperatorList({\n                intentState: intentState,\n                reason: new Error(\"Page was destroyed.\"),\n                force: true\n              });\n              if (intent === \"oplist\") {\n                return;\n              }\n              intentState.renderTasks.forEach(function (renderTask) {\n                var renderCompleted = renderTask.capability.promise[\"catch\"](function () {});\n                waitOn.push(renderCompleted);\n                renderTask.cancel();\n              });\n            });\n            this.objs.clear();\n            this.annotationsPromise = null;\n            this.pendingCleanup = false;\n            return Promise.all(waitOn);\n          }\n        }, {\n          key: \"cleanup\",\n          value: function cleanup() {\n            var resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            this.pendingCleanup = true;\n            return this._tryCleanup(resetStats);\n          }\n        }, {\n          key: \"_tryCleanup\",\n          value: function _tryCleanup() {\n            var _this7 = this;\n            var resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            if (!this.pendingCleanup || Object.keys(this.intentStates).some(function (intent) {\n              var intentState = _this7.intentStates[intent];\n              return intentState.renderTasks.length !== 0 || !intentState.operatorList.lastChunk;\n            })) {\n              return false;\n            }\n            Object.keys(this.intentStates).forEach(function (intent) {\n              delete _this7.intentStates[intent];\n            });\n            this.objs.clear();\n            this.annotationsPromise = null;\n            if (resetStats && this._stats) {\n              this._stats = new _display_utils.StatTimer();\n            }\n            this.pendingCleanup = false;\n            return true;\n          }\n        }, {\n          key: \"_startRenderPage\",\n          value: function _startRenderPage(transparency, intent) {\n            var intentState = this.intentStates[intent];\n            if (!intentState) {\n              return;\n            }\n            if (this._stats) {\n              this._stats.timeEnd(\"Page Request\");\n            }\n            if (intentState.displayReadyCapability) {\n              intentState.displayReadyCapability.resolve(transparency);\n            }\n          }\n        }, {\n          key: \"_renderPageChunk\",\n          value: function _renderPageChunk(operatorListChunk, intentState) {\n            for (var i = 0, ii = operatorListChunk.length; i < ii; i++) {\n              intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n              intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n            }\n            intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n            for (var _i2 = 0; _i2 < intentState.renderTasks.length; _i2++) {\n              intentState.renderTasks[_i2].operatorListChanged();\n            }\n            if (operatorListChunk.lastChunk) {\n              this._tryCleanup();\n            }\n          }\n        }, {\n          key: \"_pumpOperatorList\",\n          value: function _pumpOperatorList(args) {\n            var _this8 = this;\n            (0, _util.assert)(args.intent, 'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.');\n            var readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", args);\n            var reader = readableStream.getReader();\n            var intentState = this.intentStates[args.intent];\n            intentState.streamReader = reader;\n            var pump = function pump() {\n              reader.read().then(function (_ref8) {\n                var value = _ref8.value,\n                  done = _ref8.done;\n                if (done) {\n                  intentState.streamReader = null;\n                  return;\n                }\n                if (_this8._transport.destroyed) {\n                  return;\n                }\n                _this8._renderPageChunk(value, intentState);\n                pump();\n              }, function (reason) {\n                intentState.streamReader = null;\n                if (_this8._transport.destroyed) {\n                  return;\n                }\n                if (intentState.operatorList) {\n                  intentState.operatorList.lastChunk = true;\n                  for (var i = 0; i < intentState.renderTasks.length; i++) {\n                    intentState.renderTasks[i].operatorListChanged();\n                  }\n                  _this8._tryCleanup();\n                }\n                if (intentState.displayReadyCapability) {\n                  intentState.displayReadyCapability.reject(reason);\n                } else if (intentState.opListReadCapability) {\n                  intentState.opListReadCapability.reject(reason);\n                } else {\n                  throw reason;\n                }\n              });\n            };\n            pump();\n          }\n        }, {\n          key: \"_abortOperatorList\",\n          value: function _abortOperatorList(_ref9) {\n            var _this9 = this;\n            var intentState = _ref9.intentState,\n              reason = _ref9.reason,\n              _ref9$force = _ref9.force,\n              force = _ref9$force === void 0 ? false : _ref9$force;\n            (0, _util.assert)(reason instanceof Error || _typeof(reason) === \"object\" && reason !== null, 'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.');\n            if (!intentState.streamReader) {\n              return;\n            }\n            if (!force) {\n              if (intentState.renderTasks.length !== 0) {\n                return;\n              }\n              if (reason instanceof _display_utils.RenderingCancelledException) {\n                intentState.streamReaderCancelTimeout = setTimeout(function () {\n                  _this9._abortOperatorList({\n                    intentState: intentState,\n                    reason: reason,\n                    force: true\n                  });\n                  intentState.streamReaderCancelTimeout = null;\n                }, RENDERING_CANCELLED_TIMEOUT);\n                return;\n              }\n            }\n            intentState.streamReader.cancel(new _util.AbortException(reason && reason.message));\n            intentState.streamReader = null;\n            if (this._transport.destroyed) {\n              return;\n            }\n            Object.keys(this.intentStates).some(function (intent) {\n              if (_this9.intentStates[intent] === intentState) {\n                delete _this9.intentStates[intent];\n                return true;\n              }\n              return false;\n            });\n            this.cleanup();\n          }\n        }, {\n          key: \"pageNumber\",\n          get: function get() {\n            return this._pageIndex + 1;\n          }\n        }, {\n          key: \"rotate\",\n          get: function get() {\n            return this._pageInfo.rotate;\n          }\n        }, {\n          key: \"ref\",\n          get: function get() {\n            return this._pageInfo.ref;\n          }\n        }, {\n          key: \"userUnit\",\n          get: function get() {\n            return this._pageInfo.userUnit;\n          }\n        }, {\n          key: \"view\",\n          get: function get() {\n            return this._pageInfo.view;\n          }\n        }, {\n          key: \"stats\",\n          get: function get() {\n            return this._stats;\n          }\n        }]);\n        return PDFPageProxy;\n      }();\n      exports.PDFPageProxy = PDFPageProxy;\n      var LoopbackPort = /*#__PURE__*/function () {\n        function LoopbackPort() {\n          var defer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n          _classCallCheck(this, LoopbackPort);\n          this._listeners = [];\n          this._defer = defer;\n          this._deferred = Promise.resolve(undefined);\n        }\n        _createClass(LoopbackPort, [{\n          key: \"postMessage\",\n          value: function postMessage(obj, transfers) {\n            var _this10 = this;\n            function cloneValue(value) {\n              if (_typeof(value) !== \"object\" || value === null) {\n                return value;\n              }\n              if (cloned.has(value)) {\n                return cloned.get(value);\n              }\n              var buffer, result;\n              if ((buffer = value.buffer) && (0, _util.isArrayBuffer)(buffer)) {\n                var transferable = transfers && transfers.includes(buffer);\n                if (transferable) {\n                  result = new value.constructor(buffer, value.byteOffset, value.byteLength);\n                } else {\n                  result = new value.constructor(value);\n                }\n                cloned.set(value, result);\n                return result;\n              }\n              result = Array.isArray(value) ? [] : {};\n              cloned.set(value, result);\n              for (var i in value) {\n                var desc = void 0,\n                  p = value;\n                while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n                  p = Object.getPrototypeOf(p);\n                }\n                if (typeof desc.value === \"undefined\") {\n                  continue;\n                }\n                if (typeof desc.value === \"function\") {\n                  if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n                    throw new Error(\"LoopbackPort.postMessage - cannot clone: \".concat(value[i]));\n                  }\n                  continue;\n                }\n                result[i] = cloneValue(desc.value);\n              }\n              return result;\n            }\n            if (!this._defer) {\n              this._listeners.forEach(function (listener) {\n                listener.call(_this10, {\n                  data: obj\n                });\n              });\n              return;\n            }\n            var cloned = new WeakMap();\n            var e = {\n              data: cloneValue(obj)\n            };\n            this._deferred.then(function () {\n              _this10._listeners.forEach(function (listener) {\n                listener.call(_this10, e);\n              });\n            });\n          }\n        }, {\n          key: \"addEventListener\",\n          value: function addEventListener(name, listener) {\n            this._listeners.push(listener);\n          }\n        }, {\n          key: \"removeEventListener\",\n          value: function removeEventListener(name, listener) {\n            var i = this._listeners.indexOf(listener);\n            this._listeners.splice(i, 1);\n          }\n        }, {\n          key: \"terminate\",\n          value: function terminate() {\n            this._listeners.length = 0;\n          }\n        }]);\n        return LoopbackPort;\n      }();\n      exports.LoopbackPort = LoopbackPort;\n      var PDFWorker = function PDFWorkerClosure() {\n        var pdfWorkerPorts = new WeakMap();\n        var isWorkerDisabled = false;\n        var fallbackWorkerSrc;\n        var nextFakeWorkerId = 0;\n        var fakeWorkerCapability;\n        if (_is_node.isNodeJS && typeof require === \"function\") {\n          isWorkerDisabled = true;\n          fallbackWorkerSrc = \"./pdf.worker.js\";\n        } else if ((typeof document === \"undefined\" ? \"undefined\" : _typeof(document)) === \"object\" && \"currentScript\" in document) {\n          var pdfjsFilePath = document.currentScript && document.currentScript.src;\n          if (pdfjsFilePath) {\n            fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\n          }\n        }\n        function _getWorkerSrc() {\n          if (_worker_options.GlobalWorkerOptions.workerSrc) {\n            return _worker_options.GlobalWorkerOptions.workerSrc;\n          }\n          if (typeof fallbackWorkerSrc !== \"undefined\") {\n            if (!_is_node.isNodeJS) {\n              (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.');\n            }\n            return fallbackWorkerSrc;\n          }\n          throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n        }\n        function getMainThreadWorkerMessageHandler() {\n          var mainWorkerMessageHandler;\n          try {\n            mainWorkerMessageHandler = globalThis.pdfjsWorker && globalThis.pdfjsWorker.WorkerMessageHandler;\n          } catch (ex) {}\n          return mainWorkerMessageHandler || null;\n        }\n        function setupFakeWorkerGlobal() {\n          if (fakeWorkerCapability) {\n            return fakeWorkerCapability.promise;\n          }\n          fakeWorkerCapability = (0, _util.createPromiseCapability)();\n          var loader = /*#__PURE__*/function () {\n            var _ref10 = _asyncToGenerator( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n              var mainWorkerMessageHandler, worker;\n              return _regenerator[\"default\"].wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n                      if (!mainWorkerMessageHandler) {\n                        _context.next = 3;\n                        break;\n                      }\n                      return _context.abrupt(\"return\", mainWorkerMessageHandler);\n                    case 3:\n                      if (!(_is_node.isNodeJS && typeof require === \"function\")) {\n                        _context.next = 6;\n                        break;\n                      }\n                      worker = eval(\"require\")(_getWorkerSrc());\n                      return _context.abrupt(\"return\", worker.WorkerMessageHandler);\n                    case 6:\n                      _context.next = 8;\n                      return (0, _display_utils.loadScript)(_getWorkerSrc());\n                    case 8:\n                      return _context.abrupt(\"return\", window.pdfjsWorker.WorkerMessageHandler);\n                    case 9:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }));\n            return function loader() {\n              return _ref10.apply(this, arguments);\n            };\n          }();\n          loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n          return fakeWorkerCapability.promise;\n        }\n        function createCDNWrapper(url) {\n          var wrapper = \"importScripts('\" + url + \"');\";\n          return URL.createObjectURL(new Blob([wrapper]));\n        }\n        var PDFWorker = /*#__PURE__*/function () {\n          function PDFWorker() {\n            var _ref11 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n              _ref11$name = _ref11.name,\n              name = _ref11$name === void 0 ? null : _ref11$name,\n              _ref11$port = _ref11.port,\n              port = _ref11$port === void 0 ? null : _ref11$port,\n              _ref11$verbosity = _ref11.verbosity,\n              verbosity = _ref11$verbosity === void 0 ? (0, _util.getVerbosityLevel)() : _ref11$verbosity;\n            _classCallCheck(this, PDFWorker);\n            if (port && pdfWorkerPorts.has(port)) {\n              throw new Error(\"Cannot use more than one PDFWorker per port\");\n            }\n            this.name = name;\n            this.destroyed = false;\n            this.postMessageTransfers = true;\n            this.verbosity = verbosity;\n            this._readyCapability = (0, _util.createPromiseCapability)();\n            this._port = null;\n            this._webWorker = null;\n            this._messageHandler = null;\n            if (port) {\n              pdfWorkerPorts.set(port, this);\n              this._initializeFromPort(port);\n              return;\n            }\n            this._initialize();\n          }\n          _createClass(PDFWorker, [{\n            key: \"_initializeFromPort\",\n            value: function _initializeFromPort(port) {\n              this._port = port;\n              this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port);\n              this._messageHandler.on(\"ready\", function () {});\n              this._readyCapability.resolve();\n            }\n          }, {\n            key: \"_initialize\",\n            value: function _initialize() {\n              var _this11 = this;\n              if (typeof Worker !== \"undefined\" && !isWorkerDisabled && !getMainThreadWorkerMessageHandler()) {\n                var workerSrc = _getWorkerSrc();\n                try {\n                  if (!(0, _util.isSameOrigin)(window.location.href, workerSrc)) {\n                    workerSrc = createCDNWrapper(new URL(workerSrc, window.location).href);\n                  }\n                  var worker = new Worker(workerSrc);\n                  var messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker);\n                  var terminateEarly = function terminateEarly() {\n                    worker.removeEventListener(\"error\", onWorkerError);\n                    messageHandler.destroy();\n                    worker.terminate();\n                    if (_this11.destroyed) {\n                      _this11._readyCapability.reject(new Error(\"Worker was destroyed\"));\n                    } else {\n                      _this11._setupFakeWorker();\n                    }\n                  };\n                  var onWorkerError = function onWorkerError() {\n                    if (!_this11._webWorker) {\n                      terminateEarly();\n                    }\n                  };\n                  worker.addEventListener(\"error\", onWorkerError);\n                  messageHandler.on(\"test\", function (data) {\n                    worker.removeEventListener(\"error\", onWorkerError);\n                    if (_this11.destroyed) {\n                      terminateEarly();\n                      return;\n                    }\n                    if (data) {\n                      _this11._messageHandler = messageHandler;\n                      _this11._port = worker;\n                      _this11._webWorker = worker;\n                      if (!data.supportTransfers) {\n                        _this11.postMessageTransfers = false;\n                      }\n                      _this11._readyCapability.resolve();\n                      messageHandler.send(\"configure\", {\n                        verbosity: _this11.verbosity\n                      });\n                    } else {\n                      _this11._setupFakeWorker();\n                      messageHandler.destroy();\n                      worker.terminate();\n                    }\n                  });\n                  messageHandler.on(\"ready\", function (data) {\n                    worker.removeEventListener(\"error\", onWorkerError);\n                    if (_this11.destroyed) {\n                      terminateEarly();\n                      return;\n                    }\n                    try {\n                      sendTest();\n                    } catch (e) {\n                      _this11._setupFakeWorker();\n                    }\n                  });\n                  var sendTest = function sendTest() {\n                    var testObj = new Uint8Array([_this11.postMessageTransfers ? 255 : 0]);\n                    try {\n                      messageHandler.send(\"test\", testObj, [testObj.buffer]);\n                    } catch (ex) {\n                      (0, _util.warn)(\"Cannot use postMessage transfers.\");\n                      testObj[0] = 0;\n                      messageHandler.send(\"test\", testObj);\n                    }\n                  };\n                  sendTest();\n                  return;\n                } catch (e) {\n                  (0, _util.info)(\"The worker has been disabled.\");\n                }\n              }\n              this._setupFakeWorker();\n            }\n          }, {\n            key: \"_setupFakeWorker\",\n            value: function _setupFakeWorker() {\n              var _this12 = this;\n              if (!isWorkerDisabled) {\n                (0, _util.warn)(\"Setting up fake worker.\");\n                isWorkerDisabled = true;\n              }\n              setupFakeWorkerGlobal().then(function (WorkerMessageHandler) {\n                if (_this12.destroyed) {\n                  _this12._readyCapability.reject(new Error(\"Worker was destroyed\"));\n                  return;\n                }\n                var port = new LoopbackPort();\n                _this12._port = port;\n                var id = \"fake\" + nextFakeWorkerId++;\n                var workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port);\n                WorkerMessageHandler.setup(workerHandler, port);\n                var messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port);\n                _this12._messageHandler = messageHandler;\n                _this12._readyCapability.resolve();\n                messageHandler.send(\"configure\", {\n                  verbosity: _this12.verbosity\n                });\n              })[\"catch\"](function (reason) {\n                _this12._readyCapability.reject(new Error(\"Setting up fake worker failed: \\\"\".concat(reason.message, \"\\\".\")));\n              });\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              this.destroyed = true;\n              if (this._webWorker) {\n                this._webWorker.terminate();\n                this._webWorker = null;\n              }\n              pdfWorkerPorts[\"delete\"](this._port);\n              this._port = null;\n              if (this._messageHandler) {\n                this._messageHandler.destroy();\n                this._messageHandler = null;\n              }\n            }\n          }, {\n            key: \"promise\",\n            get: function get() {\n              return this._readyCapability.promise;\n            }\n          }, {\n            key: \"port\",\n            get: function get() {\n              return this._port;\n            }\n          }, {\n            key: \"messageHandler\",\n            get: function get() {\n              return this._messageHandler;\n            }\n          }], [{\n            key: \"fromPort\",\n            value: function fromPort(params) {\n              if (!params || !params.port) {\n                throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n              }\n              if (pdfWorkerPorts.has(params.port)) {\n                return pdfWorkerPorts.get(params.port);\n              }\n              return new PDFWorker(params);\n            }\n          }, {\n            key: \"getWorkerSrc\",\n            value: function getWorkerSrc() {\n              return _getWorkerSrc();\n            }\n          }]);\n          return PDFWorker;\n        }();\n        return PDFWorker;\n      }();\n      exports.PDFWorker = PDFWorker;\n      var WorkerTransport = /*#__PURE__*/function () {\n        function WorkerTransport(messageHandler, loadingTask, networkStream, params) {\n          _classCallCheck(this, WorkerTransport);\n          this.messageHandler = messageHandler;\n          this.loadingTask = loadingTask;\n          this.commonObjs = new PDFObjects();\n          this.fontLoader = new _font_loader.FontLoader({\n            docId: loadingTask.docId,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this)\n          });\n          this._params = params;\n          this.CMapReaderFactory = new params.CMapReaderFactory({\n            baseUrl: params.cMapUrl,\n            isCompressed: params.cMapPacked\n          });\n          this.destroyed = false;\n          this.destroyCapability = null;\n          this._passwordCapability = null;\n          this._networkStream = networkStream;\n          this._fullReader = null;\n          this._lastProgress = null;\n          this.pageCache = [];\n          this.pagePromises = [];\n          this.downloadInfoCapability = (0, _util.createPromiseCapability)();\n          this.setupMessageHandler();\n        }\n        _createClass(WorkerTransport, [{\n          key: \"destroy\",\n          value: function destroy() {\n            var _this13 = this;\n            if (this.destroyCapability) {\n              return this.destroyCapability.promise;\n            }\n            this.destroyed = true;\n            this.destroyCapability = (0, _util.createPromiseCapability)();\n            if (this._passwordCapability) {\n              this._passwordCapability.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n            }\n            var waitOn = [];\n            this.pageCache.forEach(function (page) {\n              if (page) {\n                waitOn.push(page._destroy());\n              }\n            });\n            this.pageCache.length = 0;\n            this.pagePromises.length = 0;\n            var terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n            waitOn.push(terminated);\n            Promise.all(waitOn).then(function () {\n              _this13.fontLoader.clear();\n              if (_this13._networkStream) {\n                _this13._networkStream.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\"));\n              }\n              if (_this13.messageHandler) {\n                _this13.messageHandler.destroy();\n                _this13.messageHandler = null;\n              }\n              _this13.destroyCapability.resolve();\n            }, this.destroyCapability.reject);\n            return this.destroyCapability.promise;\n          }\n        }, {\n          key: \"setupMessageHandler\",\n          value: function setupMessageHandler() {\n            var _this14 = this;\n            var messageHandler = this.messageHandler,\n              loadingTask = this.loadingTask;\n            messageHandler.on(\"GetReader\", function (data, sink) {\n              (0, _util.assert)(_this14._networkStream, \"GetReader - no `IPDFStream` instance available.\");\n              _this14._fullReader = _this14._networkStream.getFullReader();\n              _this14._fullReader.onProgress = function (evt) {\n                _this14._lastProgress = {\n                  loaded: evt.loaded,\n                  total: evt.total\n                };\n              };\n              sink.onPull = function () {\n                _this14._fullReader.read().then(function (_ref12) {\n                  var value = _ref12.value,\n                    done = _ref12.done;\n                  if (done) {\n                    sink.close();\n                    return;\n                  }\n                  (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetReader - expected an ArrayBuffer.\");\n                  sink.enqueue(new Uint8Array(value), 1, [value]);\n                })[\"catch\"](function (reason) {\n                  sink.error(reason);\n                });\n              };\n              sink.onCancel = function (reason) {\n                _this14._fullReader.cancel(reason);\n              };\n            });\n            messageHandler.on(\"ReaderHeadersReady\", function (data) {\n              var headersCapability = (0, _util.createPromiseCapability)();\n              var fullReader = _this14._fullReader;\n              fullReader.headersReady.then(function () {\n                if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n                  if (_this14._lastProgress && loadingTask.onProgress) {\n                    loadingTask.onProgress(_this14._lastProgress);\n                  }\n                  fullReader.onProgress = function (evt) {\n                    if (loadingTask.onProgress) {\n                      loadingTask.onProgress({\n                        loaded: evt.loaded,\n                        total: evt.total\n                      });\n                    }\n                  };\n                }\n                headersCapability.resolve({\n                  isStreamingSupported: fullReader.isStreamingSupported,\n                  isRangeSupported: fullReader.isRangeSupported,\n                  contentLength: fullReader.contentLength\n                });\n              }, headersCapability.reject);\n              return headersCapability.promise;\n            });\n            messageHandler.on(\"GetRangeReader\", function (data, sink) {\n              (0, _util.assert)(_this14._networkStream, \"GetRangeReader - no `IPDFStream` instance available.\");\n              var rangeReader = _this14._networkStream.getRangeReader(data.begin, data.end);\n              if (!rangeReader) {\n                sink.close();\n                return;\n              }\n              sink.onPull = function () {\n                rangeReader.read().then(function (_ref13) {\n                  var value = _ref13.value,\n                    done = _ref13.done;\n                  if (done) {\n                    sink.close();\n                    return;\n                  }\n                  (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetRangeReader - expected an ArrayBuffer.\");\n                  sink.enqueue(new Uint8Array(value), 1, [value]);\n                })[\"catch\"](function (reason) {\n                  sink.error(reason);\n                });\n              };\n              sink.onCancel = function (reason) {\n                rangeReader.cancel(reason);\n              };\n            });\n            messageHandler.on(\"GetDoc\", function (_ref14) {\n              var pdfInfo = _ref14.pdfInfo;\n              _this14._numPages = pdfInfo.numPages;\n              loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, _this14));\n            });\n            messageHandler.on(\"DocException\", function (ex) {\n              var reason;\n              switch (ex.name) {\n                case \"PasswordException\":\n                  reason = new _util.PasswordException(ex.message, ex.code);\n                  break;\n                case \"InvalidPDFException\":\n                  reason = new _util.InvalidPDFException(ex.message);\n                  break;\n                case \"MissingPDFException\":\n                  reason = new _util.MissingPDFException(ex.message);\n                  break;\n                case \"UnexpectedResponseException\":\n                  reason = new _util.UnexpectedResponseException(ex.message, ex.status);\n                  break;\n                case \"UnknownErrorException\":\n                  reason = new _util.UnknownErrorException(ex.message, ex.details);\n                  break;\n              }\n              loadingTask._capability.reject(reason);\n            });\n            messageHandler.on(\"PasswordRequest\", function (exception) {\n              _this14._passwordCapability = (0, _util.createPromiseCapability)();\n              if (loadingTask.onPassword) {\n                var updatePassword = function updatePassword(password) {\n                  _this14._passwordCapability.resolve({\n                    password: password\n                  });\n                };\n                try {\n                  loadingTask.onPassword(updatePassword, exception.code);\n                } catch (ex) {\n                  _this14._passwordCapability.reject(ex);\n                }\n              } else {\n                _this14._passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\n              }\n              return _this14._passwordCapability.promise;\n            });\n            messageHandler.on(\"DataLoaded\", function (data) {\n              if (loadingTask.onProgress) {\n                loadingTask.onProgress({\n                  loaded: data.length,\n                  total: data.length\n                });\n              }\n              _this14.downloadInfoCapability.resolve(data);\n            });\n            messageHandler.on(\"StartRenderPage\", function (data) {\n              if (_this14.destroyed) {\n                return;\n              }\n              var page = _this14.pageCache[data.pageIndex];\n              page._startRenderPage(data.transparency, data.intent);\n            });\n            messageHandler.on(\"commonobj\", function (data) {\n              if (_this14.destroyed) {\n                return;\n              }\n              var _data = _slicedToArray(data, 3),\n                id = _data[0],\n                type = _data[1],\n                exportedData = _data[2];\n              if (_this14.commonObjs.has(id)) {\n                return;\n              }\n              switch (type) {\n                case \"Font\":\n                  var params = _this14._params;\n                  if (\"error\" in exportedData) {\n                    var exportedError = exportedData.error;\n                    (0, _util.warn)(\"Error during font loading: \".concat(exportedError));\n                    _this14.commonObjs.resolve(id, exportedError);\n                    break;\n                  }\n                  var fontRegistry = null;\n                  if (params.pdfBug && globalThis.FontInspector && globalThis.FontInspector.enabled) {\n                    fontRegistry = {\n                      registerFont: function registerFont(font, url) {\n                        globalThis.FontInspector.fontAdded(font, url);\n                      }\n                    };\n                  }\n                  var font = new _font_loader.FontFaceObject(exportedData, {\n                    isEvalSupported: params.isEvalSupported,\n                    disableFontFace: params.disableFontFace,\n                    ignoreErrors: params.ignoreErrors,\n                    onUnsupportedFeature: _this14._onUnsupportedFeature.bind(_this14),\n                    fontRegistry: fontRegistry\n                  });\n                  _this14.fontLoader.bind(font)[\"catch\"](function (reason) {\n                    return messageHandler.sendWithPromise(\"FontFallback\", {\n                      id: id\n                    });\n                  })[\"finally\"](function () {\n                    if (!params.fontExtraProperties && font.data) {\n                      font.data = null;\n                    }\n                    _this14.commonObjs.resolve(id, font);\n                  });\n                  break;\n                case \"FontPath\":\n                case \"FontType3Res\":\n                case \"Image\":\n                  _this14.commonObjs.resolve(id, exportedData);\n                  break;\n                default:\n                  throw new Error(\"Got unknown common object type \".concat(type));\n              }\n            });\n            messageHandler.on(\"obj\", function (data) {\n              if (_this14.destroyed) {\n                return undefined;\n              }\n              var _data2 = _slicedToArray(data, 4),\n                id = _data2[0],\n                pageIndex = _data2[1],\n                type = _data2[2],\n                imageData = _data2[3];\n              var pageProxy = _this14.pageCache[pageIndex];\n              if (pageProxy.objs.has(id)) {\n                return undefined;\n              }\n              switch (type) {\n                case \"Image\":\n                  pageProxy.objs.resolve(id, imageData);\n                  var MAX_IMAGE_SIZE_TO_STORE = 8000000;\n                  if (imageData && \"data\" in imageData && imageData.data.length > MAX_IMAGE_SIZE_TO_STORE) {\n                    pageProxy.cleanupAfterRender = true;\n                  }\n                  break;\n                default:\n                  throw new Error(\"Got unknown object type \".concat(type));\n              }\n              return undefined;\n            });\n            messageHandler.on(\"DocProgress\", function (data) {\n              if (_this14.destroyed) {\n                return;\n              }\n              if (loadingTask.onProgress) {\n                loadingTask.onProgress({\n                  loaded: data.loaded,\n                  total: data.total\n                });\n              }\n            });\n            messageHandler.on(\"UnsupportedFeature\", this._onUnsupportedFeature.bind(this));\n            messageHandler.on(\"FetchBuiltInCMap\", function (data, sink) {\n              if (_this14.destroyed) {\n                sink.error(new Error(\"Worker was destroyed\"));\n                return;\n              }\n              var fetched = false;\n              sink.onPull = function () {\n                if (fetched) {\n                  sink.close();\n                  return;\n                }\n                fetched = true;\n                _this14.CMapReaderFactory.fetch(data).then(function (builtInCMap) {\n                  sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n                })[\"catch\"](function (reason) {\n                  sink.error(reason);\n                });\n              };\n            });\n          }\n        }, {\n          key: \"_onUnsupportedFeature\",\n          value: function _onUnsupportedFeature(_ref15) {\n            var featureId = _ref15.featureId;\n            if (this.destroyed) {\n              return;\n            }\n            if (this.loadingTask.onUnsupportedFeature) {\n              this.loadingTask.onUnsupportedFeature(featureId);\n            }\n          }\n        }, {\n          key: \"getData\",\n          value: function getData() {\n            return this.messageHandler.sendWithPromise(\"GetData\", null);\n          }\n        }, {\n          key: \"getPage\",\n          value: function getPage(pageNumber) {\n            var _this15 = this;\n            if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\n              return Promise.reject(new Error(\"Invalid page request\"));\n            }\n            var pageIndex = pageNumber - 1;\n            if (pageIndex in this.pagePromises) {\n              return this.pagePromises[pageIndex];\n            }\n            var promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n              pageIndex: pageIndex\n            }).then(function (pageInfo) {\n              if (_this15.destroyed) {\n                throw new Error(\"Transport destroyed\");\n              }\n              var page = new PDFPageProxy(pageIndex, pageInfo, _this15, _this15._params.pdfBug);\n              _this15.pageCache[pageIndex] = page;\n              return page;\n            });\n            this.pagePromises[pageIndex] = promise;\n            return promise;\n          }\n        }, {\n          key: \"getPageIndex\",\n          value: function getPageIndex(ref) {\n            return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n              ref: ref\n            })[\"catch\"](function (reason) {\n              return Promise.reject(new Error(reason));\n            });\n          }\n        }, {\n          key: \"getAnnotations\",\n          value: function getAnnotations(pageIndex, intent) {\n            return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n              pageIndex: pageIndex,\n              intent: intent\n            });\n          }\n        }, {\n          key: \"getDestinations\",\n          value: function getDestinations() {\n            return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n          }\n        }, {\n          key: \"getDestination\",\n          value: function getDestination(id) {\n            if (typeof id !== \"string\") {\n              return Promise.reject(new Error(\"Invalid destination request.\"));\n            }\n            return this.messageHandler.sendWithPromise(\"GetDestination\", {\n              id: id\n            });\n          }\n        }, {\n          key: \"getPageLabels\",\n          value: function getPageLabels() {\n            return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n          }\n        }, {\n          key: \"getPageLayout\",\n          value: function getPageLayout() {\n            return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n          }\n        }, {\n          key: \"getPageMode\",\n          value: function getPageMode() {\n            return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n          }\n        }, {\n          key: \"getViewerPreferences\",\n          value: function getViewerPreferences() {\n            return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n          }\n        }, {\n          key: \"getOpenAction\",\n          value: function getOpenAction() {\n            return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n          }\n        }, {\n          key: \"getAttachments\",\n          value: function getAttachments() {\n            return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n          }\n        }, {\n          key: \"getJavaScript\",\n          value: function getJavaScript() {\n            return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n          }\n        }, {\n          key: \"getOutline\",\n          value: function getOutline() {\n            return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n          }\n        }, {\n          key: \"getPermissions\",\n          value: function getPermissions() {\n            return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n          }\n        }, {\n          key: \"getMetadata\",\n          value: function getMetadata() {\n            var _this16 = this;\n            return this.messageHandler.sendWithPromise(\"GetMetadata\", null).then(function (results) {\n              return {\n                info: results[0],\n                metadata: results[1] ? new _metadata.Metadata(results[1]) : null,\n                contentDispositionFilename: _this16._fullReader ? _this16._fullReader.filename : null\n              };\n            });\n          }\n        }, {\n          key: \"getStats\",\n          value: function getStats() {\n            return this.messageHandler.sendWithPromise(\"GetStats\", null);\n          }\n        }, {\n          key: \"startCleanup\",\n          value: function startCleanup() {\n            var _this17 = this;\n            return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(function () {\n              for (var i = 0, ii = _this17.pageCache.length; i < ii; i++) {\n                var page = _this17.pageCache[i];\n                if (page) {\n                  var cleanupSuccessful = page.cleanup();\n                  if (!cleanupSuccessful) {\n                    throw new Error(\"startCleanup: Page \".concat(i + 1, \" is currently rendering.\"));\n                  }\n                }\n              }\n              _this17.commonObjs.clear();\n              _this17.fontLoader.clear();\n            });\n          }\n        }, {\n          key: \"loadingParams\",\n          get: function get() {\n            var params = this._params;\n            return (0, _util.shadow)(this, \"loadingParams\", {\n              disableAutoFetch: params.disableAutoFetch,\n              disableFontFace: params.disableFontFace\n            });\n          }\n        }]);\n        return WorkerTransport;\n      }();\n      var PDFObjects = /*#__PURE__*/function () {\n        function PDFObjects() {\n          _classCallCheck(this, PDFObjects);\n          this._objs = Object.create(null);\n        }\n        _createClass(PDFObjects, [{\n          key: \"_ensureObj\",\n          value: function _ensureObj(objId) {\n            if (this._objs[objId]) {\n              return this._objs[objId];\n            }\n            return this._objs[objId] = {\n              capability: (0, _util.createPromiseCapability)(),\n              data: null,\n              resolved: false\n            };\n          }\n        }, {\n          key: \"get\",\n          value: function get(objId) {\n            var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            if (callback) {\n              this._ensureObj(objId).capability.promise.then(callback);\n              return null;\n            }\n            var obj = this._objs[objId];\n            if (!obj || !obj.resolved) {\n              throw new Error(\"Requesting object that isn't resolved yet \".concat(objId, \".\"));\n            }\n            return obj.data;\n          }\n        }, {\n          key: \"has\",\n          value: function has(objId) {\n            var obj = this._objs[objId];\n            return obj ? obj.resolved : false;\n          }\n        }, {\n          key: \"resolve\",\n          value: function resolve(objId, data) {\n            var obj = this._ensureObj(objId);\n            obj.resolved = true;\n            obj.data = data;\n            obj.capability.resolve(data);\n          }\n        }, {\n          key: \"clear\",\n          value: function clear() {\n            this._objs = Object.create(null);\n          }\n        }]);\n        return PDFObjects;\n      }();\n      var RenderTask = /*#__PURE__*/function () {\n        function RenderTask(internalRenderTask) {\n          _classCallCheck(this, RenderTask);\n          this._internalRenderTask = internalRenderTask;\n          this.onContinue = null;\n        }\n        _createClass(RenderTask, [{\n          key: \"cancel\",\n          value: function cancel() {\n            this._internalRenderTask.cancel();\n          }\n        }, {\n          key: \"promise\",\n          get: function get() {\n            return this._internalRenderTask.capability.promise;\n          }\n        }]);\n        return RenderTask;\n      }();\n      var InternalRenderTask = function InternalRenderTaskClosure() {\n        var canvasInRendering = new WeakSet();\n        var InternalRenderTask = /*#__PURE__*/function () {\n          function InternalRenderTask(_ref16) {\n            var callback = _ref16.callback,\n              params = _ref16.params,\n              objs = _ref16.objs,\n              commonObjs = _ref16.commonObjs,\n              operatorList = _ref16.operatorList,\n              pageIndex = _ref16.pageIndex,\n              canvasFactory = _ref16.canvasFactory,\n              webGLContext = _ref16.webGLContext,\n              _ref16$useRequestAnim = _ref16.useRequestAnimationFrame,\n              useRequestAnimationFrame = _ref16$useRequestAnim === void 0 ? false : _ref16$useRequestAnim,\n              _ref16$pdfBug = _ref16.pdfBug,\n              pdfBug = _ref16$pdfBug === void 0 ? false : _ref16$pdfBug;\n            _classCallCheck(this, InternalRenderTask);\n            this.callback = callback;\n            this.params = params;\n            this.objs = objs;\n            this.commonObjs = commonObjs;\n            this.operatorListIdx = null;\n            this.operatorList = operatorList;\n            this._pageIndex = pageIndex;\n            this.canvasFactory = canvasFactory;\n            this.webGLContext = webGLContext;\n            this._pdfBug = pdfBug;\n            this.running = false;\n            this.graphicsReadyCallback = null;\n            this.graphicsReady = false;\n            this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n            this.cancelled = false;\n            this.capability = (0, _util.createPromiseCapability)();\n            this.task = new RenderTask(this);\n            this._continueBound = this._continue.bind(this);\n            this._scheduleNextBound = this._scheduleNext.bind(this);\n            this._nextBound = this._next.bind(this);\n            this._canvas = params.canvasContext.canvas;\n          }\n          _createClass(InternalRenderTask, [{\n            key: \"initializeGraphics\",\n            value: function initializeGraphics() {\n              var transparency = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n              if (this.cancelled) {\n                return;\n              }\n              if (this._canvas) {\n                if (canvasInRendering.has(this._canvas)) {\n                  throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\n                }\n                canvasInRendering.add(this._canvas);\n              }\n              if (this._pdfBug && globalThis.StepperManager && globalThis.StepperManager.enabled) {\n                this.stepper = globalThis.StepperManager.create(this._pageIndex);\n                this.stepper.init(this.operatorList);\n                this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n              }\n              var _this$params = this.params,\n                canvasContext = _this$params.canvasContext,\n                viewport = _this$params.viewport,\n                transform = _this$params.transform,\n                imageLayer = _this$params.imageLayer,\n                background = _this$params.background;\n              this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, this.webGLContext, imageLayer);\n              this.gfx.beginDrawing({\n                transform: transform,\n                viewport: viewport,\n                transparency: transparency,\n                background: background\n              });\n              this.operatorListIdx = 0;\n              this.graphicsReady = true;\n              if (this.graphicsReadyCallback) {\n                this.graphicsReadyCallback();\n              }\n            }\n          }, {\n            key: \"cancel\",\n            value: function cancel() {\n              var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n              this.running = false;\n              this.cancelled = true;\n              if (this.gfx) {\n                this.gfx.endDrawing();\n              }\n              if (this._canvas) {\n                canvasInRendering[\"delete\"](this._canvas);\n              }\n              this.callback(error || new _display_utils.RenderingCancelledException(\"Rendering cancelled, page \".concat(this._pageIndex + 1), \"canvas\"));\n            }\n          }, {\n            key: \"operatorListChanged\",\n            value: function operatorListChanged() {\n              if (!this.graphicsReady) {\n                if (!this.graphicsReadyCallback) {\n                  this.graphicsReadyCallback = this._continueBound;\n                }\n                return;\n              }\n              if (this.stepper) {\n                this.stepper.updateOperatorList(this.operatorList);\n              }\n              if (this.running) {\n                return;\n              }\n              this._continue();\n            }\n          }, {\n            key: \"_continue\",\n            value: function _continue() {\n              this.running = true;\n              if (this.cancelled) {\n                return;\n              }\n              if (this.task.onContinue) {\n                this.task.onContinue(this._scheduleNextBound);\n              } else {\n                this._scheduleNext();\n              }\n            }\n          }, {\n            key: \"_scheduleNext\",\n            value: function _scheduleNext() {\n              var _this18 = this;\n              if (this._useRequestAnimationFrame) {\n                window.requestAnimationFrame(function () {\n                  _this18._nextBound()[\"catch\"](_this18.cancel.bind(_this18));\n                });\n              } else {\n                Promise.resolve().then(this._nextBound)[\"catch\"](this.cancel.bind(this));\n              }\n            }\n          }, {\n            key: \"_next\",\n            value: function () {\n              var _next2 = _asyncToGenerator( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n                return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        if (!this.cancelled) {\n                          _context2.next = 2;\n                          break;\n                        }\n                        return _context2.abrupt(\"return\");\n                      case 2:\n                        this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\n                        if (this.operatorListIdx === this.operatorList.argsArray.length) {\n                          this.running = false;\n                          if (this.operatorList.lastChunk) {\n                            this.gfx.endDrawing();\n                            if (this._canvas) {\n                              canvasInRendering[\"delete\"](this._canvas);\n                            }\n                            this.callback();\n                          }\n                        }\n                      case 4:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, this);\n              }));\n              function _next() {\n                return _next2.apply(this, arguments);\n              }\n              return _next;\n            }()\n          }]);\n          return InternalRenderTask;\n        }();\n        return InternalRenderTask;\n      }();\n      var version = '2.5.207';\n      exports.version = version;\n      var build = '0974d605';\n      exports.build = build;\n\n      /***/\n    }, /* 199 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.FontLoader = exports.FontFaceObject = void 0;\n      var _regenerator = _interopRequireDefault(__w_pdfjs_require__(2));\n      var _util = __w_pdfjs_require__(5);\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          \"default\": obj\n        };\n      }\n      function _typeof(obj) {\n        \"@babel/helpers - typeof\";\n\n        if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n          _typeof = function _typeof(obj) {\n            return typeof obj;\n          };\n        } else {\n          _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n          };\n        }\n        return _typeof(obj);\n      }\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function\");\n        }\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) _setPrototypeOf(subClass, superClass);\n      }\n      function _setPrototypeOf(o, p) {\n        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n          o.__proto__ = p;\n          return o;\n        };\n        return _setPrototypeOf(o, p);\n      }\n      function _createSuper(Derived) {\n        var hasNativeReflectConstruct = _isNativeReflectConstruct();\n        return function _createSuperInternal() {\n          var Super = _getPrototypeOf(Derived),\n            result;\n          if (hasNativeReflectConstruct) {\n            var NewTarget = _getPrototypeOf(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n          } else {\n            result = Super.apply(this, arguments);\n          }\n          return _possibleConstructorReturn(this, result);\n        };\n      }\n      function _possibleConstructorReturn(self, call) {\n        if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n          return call;\n        }\n        return _assertThisInitialized(self);\n      }\n      function _assertThisInitialized(self) {\n        if (self === void 0) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n        return self;\n      }\n      function _isNativeReflectConstruct() {\n        if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n        if (Reflect.construct.sham) return false;\n        if (typeof Proxy === \"function\") return true;\n        try {\n          Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n          return true;\n        } catch (e) {\n          return false;\n        }\n      }\n      function _getPrototypeOf(o) {\n        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n          return o.__proto__ || Object.getPrototypeOf(o);\n        };\n        return _getPrototypeOf(o);\n      }\n      function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n        if (info.done) {\n          resolve(value);\n        } else {\n          Promise.resolve(value).then(_next, _throw);\n        }\n      }\n      function _asyncToGenerator(fn) {\n        return function () {\n          var self = this,\n            args = arguments;\n          return new Promise(function (resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n          });\n        };\n      }\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n      function _defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n      function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        return Constructor;\n      }\n      var BaseFontLoader = /*#__PURE__*/function () {\n        function BaseFontLoader(_ref) {\n          var docId = _ref.docId,\n            onUnsupportedFeature = _ref.onUnsupportedFeature;\n          _classCallCheck(this, BaseFontLoader);\n          if (this.constructor === BaseFontLoader) {\n            (0, _util.unreachable)(\"Cannot initialize BaseFontLoader.\");\n          }\n          this.docId = docId;\n          this._onUnsupportedFeature = onUnsupportedFeature;\n          this.nativeFontFaces = [];\n          this.styleElement = null;\n        }\n        _createClass(BaseFontLoader, [{\n          key: \"addNativeFontFace\",\n          value: function addNativeFontFace(nativeFontFace) {\n            this.nativeFontFaces.push(nativeFontFace);\n            document.fonts.add(nativeFontFace);\n          }\n        }, {\n          key: \"insertRule\",\n          value: function insertRule(rule) {\n            var styleElement = this.styleElement;\n            if (!styleElement) {\n              styleElement = this.styleElement = document.createElement(\"style\");\n              styleElement.id = \"PDFJS_FONT_STYLE_TAG_\".concat(this.docId);\n              document.documentElement.getElementsByTagName(\"head\")[0].appendChild(styleElement);\n            }\n            var styleSheet = styleElement.sheet;\n            styleSheet.insertRule(rule, styleSheet.cssRules.length);\n          }\n        }, {\n          key: \"clear\",\n          value: function clear() {\n            this.nativeFontFaces.forEach(function (nativeFontFace) {\n              document.fonts[\"delete\"](nativeFontFace);\n            });\n            this.nativeFontFaces.length = 0;\n            if (this.styleElement) {\n              this.styleElement.remove();\n              this.styleElement = null;\n            }\n          }\n        }, {\n          key: \"bind\",\n          value: function () {\n            var _bind = _asyncToGenerator( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(font) {\n              var _this = this;\n              var nativeFontFace, rule;\n              return _regenerator[\"default\"].wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      if (!(font.attached || font.missingFile)) {\n                        _context.next = 2;\n                        break;\n                      }\n                      return _context.abrupt(\"return\");\n                    case 2:\n                      font.attached = true;\n                      if (!this.isFontLoadingAPISupported) {\n                        _context.next = 19;\n                        break;\n                      }\n                      nativeFontFace = font.createNativeFontFace();\n                      if (!nativeFontFace) {\n                        _context.next = 18;\n                        break;\n                      }\n                      this.addNativeFontFace(nativeFontFace);\n                      _context.prev = 7;\n                      _context.next = 10;\n                      return nativeFontFace.loaded;\n                    case 10:\n                      _context.next = 18;\n                      break;\n                    case 12:\n                      _context.prev = 12;\n                      _context.t0 = _context[\"catch\"](7);\n                      this._onUnsupportedFeature({\n                        featureId: _util.UNSUPPORTED_FEATURES.errorFontLoadNative\n                      });\n                      (0, _util.warn)(\"Failed to load font '\".concat(nativeFontFace.family, \"': '\").concat(_context.t0, \"'.\"));\n                      font.disableFontFace = true;\n                      throw _context.t0;\n                    case 18:\n                      return _context.abrupt(\"return\");\n                    case 19:\n                      rule = font.createFontFaceRule();\n                      if (!rule) {\n                        _context.next = 26;\n                        break;\n                      }\n                      this.insertRule(rule);\n                      if (!this.isSyncFontLoadingSupported) {\n                        _context.next = 24;\n                        break;\n                      }\n                      return _context.abrupt(\"return\");\n                    case 24:\n                      _context.next = 26;\n                      return new Promise(function (resolve) {\n                        var request = _this._queueLoadingCallback(resolve);\n                        _this._prepareFontLoadEvent([rule], [font], request);\n                      });\n                    case 26:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee, this, [[7, 12]]);\n            }));\n            function bind(_x) {\n              return _bind.apply(this, arguments);\n            }\n            return bind;\n          }()\n        }, {\n          key: \"_queueLoadingCallback\",\n          value: function _queueLoadingCallback(callback) {\n            (0, _util.unreachable)(\"Abstract method `_queueLoadingCallback`.\");\n          }\n        }, {\n          key: \"_prepareFontLoadEvent\",\n          value: function _prepareFontLoadEvent(rules, fontsToLoad, request) {\n            (0, _util.unreachable)(\"Abstract method `_prepareFontLoadEvent`.\");\n          }\n        }, {\n          key: \"isFontLoadingAPISupported\",\n          get: function get() {\n            var supported = typeof document !== \"undefined\" && !!document.fonts;\n            return (0, _util.shadow)(this, \"isFontLoadingAPISupported\", supported);\n          }\n        }, {\n          key: \"isSyncFontLoadingSupported\",\n          get: function get() {\n            (0, _util.unreachable)(\"Abstract method `isSyncFontLoadingSupported`.\");\n          }\n        }, {\n          key: \"_loadTestFont\",\n          get: function get() {\n            (0, _util.unreachable)(\"Abstract method `_loadTestFont`.\");\n          }\n        }]);\n        return BaseFontLoader;\n      }();\n      var FontLoader;\n      exports.FontLoader = FontLoader;\n      {\n        exports.FontLoader = FontLoader = /*#__PURE__*/function (_BaseFontLoader) {\n          _inherits(GenericFontLoader, _BaseFontLoader);\n          var _super = _createSuper(GenericFontLoader);\n          function GenericFontLoader(docId) {\n            var _this2;\n            _classCallCheck(this, GenericFontLoader);\n            _this2 = _super.call(this, docId);\n            _this2.loadingContext = {\n              requests: [],\n              nextRequestId: 0\n            };\n            _this2.loadTestFontId = 0;\n            return _this2;\n          }\n          _createClass(GenericFontLoader, [{\n            key: \"_queueLoadingCallback\",\n            value: function _queueLoadingCallback(callback) {\n              function completeRequest() {\n                (0, _util.assert)(!request.done, \"completeRequest() cannot be called twice.\");\n                request.done = true;\n                while (context.requests.length > 0 && context.requests[0].done) {\n                  var otherRequest = context.requests.shift();\n                  setTimeout(otherRequest.callback, 0);\n                }\n              }\n              var context = this.loadingContext;\n              var request = {\n                id: \"pdfjs-font-loading-\".concat(context.nextRequestId++),\n                done: false,\n                complete: completeRequest,\n                callback: callback\n              };\n              context.requests.push(request);\n              return request;\n            }\n          }, {\n            key: \"_prepareFontLoadEvent\",\n            value: function _prepareFontLoadEvent(rules, fonts, request) {\n              function int32(data, offset) {\n                return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n              }\n              function spliceString(s, offset, remove, insert) {\n                var chunk1 = s.substring(0, offset);\n                var chunk2 = s.substring(offset + remove);\n                return chunk1 + insert + chunk2;\n              }\n              var i, ii;\n              var canvas = document.createElement(\"canvas\");\n              canvas.width = 1;\n              canvas.height = 1;\n              var ctx = canvas.getContext(\"2d\");\n              var called = 0;\n              function isFontReady(name, callback) {\n                called++;\n                if (called > 30) {\n                  (0, _util.warn)(\"Load test font never loaded.\");\n                  callback();\n                  return;\n                }\n                ctx.font = \"30px \" + name;\n                ctx.fillText(\".\", 0, 20);\n                var imageData = ctx.getImageData(0, 0, 1, 1);\n                if (imageData.data[3] > 0) {\n                  callback();\n                  return;\n                }\n                setTimeout(isFontReady.bind(null, name, callback));\n              }\n              var loadTestFontId = \"lt\".concat(Date.now()).concat(this.loadTestFontId++);\n              var data = this._loadTestFont;\n              var COMMENT_OFFSET = 976;\n              data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n              var CFF_CHECKSUM_OFFSET = 16;\n              var XXXX_VALUE = 0x58585858;\n              var checksum = int32(data, CFF_CHECKSUM_OFFSET);\n              for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n                checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n              }\n              if (i < loadTestFontId.length) {\n                checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n              }\n              data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\n              var url = \"url(data:font/opentype;base64,\".concat(btoa(data), \");\");\n              var rule = \"@font-face {font-family:\\\"\".concat(loadTestFontId, \"\\\";src:\").concat(url, \"}\");\n              this.insertRule(rule);\n              var names = [];\n              for (i = 0, ii = fonts.length; i < ii; i++) {\n                names.push(fonts[i].loadedName);\n              }\n              names.push(loadTestFontId);\n              var div = document.createElement(\"div\");\n              div.style.visibility = \"hidden\";\n              div.style.width = div.style.height = \"10px\";\n              div.style.position = \"absolute\";\n              div.style.top = div.style.left = \"0px\";\n              for (i = 0, ii = names.length; i < ii; ++i) {\n                var span = document.createElement(\"span\");\n                span.textContent = \"Hi\";\n                span.style.fontFamily = names[i];\n                div.appendChild(span);\n              }\n              document.body.appendChild(div);\n              isFontReady(loadTestFontId, function () {\n                document.body.removeChild(div);\n                request.complete();\n              });\n            }\n          }, {\n            key: \"isSyncFontLoadingSupported\",\n            get: function get() {\n              var supported = false;\n              if (typeof navigator === \"undefined\") {\n                supported = true;\n              } else {\n                var m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(navigator.userAgent);\n                if (m && m[1] >= 14) {\n                  supported = true;\n                }\n              }\n              return (0, _util.shadow)(this, \"isSyncFontLoadingSupported\", supported);\n            }\n          }, {\n            key: \"_loadTestFont\",\n            get: function get() {\n              var getLoadTestFont = function getLoadTestFont() {\n                return atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n              };\n              return (0, _util.shadow)(this, \"_loadTestFont\", getLoadTestFont());\n            }\n          }]);\n          return GenericFontLoader;\n        }(BaseFontLoader);\n      }\n      var FontFaceObject = /*#__PURE__*/function () {\n        function FontFaceObject(translatedData, _ref2) {\n          var _ref2$isEvalSupported = _ref2.isEvalSupported,\n            isEvalSupported = _ref2$isEvalSupported === void 0 ? true : _ref2$isEvalSupported,\n            _ref2$disableFontFace = _ref2.disableFontFace,\n            disableFontFace = _ref2$disableFontFace === void 0 ? false : _ref2$disableFontFace,\n            _ref2$ignoreErrors = _ref2.ignoreErrors,\n            ignoreErrors = _ref2$ignoreErrors === void 0 ? false : _ref2$ignoreErrors,\n            _ref2$onUnsupportedFe = _ref2.onUnsupportedFeature,\n            onUnsupportedFeature = _ref2$onUnsupportedFe === void 0 ? null : _ref2$onUnsupportedFe,\n            _ref2$fontRegistry = _ref2.fontRegistry,\n            fontRegistry = _ref2$fontRegistry === void 0 ? null : _ref2$fontRegistry;\n          _classCallCheck(this, FontFaceObject);\n          this.compiledGlyphs = Object.create(null);\n          for (var i in translatedData) {\n            this[i] = translatedData[i];\n          }\n          this.isEvalSupported = isEvalSupported !== false;\n          this.disableFontFace = disableFontFace === true;\n          this.ignoreErrors = ignoreErrors === true;\n          this._onUnsupportedFeature = onUnsupportedFeature;\n          this.fontRegistry = fontRegistry;\n        }\n        _createClass(FontFaceObject, [{\n          key: \"createNativeFontFace\",\n          value: function createNativeFontFace() {\n            if (!this.data || this.disableFontFace) {\n              return null;\n            }\n            var nativeFontFace = new FontFace(this.loadedName, this.data, {});\n            if (this.fontRegistry) {\n              this.fontRegistry.registerFont(this);\n            }\n            return nativeFontFace;\n          }\n        }, {\n          key: \"createFontFaceRule\",\n          value: function createFontFaceRule() {\n            if (!this.data || this.disableFontFace) {\n              return null;\n            }\n            var data = (0, _util.bytesToString)(new Uint8Array(this.data));\n            var url = \"url(data:\".concat(this.mimetype, \";base64,\").concat(btoa(data), \");\");\n            var rule = \"@font-face {font-family:\\\"\".concat(this.loadedName, \"\\\";src:\").concat(url, \"}\");\n            if (this.fontRegistry) {\n              this.fontRegistry.registerFont(this, url);\n            }\n            return rule;\n          }\n        }, {\n          key: \"getPathGenerator\",\n          value: function getPathGenerator(objs, character) {\n            if (this.compiledGlyphs[character] !== undefined) {\n              return this.compiledGlyphs[character];\n            }\n            var cmds, current;\n            try {\n              cmds = objs.get(this.loadedName + \"_path_\" + character);\n            } catch (ex) {\n              if (!this.ignoreErrors) {\n                throw ex;\n              }\n              if (this._onUnsupportedFeature) {\n                this._onUnsupportedFeature({\n                  featureId: _util.UNSUPPORTED_FEATURES.errorFontGetPath\n                });\n              }\n              (0, _util.warn)(\"getPathGenerator - ignoring character: \\\"\".concat(ex, \"\\\".\"));\n              return this.compiledGlyphs[character] = function (c, size) {};\n            }\n            if (this.isEvalSupported && _util.IsEvalSupportedCached.value) {\n              var args,\n                js = \"\";\n              for (var i = 0, ii = cmds.length; i < ii; i++) {\n                current = cmds[i];\n                if (current.args !== undefined) {\n                  args = current.args.join(\",\");\n                } else {\n                  args = \"\";\n                }\n                js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n              }\n              return this.compiledGlyphs[character] = new Function(\"c\", \"size\", js);\n            }\n            return this.compiledGlyphs[character] = function (c, size) {\n              for (var _i = 0, _ii = cmds.length; _i < _ii; _i++) {\n                current = cmds[_i];\n                if (current.cmd === \"scale\") {\n                  current.args = [size, -size];\n                }\n                c[current.cmd].apply(c, current.args);\n              }\n            };\n          }\n        }]);\n        return FontFaceObject;\n      }();\n      exports.FontFaceObject = FontFaceObject;\n\n      /***/\n    }, /* 200 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.apiCompatibilityParams = void 0;\n      var _is_node = __w_pdfjs_require__(7);\n      var compatibilityParams = Object.create(null);\n      {\n        (function checkFontFace() {\n          if (_is_node.isNodeJS) {\n            compatibilityParams.disableFontFace = true;\n          }\n        })();\n      }\n      var apiCompatibilityParams = Object.freeze(compatibilityParams);\n      exports.apiCompatibilityParams = apiCompatibilityParams;\n\n      /***/\n    }, /* 201 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.CanvasGraphics = void 0;\n      var _util = __w_pdfjs_require__(5);\n      var _pattern_helper = __w_pdfjs_require__(202);\n      function _createForOfIteratorHelper(o, allowArrayLike) {\n        var it;\n        if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n          if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n            if (it) o = it;\n            var i = 0;\n            var F = function F() {};\n            return {\n              s: F,\n              n: function n() {\n                if (i >= o.length) return {\n                  done: true\n                };\n                return {\n                  done: false,\n                  value: o[i++]\n                };\n              },\n              e: function e(_e) {\n                throw _e;\n              },\n              f: F\n            };\n          }\n          throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n        }\n        var normalCompletion = true,\n          didErr = false,\n          err;\n        return {\n          s: function s() {\n            it = o[Symbol.iterator]();\n          },\n          n: function n() {\n            var step = it.next();\n            normalCompletion = step.done;\n            return step;\n          },\n          e: function e(_e2) {\n            didErr = true;\n            err = _e2;\n          },\n          f: function f() {\n            try {\n              if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n            } finally {\n              if (didErr) throw err;\n            }\n          }\n        };\n      }\n      function _unsupportedIterableToArray(o, minLen) {\n        if (!o) return;\n        if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n        var n = Object.prototype.toString.call(o).slice(8, -1);\n        if (n === \"Object\" && o.constructor) n = o.constructor.name;\n        if (n === \"Map\" || n === \"Set\") return Array.from(o);\n        if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n      }\n      function _arrayLikeToArray(arr, len) {\n        if (len == null || len > arr.length) len = arr.length;\n        for (var i = 0, arr2 = new Array(len); i < len; i++) {\n          arr2[i] = arr[i];\n        }\n        return arr2;\n      }\n      var MIN_FONT_SIZE = 16;\n      var MAX_FONT_SIZE = 100;\n      var MAX_GROUP_SIZE = 4096;\n      var MIN_WIDTH_FACTOR = 0.65;\n      var COMPILE_TYPE3_GLYPHS = true;\n      var MAX_SIZE_TO_COMPILE = 1000;\n      var FULL_CHUNK_HEIGHT = 16;\n      function addContextCurrentTransform(ctx) {\n        if (!ctx.mozCurrentTransform) {\n          ctx._originalSave = ctx.save;\n          ctx._originalRestore = ctx.restore;\n          ctx._originalRotate = ctx.rotate;\n          ctx._originalScale = ctx.scale;\n          ctx._originalTranslate = ctx.translate;\n          ctx._originalTransform = ctx.transform;\n          ctx._originalSetTransform = ctx.setTransform;\n          ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n          ctx._transformStack = [];\n          Object.defineProperty(ctx, \"mozCurrentTransform\", {\n            get: function getCurrentTransform() {\n              return this._transformMatrix;\n            }\n          });\n          Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n            get: function getCurrentTransformInverse() {\n              var m = this._transformMatrix;\n              var a = m[0],\n                b = m[1],\n                c = m[2],\n                d = m[3],\n                e = m[4],\n                f = m[5];\n              var ad_bc = a * d - b * c;\n              var bc_ad = b * c - a * d;\n              return [d / ad_bc, b / bc_ad, c / bc_ad, a / ad_bc, (d * e - c * f) / bc_ad, (b * e - a * f) / ad_bc];\n            }\n          });\n          ctx.save = function ctxSave() {\n            var old = this._transformMatrix;\n            this._transformStack.push(old);\n            this._transformMatrix = old.slice(0, 6);\n            this._originalSave();\n          };\n          ctx.restore = function ctxRestore() {\n            var prev = this._transformStack.pop();\n            if (prev) {\n              this._transformMatrix = prev;\n              this._originalRestore();\n            }\n          };\n          ctx.translate = function ctxTranslate(x, y) {\n            var m = this._transformMatrix;\n            m[4] = m[0] * x + m[2] * y + m[4];\n            m[5] = m[1] * x + m[3] * y + m[5];\n            this._originalTranslate(x, y);\n          };\n          ctx.scale = function ctxScale(x, y) {\n            var m = this._transformMatrix;\n            m[0] = m[0] * x;\n            m[1] = m[1] * x;\n            m[2] = m[2] * y;\n            m[3] = m[3] * y;\n            this._originalScale(x, y);\n          };\n          ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n            var m = this._transformMatrix;\n            this._transformMatrix = [m[0] * a + m[2] * b, m[1] * a + m[3] * b, m[0] * c + m[2] * d, m[1] * c + m[3] * d, m[0] * e + m[2] * f + m[4], m[1] * e + m[3] * f + m[5]];\n            ctx._originalTransform(a, b, c, d, e, f);\n          };\n          ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n            this._transformMatrix = [a, b, c, d, e, f];\n            ctx._originalSetTransform(a, b, c, d, e, f);\n          };\n          ctx.rotate = function ctxRotate(angle) {\n            var cosValue = Math.cos(angle);\n            var sinValue = Math.sin(angle);\n            var m = this._transformMatrix;\n            this._transformMatrix = [m[0] * cosValue + m[2] * sinValue, m[1] * cosValue + m[3] * sinValue, m[0] * -sinValue + m[2] * cosValue, m[1] * -sinValue + m[3] * cosValue, m[4], m[5]];\n            this._originalRotate(angle);\n          };\n        }\n      }\n      var CachedCanvases = function CachedCanvasesClosure() {\n        function CachedCanvases(canvasFactory) {\n          this.canvasFactory = canvasFactory;\n          this.cache = Object.create(null);\n        }\n        CachedCanvases.prototype = {\n          getCanvas: function CachedCanvases_getCanvas(id, width, height, trackTransform) {\n            var canvasEntry;\n            if (this.cache[id] !== undefined) {\n              canvasEntry = this.cache[id];\n              this.canvasFactory.reset(canvasEntry, width, height);\n              canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n            } else {\n              canvasEntry = this.canvasFactory.create(width, height);\n              this.cache[id] = canvasEntry;\n            }\n            if (trackTransform) {\n              addContextCurrentTransform(canvasEntry.context);\n            }\n            return canvasEntry;\n          },\n          clear: function clear() {\n            for (var id in this.cache) {\n              var canvasEntry = this.cache[id];\n              this.canvasFactory.destroy(canvasEntry);\n              delete this.cache[id];\n            }\n          }\n        };\n        return CachedCanvases;\n      }();\n      function compileType3Glyph(imgData) {\n        var POINT_TO_PROCESS_LIMIT = 1000;\n        var width = imgData.width,\n          height = imgData.height;\n        var i,\n          j,\n          j0,\n          width1 = width + 1;\n        var points = new Uint8Array(width1 * (height + 1));\n        var POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n        var lineSize = width + 7 & ~7,\n          data0 = imgData.data;\n        var data = new Uint8Array(lineSize * height),\n          pos = 0,\n          ii;\n        for (i = 0, ii = data0.length; i < ii; i++) {\n          var mask = 128,\n            elem = data0[i];\n          while (mask > 0) {\n            data[pos++] = elem & mask ? 0 : 255;\n            mask >>= 1;\n          }\n        }\n        var count = 0;\n        pos = 0;\n        if (data[pos] !== 0) {\n          points[0] = 1;\n          ++count;\n        }\n        for (j = 1; j < width; j++) {\n          if (data[pos] !== data[pos + 1]) {\n            points[j] = data[pos] ? 2 : 1;\n            ++count;\n          }\n          pos++;\n        }\n        if (data[pos] !== 0) {\n          points[j] = 2;\n          ++count;\n        }\n        for (i = 1; i < height; i++) {\n          pos = i * lineSize;\n          j0 = i * width1;\n          if (data[pos - lineSize] !== data[pos]) {\n            points[j0] = data[pos] ? 1 : 8;\n            ++count;\n          }\n          var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n          for (j = 1; j < width; j++) {\n            sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\n            if (POINT_TYPES[sum]) {\n              points[j0 + j] = POINT_TYPES[sum];\n              ++count;\n            }\n            pos++;\n          }\n          if (data[pos - lineSize] !== data[pos]) {\n            points[j0 + j] = data[pos] ? 2 : 4;\n            ++count;\n          }\n          if (count > POINT_TO_PROCESS_LIMIT) {\n            return null;\n          }\n        }\n        pos = lineSize * (height - 1);\n        j0 = i * width1;\n        if (data[pos] !== 0) {\n          points[j0] = 8;\n          ++count;\n        }\n        for (j = 1; j < width; j++) {\n          if (data[pos] !== data[pos + 1]) {\n            points[j0 + j] = data[pos] ? 4 : 8;\n            ++count;\n          }\n          pos++;\n        }\n        if (data[pos] !== 0) {\n          points[j0 + j] = 4;\n          ++count;\n        }\n        if (count > POINT_TO_PROCESS_LIMIT) {\n          return null;\n        }\n        var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n        var outlines = [];\n        for (i = 0; count && i <= height; i++) {\n          var p = i * width1;\n          var end = p + width;\n          while (p < end && !points[p]) {\n            p++;\n          }\n          if (p === end) {\n            continue;\n          }\n          var coords = [p % width1, i];\n          var type = points[p],\n            p0 = p,\n            pp;\n          do {\n            var step = steps[type];\n            do {\n              p += step;\n            } while (!points[p]);\n            pp = points[p];\n            if (pp !== 5 && pp !== 10) {\n              type = pp;\n              points[p] = 0;\n            } else {\n              type = pp & 0x33 * type >> 4;\n              points[p] &= type >> 2 | type << 2;\n            }\n            coords.push(p % width1);\n            coords.push(p / width1 | 0);\n            if (!points[p]) {\n              --count;\n            }\n          } while (p0 !== p);\n          outlines.push(coords);\n          --i;\n        }\n        var drawOutline = function drawOutline(c) {\n          c.save();\n          c.scale(1 / width, -1 / height);\n          c.translate(0, -height);\n          c.beginPath();\n          for (var k = 0, kk = outlines.length; k < kk; k++) {\n            var o = outlines[k];\n            c.moveTo(o[0], o[1]);\n            for (var l = 2, ll = o.length; l < ll; l += 2) {\n              c.lineTo(o[l], o[l + 1]);\n            }\n          }\n          c.fill();\n          c.beginPath();\n          c.restore();\n        };\n        return drawOutline;\n      }\n      var CanvasExtraState = function CanvasExtraStateClosure() {\n        function CanvasExtraState() {\n          this.alphaIsShape = false;\n          this.fontSize = 0;\n          this.fontSizeScale = 1;\n          this.textMatrix = _util.IDENTITY_MATRIX;\n          this.textMatrixScale = 1;\n          this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n          this.leading = 0;\n          this.x = 0;\n          this.y = 0;\n          this.lineX = 0;\n          this.lineY = 0;\n          this.charSpacing = 0;\n          this.wordSpacing = 0;\n          this.textHScale = 1;\n          this.textRenderingMode = _util.TextRenderingMode.FILL;\n          this.textRise = 0;\n          this.fillColor = \"#000000\";\n          this.strokeColor = \"#000000\";\n          this.patternFill = false;\n          this.fillAlpha = 1;\n          this.strokeAlpha = 1;\n          this.lineWidth = 1;\n          this.activeSMask = null;\n          this.resumeSMaskCtx = null;\n        }\n        CanvasExtraState.prototype = {\n          clone: function CanvasExtraState_clone() {\n            return Object.create(this);\n          },\n          setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n            this.x = x;\n            this.y = y;\n          }\n        };\n        return CanvasExtraState;\n      }();\n      var CanvasGraphics = function CanvasGraphicsClosure() {\n        var EXECUTION_TIME = 15;\n        var EXECUTION_STEPS = 10;\n        function CanvasGraphics(canvasCtx, commonObjs, objs, canvasFactory, webGLContext, imageLayer) {\n          this.ctx = canvasCtx;\n          this.current = new CanvasExtraState();\n          this.stateStack = [];\n          this.pendingClip = null;\n          this.pendingEOFill = false;\n          this.res = null;\n          this.xobjs = null;\n          this.commonObjs = commonObjs;\n          this.objs = objs;\n          this.canvasFactory = canvasFactory;\n          this.webGLContext = webGLContext;\n          this.imageLayer = imageLayer;\n          this.groupStack = [];\n          this.processingType3 = null;\n          this.baseTransform = null;\n          this.baseTransformStack = [];\n          this.groupLevel = 0;\n          this.smaskStack = [];\n          this.smaskCounter = 0;\n          this.tempSMask = null;\n          this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n          if (canvasCtx) {\n            addContextCurrentTransform(canvasCtx);\n          }\n          this._cachedGetSinglePixelWidth = null;\n        }\n        function putBinaryImageData(ctx, imgData) {\n          if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n            ctx.putImageData(imgData, 0, 0);\n            return;\n          }\n          var height = imgData.height,\n            width = imgData.width;\n          var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n          var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n          var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n          var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n          var srcPos = 0,\n            destPos;\n          var src = imgData.data;\n          var dest = chunkImgData.data;\n          var i, j, thisChunkHeight, elemsInThisChunk;\n          if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\n            var srcLength = src.byteLength;\n            var dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n            var dest32DataLength = dest32.length;\n            var fullSrcDiff = width + 7 >> 3;\n            var white = 0xffffffff;\n            var black = _util.IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n            for (i = 0; i < totalChunks; i++) {\n              thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n              destPos = 0;\n              for (j = 0; j < thisChunkHeight; j++) {\n                var srcDiff = srcLength - srcPos;\n                var k = 0;\n                var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n                var kEndUnrolled = kEnd & ~7;\n                var mask = 0;\n                var srcByte = 0;\n                for (; k < kEndUnrolled; k += 8) {\n                  srcByte = src[srcPos++];\n                  dest32[destPos++] = srcByte & 128 ? white : black;\n                  dest32[destPos++] = srcByte & 64 ? white : black;\n                  dest32[destPos++] = srcByte & 32 ? white : black;\n                  dest32[destPos++] = srcByte & 16 ? white : black;\n                  dest32[destPos++] = srcByte & 8 ? white : black;\n                  dest32[destPos++] = srcByte & 4 ? white : black;\n                  dest32[destPos++] = srcByte & 2 ? white : black;\n                  dest32[destPos++] = srcByte & 1 ? white : black;\n                }\n                for (; k < kEnd; k++) {\n                  if (mask === 0) {\n                    srcByte = src[srcPos++];\n                    mask = 128;\n                  }\n                  dest32[destPos++] = srcByte & mask ? white : black;\n                  mask >>= 1;\n                }\n              }\n              while (destPos < dest32DataLength) {\n                dest32[destPos++] = 0;\n              }\n              ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n            }\n          } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\n            j = 0;\n            elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n            for (i = 0; i < fullChunks; i++) {\n              dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n              srcPos += elemsInThisChunk;\n              ctx.putImageData(chunkImgData, 0, j);\n              j += FULL_CHUNK_HEIGHT;\n            }\n            if (i < totalChunks) {\n              elemsInThisChunk = width * partialChunkHeight * 4;\n              dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n              ctx.putImageData(chunkImgData, 0, j);\n            }\n          } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\n            thisChunkHeight = FULL_CHUNK_HEIGHT;\n            elemsInThisChunk = width * thisChunkHeight;\n            for (i = 0; i < totalChunks; i++) {\n              if (i >= fullChunks) {\n                thisChunkHeight = partialChunkHeight;\n                elemsInThisChunk = width * thisChunkHeight;\n              }\n              destPos = 0;\n              for (j = elemsInThisChunk; j--;) {\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = 255;\n              }\n              ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n            }\n          } else {\n            throw new Error(\"bad image kind: \".concat(imgData.kind));\n          }\n        }\n        function putBinaryImageMask(ctx, imgData) {\n          var height = imgData.height,\n            width = imgData.width;\n          var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n          var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n          var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n          var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n          var srcPos = 0;\n          var src = imgData.data;\n          var dest = chunkImgData.data;\n          for (var i = 0; i < totalChunks; i++) {\n            var thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n            var destPos = 3;\n            for (var j = 0; j < thisChunkHeight; j++) {\n              var mask = 0;\n              for (var k = 0; k < width; k++) {\n                if (!mask) {\n                  var elem = src[srcPos++];\n                  mask = 128;\n                }\n                dest[destPos] = elem & mask ? 0 : 255;\n                destPos += 4;\n                mask >>= 1;\n              }\n            }\n            ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n          }\n        }\n        function copyCtxState(sourceCtx, destCtx) {\n          var properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\"];\n          for (var i = 0, ii = properties.length; i < ii; i++) {\n            var property = properties[i];\n            if (sourceCtx[property] !== undefined) {\n              destCtx[property] = sourceCtx[property];\n            }\n          }\n          if (sourceCtx.setLineDash !== undefined) {\n            destCtx.setLineDash(sourceCtx.getLineDash());\n            destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n          }\n        }\n        function resetCtxToDefault(ctx) {\n          ctx.strokeStyle = \"#000000\";\n          ctx.fillStyle = \"#000000\";\n          ctx.fillRule = \"nonzero\";\n          ctx.globalAlpha = 1;\n          ctx.lineWidth = 1;\n          ctx.lineCap = \"butt\";\n          ctx.lineJoin = \"miter\";\n          ctx.miterLimit = 10;\n          ctx.globalCompositeOperation = \"source-over\";\n          ctx.font = \"10px sans-serif\";\n          if (ctx.setLineDash !== undefined) {\n            ctx.setLineDash([]);\n            ctx.lineDashOffset = 0;\n          }\n        }\n        function composeSMaskBackdrop(bytes, r0, g0, b0) {\n          var length = bytes.length;\n          for (var i = 3; i < length; i += 4) {\n            var alpha = bytes[i];\n            if (alpha === 0) {\n              bytes[i - 3] = r0;\n              bytes[i - 2] = g0;\n              bytes[i - 1] = b0;\n            } else if (alpha < 255) {\n              var alpha_ = 255 - alpha;\n              bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\n              bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\n              bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\n            }\n          }\n        }\n        function composeSMaskAlpha(maskData, layerData, transferMap) {\n          var length = maskData.length;\n          var scale = 1 / 255;\n          for (var i = 3; i < length; i += 4) {\n            var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n            layerData[i] = layerData[i] * alpha * scale | 0;\n          }\n        }\n        function composeSMaskLuminosity(maskData, layerData, transferMap) {\n          var length = maskData.length;\n          for (var i = 3; i < length; i += 4) {\n            var y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\n            layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\n          }\n        }\n        function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap) {\n          var hasBackdrop = !!backdrop;\n          var r0 = hasBackdrop ? backdrop[0] : 0;\n          var g0 = hasBackdrop ? backdrop[1] : 0;\n          var b0 = hasBackdrop ? backdrop[2] : 0;\n          var composeFn;\n          if (subtype === \"Luminosity\") {\n            composeFn = composeSMaskLuminosity;\n          } else {\n            composeFn = composeSMaskAlpha;\n          }\n          var PIXELS_TO_PROCESS = 1048576;\n          var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n          for (var row = 0; row < height; row += chunkSize) {\n            var chunkHeight = Math.min(chunkSize, height - row);\n            var maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n            var layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n            if (hasBackdrop) {\n              composeSMaskBackdrop(maskData.data, r0, g0, b0);\n            }\n            composeFn(maskData.data, layerData.data, transferMap);\n            maskCtx.putImageData(layerData, 0, row);\n          }\n        }\n        function composeSMask(ctx, smask, layerCtx, webGLContext) {\n          var mask = smask.canvas;\n          var maskCtx = smask.context;\n          ctx.setTransform(smask.scaleX, 0, 0, smask.scaleY, smask.offsetX, smask.offsetY);\n          var backdrop = smask.backdrop || null;\n          if (!smask.transferMap && webGLContext.isEnabled) {\n            var composed = webGLContext.composeSMask({\n              layer: layerCtx.canvas,\n              mask: mask,\n              properties: {\n                subtype: smask.subtype,\n                backdrop: backdrop\n              }\n            });\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n            return;\n          }\n          genericComposeSMask(maskCtx, layerCtx, mask.width, mask.height, smask.subtype, backdrop, smask.transferMap);\n          ctx.drawImage(mask, 0, 0);\n        }\n        var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n        var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n        var NORMAL_CLIP = {};\n        var EO_CLIP = {};\n        CanvasGraphics.prototype = {\n          beginDrawing: function beginDrawing(_ref) {\n            var transform = _ref.transform,\n              viewport = _ref.viewport,\n              _ref$transparency = _ref.transparency,\n              transparency = _ref$transparency === void 0 ? false : _ref$transparency,\n              _ref$background = _ref.background,\n              background = _ref$background === void 0 ? null : _ref$background;\n            var width = this.ctx.canvas.width;\n            var height = this.ctx.canvas.height;\n            this.ctx.save();\n            this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n            this.ctx.fillRect(0, 0, width, height);\n            this.ctx.restore();\n            if (transparency) {\n              var transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height, true);\n              this.compositeCtx = this.ctx;\n              this.transparentCanvas = transparentCanvas.canvas;\n              this.ctx = transparentCanvas.context;\n              this.ctx.save();\n              this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n            }\n            this.ctx.save();\n            resetCtxToDefault(this.ctx);\n            if (transform) {\n              this.ctx.transform.apply(this.ctx, transform);\n            }\n            this.ctx.transform.apply(this.ctx, viewport.transform);\n            this.baseTransform = this.ctx.mozCurrentTransform.slice();\n            if (this.imageLayer) {\n              this.imageLayer.beginLayout();\n            }\n          },\n          executeOperatorList: function CanvasGraphics_executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\n            var argsArray = operatorList.argsArray;\n            var fnArray = operatorList.fnArray;\n            var i = executionStartIdx || 0;\n            var argsArrayLen = argsArray.length;\n            if (argsArrayLen === i) {\n              return i;\n            }\n            var chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n            var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n            var steps = 0;\n            var commonObjs = this.commonObjs;\n            var objs = this.objs;\n            var fnId;\n            while (true) {\n              if (stepper !== undefined && i === stepper.nextBreakPoint) {\n                stepper.breakIt(i, continueCallback);\n                return i;\n              }\n              fnId = fnArray[i];\n              if (fnId !== _util.OPS.dependency) {\n                this[fnId].apply(this, argsArray[i]);\n              } else {\n                var _iterator = _createForOfIteratorHelper(argsArray[i]),\n                  _step;\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    var depObjId = _step.value;\n                    var objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n                    if (!objsPool.has(depObjId)) {\n                      objsPool.get(depObjId, continueCallback);\n                      return i;\n                    }\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n              }\n              i++;\n              if (i === argsArrayLen) {\n                return i;\n              }\n              if (chunkOperations && ++steps > EXECUTION_STEPS) {\n                if (Date.now() > endTime) {\n                  continueCallback();\n                  return i;\n                }\n                steps = 0;\n              }\n            }\n          },\n          endDrawing: function CanvasGraphics_endDrawing() {\n            if (this.current.activeSMask !== null) {\n              this.endSMaskGroup();\n            }\n            this.ctx.restore();\n            if (this.transparentCanvas) {\n              this.ctx = this.compositeCtx;\n              this.ctx.save();\n              this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n              this.ctx.drawImage(this.transparentCanvas, 0, 0);\n              this.ctx.restore();\n              this.transparentCanvas = null;\n            }\n            this.cachedCanvases.clear();\n            this.webGLContext.clear();\n            if (this.imageLayer) {\n              this.imageLayer.endLayout();\n            }\n          },\n          setLineWidth: function CanvasGraphics_setLineWidth(width) {\n            this.current.lineWidth = width;\n            this.ctx.lineWidth = width;\n          },\n          setLineCap: function CanvasGraphics_setLineCap(style) {\n            this.ctx.lineCap = LINE_CAP_STYLES[style];\n          },\n          setLineJoin: function CanvasGraphics_setLineJoin(style) {\n            this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n          },\n          setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n            this.ctx.miterLimit = limit;\n          },\n          setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n            var ctx = this.ctx;\n            if (ctx.setLineDash !== undefined) {\n              ctx.setLineDash(dashArray);\n              ctx.lineDashOffset = dashPhase;\n            }\n          },\n          setRenderingIntent: function setRenderingIntent(intent) {},\n          setFlatness: function setFlatness(flatness) {},\n          setGState: function CanvasGraphics_setGState(states) {\n            for (var i = 0, ii = states.length; i < ii; i++) {\n              var state = states[i];\n              var key = state[0];\n              var value = state[1];\n              switch (key) {\n                case \"LW\":\n                  this.setLineWidth(value);\n                  break;\n                case \"LC\":\n                  this.setLineCap(value);\n                  break;\n                case \"LJ\":\n                  this.setLineJoin(value);\n                  break;\n                case \"ML\":\n                  this.setMiterLimit(value);\n                  break;\n                case \"D\":\n                  this.setDash(value[0], value[1]);\n                  break;\n                case \"RI\":\n                  this.setRenderingIntent(value);\n                  break;\n                case \"FL\":\n                  this.setFlatness(value);\n                  break;\n                case \"Font\":\n                  this.setFont(value[0], value[1]);\n                  break;\n                case \"CA\":\n                  this.current.strokeAlpha = state[1];\n                  break;\n                case \"ca\":\n                  this.current.fillAlpha = state[1];\n                  this.ctx.globalAlpha = state[1];\n                  break;\n                case \"BM\":\n                  this.ctx.globalCompositeOperation = value;\n                  break;\n                case \"SMask\":\n                  if (this.current.activeSMask) {\n                    if (this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1].activeSMask === this.current.activeSMask) {\n                      this.suspendSMaskGroup();\n                    } else {\n                      this.endSMaskGroup();\n                    }\n                  }\n                  this.current.activeSMask = value ? this.tempSMask : null;\n                  if (this.current.activeSMask) {\n                    this.beginSMaskGroup();\n                  }\n                  this.tempSMask = null;\n                  break;\n              }\n            }\n          },\n          beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n            var activeSMask = this.current.activeSMask;\n            var drawnWidth = activeSMask.canvas.width;\n            var drawnHeight = activeSMask.canvas.height;\n            var cacheId = \"smaskGroupAt\" + this.groupLevel;\n            var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n            var currentCtx = this.ctx;\n            var currentTransform = currentCtx.mozCurrentTransform;\n            this.ctx.save();\n            var groupCtx = scratchCanvas.context;\n            groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n            groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n            groupCtx.transform.apply(groupCtx, currentTransform);\n            activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n            copyCtxState(currentCtx, groupCtx);\n            this.ctx = groupCtx;\n            this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n            this.groupStack.push(currentCtx);\n            this.groupLevel++;\n          },\n          suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n            var groupCtx = this.ctx;\n            this.groupLevel--;\n            this.ctx = this.groupStack.pop();\n            composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n            this.ctx.restore();\n            this.ctx.save();\n            copyCtxState(groupCtx, this.ctx);\n            this.current.resumeSMaskCtx = groupCtx;\n            var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n            this.ctx.transform.apply(this.ctx, deltaTransform);\n            groupCtx.save();\n            groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n            groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n            groupCtx.restore();\n          },\n          resumeSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n            var groupCtx = this.current.resumeSMaskCtx;\n            var currentCtx = this.ctx;\n            this.ctx = groupCtx;\n            this.groupStack.push(currentCtx);\n            this.groupLevel++;\n          },\n          endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n            var groupCtx = this.ctx;\n            this.groupLevel--;\n            this.ctx = this.groupStack.pop();\n            composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n            this.ctx.restore();\n            copyCtxState(groupCtx, this.ctx);\n            var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n            this.ctx.transform.apply(this.ctx, deltaTransform);\n          },\n          save: function CanvasGraphics_save() {\n            this.ctx.save();\n            var old = this.current;\n            this.stateStack.push(old);\n            this.current = old.clone();\n            this.current.resumeSMaskCtx = null;\n          },\n          restore: function CanvasGraphics_restore() {\n            if (this.current.resumeSMaskCtx) {\n              this.resumeSMaskGroup();\n            }\n            if (this.current.activeSMask !== null && (this.stateStack.length === 0 || this.stateStack[this.stateStack.length - 1].activeSMask !== this.current.activeSMask)) {\n              this.endSMaskGroup();\n            }\n            if (this.stateStack.length !== 0) {\n              this.current = this.stateStack.pop();\n              this.ctx.restore();\n              this.pendingClip = null;\n              this._cachedGetSinglePixelWidth = null;\n            }\n          },\n          transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n            this.ctx.transform(a, b, c, d, e, f);\n            this._cachedGetSinglePixelWidth = null;\n          },\n          constructPath: function CanvasGraphics_constructPath(ops, args) {\n            var ctx = this.ctx;\n            var current = this.current;\n            var x = current.x,\n              y = current.y;\n            for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {\n              switch (ops[i] | 0) {\n                case _util.OPS.rectangle:\n                  x = args[j++];\n                  y = args[j++];\n                  var width = args[j++];\n                  var height = args[j++];\n                  if (width === 0) {\n                    width = this.getSinglePixelWidth();\n                  }\n                  if (height === 0) {\n                    height = this.getSinglePixelWidth();\n                  }\n                  var xw = x + width;\n                  var yh = y + height;\n                  this.ctx.moveTo(x, y);\n                  this.ctx.lineTo(xw, y);\n                  this.ctx.lineTo(xw, yh);\n                  this.ctx.lineTo(x, yh);\n                  this.ctx.lineTo(x, y);\n                  this.ctx.closePath();\n                  break;\n                case _util.OPS.moveTo:\n                  x = args[j++];\n                  y = args[j++];\n                  ctx.moveTo(x, y);\n                  break;\n                case _util.OPS.lineTo:\n                  x = args[j++];\n                  y = args[j++];\n                  ctx.lineTo(x, y);\n                  break;\n                case _util.OPS.curveTo:\n                  x = args[j + 4];\n                  y = args[j + 5];\n                  ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n                  j += 6;\n                  break;\n                case _util.OPS.curveTo2:\n                  ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  j += 4;\n                  break;\n                case _util.OPS.curveTo3:\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n                  j += 4;\n                  break;\n                case _util.OPS.closePath:\n                  ctx.closePath();\n                  break;\n              }\n            }\n            current.setCurrentPoint(x, y);\n          },\n          closePath: function CanvasGraphics_closePath() {\n            this.ctx.closePath();\n          },\n          stroke: function CanvasGraphics_stroke(consumePath) {\n            consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n            var ctx = this.ctx;\n            var strokeColor = this.current.strokeColor;\n            ctx.globalAlpha = this.current.strokeAlpha;\n            if (strokeColor && strokeColor.hasOwnProperty(\"type\") && strokeColor.type === \"Pattern\") {\n              ctx.save();\n              var transform = ctx.mozCurrentTransform;\n              var scale = _util.Util.singularValueDecompose2dScale(transform)[0];\n              ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n              ctx.lineWidth = Math.max(this.getSinglePixelWidth() * MIN_WIDTH_FACTOR, this.current.lineWidth * scale);\n              ctx.stroke();\n              ctx.restore();\n            } else {\n              ctx.lineWidth = Math.max(this.getSinglePixelWidth() * MIN_WIDTH_FACTOR, this.current.lineWidth);\n              ctx.stroke();\n            }\n            if (consumePath) {\n              this.consumePath();\n            }\n            ctx.globalAlpha = this.current.fillAlpha;\n          },\n          closeStroke: function CanvasGraphics_closeStroke() {\n            this.closePath();\n            this.stroke();\n          },\n          fill: function CanvasGraphics_fill(consumePath) {\n            consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n            var ctx = this.ctx;\n            var fillColor = this.current.fillColor;\n            var isPatternFill = this.current.patternFill;\n            var needRestore = false;\n            if (isPatternFill) {\n              ctx.save();\n              if (this.baseTransform) {\n                ctx.setTransform.apply(ctx, this.baseTransform);\n              }\n              ctx.fillStyle = fillColor.getPattern(ctx, this);\n              needRestore = true;\n            }\n            if (this.pendingEOFill) {\n              ctx.fill(\"evenodd\");\n              this.pendingEOFill = false;\n            } else {\n              ctx.fill();\n            }\n            if (needRestore) {\n              ctx.restore();\n            }\n            if (consumePath) {\n              this.consumePath();\n            }\n          },\n          eoFill: function CanvasGraphics_eoFill() {\n            this.pendingEOFill = true;\n            this.fill();\n          },\n          fillStroke: function CanvasGraphics_fillStroke() {\n            this.fill(false);\n            this.stroke(false);\n            this.consumePath();\n          },\n          eoFillStroke: function CanvasGraphics_eoFillStroke() {\n            this.pendingEOFill = true;\n            this.fillStroke();\n          },\n          closeFillStroke: function CanvasGraphics_closeFillStroke() {\n            this.closePath();\n            this.fillStroke();\n          },\n          closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n            this.pendingEOFill = true;\n            this.closePath();\n            this.fillStroke();\n          },\n          endPath: function CanvasGraphics_endPath() {\n            this.consumePath();\n          },\n          clip: function CanvasGraphics_clip() {\n            this.pendingClip = NORMAL_CLIP;\n          },\n          eoClip: function CanvasGraphics_eoClip() {\n            this.pendingClip = EO_CLIP;\n          },\n          beginText: function CanvasGraphics_beginText() {\n            this.current.textMatrix = _util.IDENTITY_MATRIX;\n            this.current.textMatrixScale = 1;\n            this.current.x = this.current.lineX = 0;\n            this.current.y = this.current.lineY = 0;\n          },\n          endText: function CanvasGraphics_endText() {\n            var paths = this.pendingTextPaths;\n            var ctx = this.ctx;\n            if (paths === undefined) {\n              ctx.beginPath();\n              return;\n            }\n            ctx.save();\n            ctx.beginPath();\n            for (var i = 0; i < paths.length; i++) {\n              var path = paths[i];\n              ctx.setTransform.apply(ctx, path.transform);\n              ctx.translate(path.x, path.y);\n              path.addToPath(ctx, path.fontSize);\n            }\n            ctx.restore();\n            ctx.clip();\n            ctx.beginPath();\n            delete this.pendingTextPaths;\n          },\n          setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n            this.current.charSpacing = spacing;\n          },\n          setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n            this.current.wordSpacing = spacing;\n          },\n          setHScale: function CanvasGraphics_setHScale(scale) {\n            this.current.textHScale = scale / 100;\n          },\n          setLeading: function CanvasGraphics_setLeading(leading) {\n            this.current.leading = -leading;\n          },\n          setFont: function CanvasGraphics_setFont(fontRefName, size) {\n            var fontObj = this.commonObjs.get(fontRefName);\n            var current = this.current;\n            if (!fontObj) {\n              throw new Error(\"Can't find font for \".concat(fontRefName));\n            }\n            current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : _util.FONT_IDENTITY_MATRIX;\n            if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n              (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName);\n            }\n            if (size < 0) {\n              size = -size;\n              current.fontDirection = -1;\n            } else {\n              current.fontDirection = 1;\n            }\n            this.current.font = fontObj;\n            this.current.fontSize = size;\n            if (fontObj.isType3Font) {\n              return;\n            }\n            var name = fontObj.loadedName || \"sans-serif\";\n            var bold = \"normal\";\n            if (fontObj.black) {\n              bold = \"900\";\n            } else if (fontObj.bold) {\n              bold = \"bold\";\n            }\n            var italic = fontObj.italic ? \"italic\" : \"normal\";\n            var typeface = \"\\\"\".concat(name, \"\\\", \").concat(fontObj.fallbackName);\n            var browserFontSize = size;\n            if (size < MIN_FONT_SIZE) {\n              browserFontSize = MIN_FONT_SIZE;\n            } else if (size > MAX_FONT_SIZE) {\n              browserFontSize = MAX_FONT_SIZE;\n            }\n            this.current.fontSizeScale = size / browserFontSize;\n            this.ctx.font = \"\".concat(italic, \" \").concat(bold, \" \").concat(browserFontSize, \"px \").concat(typeface);\n          },\n          setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n            this.current.textRenderingMode = mode;\n          },\n          setTextRise: function CanvasGraphics_setTextRise(rise) {\n            this.current.textRise = rise;\n          },\n          moveText: function CanvasGraphics_moveText(x, y) {\n            this.current.x = this.current.lineX += x;\n            this.current.y = this.current.lineY += y;\n          },\n          setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n            this.setLeading(-y);\n            this.moveText(x, y);\n          },\n          setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n            this.current.textMatrix = [a, b, c, d, e, f];\n            this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n            this.current.x = this.current.lineX = 0;\n            this.current.y = this.current.lineY = 0;\n          },\n          nextLine: function CanvasGraphics_nextLine() {\n            this.moveText(0, this.current.leading);\n          },\n          paintChar: function paintChar(character, x, y, patternTransform) {\n            var ctx = this.ctx;\n            var current = this.current;\n            var font = current.font;\n            var textRenderingMode = current.textRenderingMode;\n            var fontSize = current.fontSize / current.fontSizeScale;\n            var fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n            var isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n            var patternFill = current.patternFill && !font.missingFile;\n            var addToPath;\n            if (font.disableFontFace || isAddToPathSet || patternFill) {\n              addToPath = font.getPathGenerator(this.commonObjs, character);\n            }\n            if (font.disableFontFace || patternFill) {\n              ctx.save();\n              ctx.translate(x, y);\n              ctx.beginPath();\n              addToPath(ctx, fontSize);\n              if (patternTransform) {\n                ctx.setTransform.apply(ctx, patternTransform);\n              }\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.fill();\n              }\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.stroke();\n              }\n              ctx.restore();\n            } else {\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.fillText(character, x, y);\n              }\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.strokeText(character, x, y);\n              }\n            }\n            if (isAddToPathSet) {\n              var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n              paths.push({\n                transform: ctx.mozCurrentTransform,\n                x: x,\n                y: y,\n                fontSize: fontSize,\n                addToPath: addToPath\n              });\n            }\n          },\n          get isFontSubpixelAAEnabled() {\n            var _this$cachedCanvases$ = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10),\n              ctx = _this$cachedCanvases$.context;\n            ctx.scale(1.5, 1);\n            ctx.fillText(\"I\", 0, 10);\n            var data = ctx.getImageData(0, 0, 10, 10).data;\n            var enabled = false;\n            for (var i = 3; i < data.length; i += 4) {\n              if (data[i] > 0 && data[i] < 255) {\n                enabled = true;\n                break;\n              }\n            }\n            return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled);\n          },\n          showText: function CanvasGraphics_showText(glyphs) {\n            var current = this.current;\n            var font = current.font;\n            if (font.isType3Font) {\n              return this.showType3Text(glyphs);\n            }\n            var fontSize = current.fontSize;\n            if (fontSize === 0) {\n              return undefined;\n            }\n            var ctx = this.ctx;\n            var fontSizeScale = current.fontSizeScale;\n            var charSpacing = current.charSpacing;\n            var wordSpacing = current.wordSpacing;\n            var fontDirection = current.fontDirection;\n            var textHScale = current.textHScale * fontDirection;\n            var glyphsLength = glyphs.length;\n            var vertical = font.vertical;\n            var spacingDir = vertical ? 1 : -1;\n            var defaultVMetrics = font.defaultVMetrics;\n            var widthAdvanceScale = fontSize * current.fontMatrix[0];\n            var simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n            ctx.save();\n            var patternTransform;\n            if (current.patternFill) {\n              ctx.save();\n              var pattern = current.fillColor.getPattern(ctx, this);\n              patternTransform = ctx.mozCurrentTransform;\n              ctx.restore();\n              ctx.fillStyle = pattern;\n            }\n            ctx.transform.apply(ctx, current.textMatrix);\n            ctx.translate(current.x, current.y + current.textRise);\n            if (fontDirection > 0) {\n              ctx.scale(textHScale, -1);\n            } else {\n              ctx.scale(textHScale, 1);\n            }\n            var lineWidth = current.lineWidth;\n            var scale = current.textMatrixScale;\n            if (scale === 0 || lineWidth === 0) {\n              var fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                this._cachedGetSinglePixelWidth = null;\n                lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;\n              }\n            } else {\n              lineWidth /= scale;\n            }\n            if (fontSizeScale !== 1.0) {\n              ctx.scale(fontSizeScale, fontSizeScale);\n              lineWidth /= fontSizeScale;\n            }\n            ctx.lineWidth = lineWidth;\n            var x = 0,\n              i;\n            for (i = 0; i < glyphsLength; ++i) {\n              var glyph = glyphs[i];\n              if ((0, _util.isNum)(glyph)) {\n                x += spacingDir * glyph * fontSize / 1000;\n                continue;\n              }\n              var restoreNeeded = false;\n              var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              var character = glyph.fontChar;\n              var accent = glyph.accent;\n              var scaledX, scaledY, scaledAccentX, scaledAccentY;\n              var width = glyph.width;\n              if (vertical) {\n                var vmetric, vx, vy;\n                vmetric = glyph.vmetric || defaultVMetrics;\n                vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n                vx = -vx * widthAdvanceScale;\n                vy = vmetric[2] * widthAdvanceScale;\n                width = vmetric ? -vmetric[0] : width;\n                scaledX = vx / fontSizeScale;\n                scaledY = (x + vy) / fontSizeScale;\n              } else {\n                scaledX = x / fontSizeScale;\n                scaledY = 0;\n              }\n              if (font.remeasure && width > 0) {\n                var measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\n                if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n                  var characterScaleX = width / measuredWidth;\n                  restoreNeeded = true;\n                  ctx.save();\n                  ctx.scale(characterScaleX, 1);\n                  scaledX /= characterScaleX;\n                } else if (width !== measuredWidth) {\n                  scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n                }\n              }\n              if (glyph.isInFont || font.missingFile) {\n                if (simpleFillText && !accent) {\n                  ctx.fillText(character, scaledX, scaledY);\n                } else {\n                  this.paintChar(character, scaledX, scaledY, patternTransform);\n                  if (accent) {\n                    scaledAccentX = scaledX + accent.offset.x / fontSizeScale;\n                    scaledAccentY = scaledY - accent.offset.y / fontSizeScale;\n                    this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform);\n                  }\n                }\n              }\n              var charWidth;\n              if (vertical) {\n                charWidth = width * widthAdvanceScale - spacing * fontDirection;\n              } else {\n                charWidth = width * widthAdvanceScale + spacing * fontDirection;\n              }\n              x += charWidth;\n              if (restoreNeeded) {\n                ctx.restore();\n              }\n            }\n            if (vertical) {\n              current.y -= x;\n            } else {\n              current.x += x * textHScale;\n            }\n            ctx.restore();\n          },\n          showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n            var ctx = this.ctx;\n            var current = this.current;\n            var font = current.font;\n            var fontSize = current.fontSize;\n            var fontDirection = current.fontDirection;\n            var spacingDir = font.vertical ? 1 : -1;\n            var charSpacing = current.charSpacing;\n            var wordSpacing = current.wordSpacing;\n            var textHScale = current.textHScale * fontDirection;\n            var fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n            var glyphsLength = glyphs.length;\n            var isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\n            var i, glyph, width, spacingLength;\n            if (isTextInvisible || fontSize === 0) {\n              return;\n            }\n            this._cachedGetSinglePixelWidth = null;\n            ctx.save();\n            ctx.transform.apply(ctx, current.textMatrix);\n            ctx.translate(current.x, current.y);\n            ctx.scale(textHScale, fontDirection);\n            for (i = 0; i < glyphsLength; ++i) {\n              glyph = glyphs[i];\n              if ((0, _util.isNum)(glyph)) {\n                spacingLength = spacingDir * glyph * fontSize / 1000;\n                this.ctx.translate(spacingLength, 0);\n                current.x += spacingLength * textHScale;\n                continue;\n              }\n              var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              var operatorList = font.charProcOperatorList[glyph.operatorListId];\n              if (!operatorList) {\n                (0, _util.warn)(\"Type3 character \\\"\".concat(glyph.operatorListId, \"\\\" is not available.\"));\n                continue;\n              }\n              this.processingType3 = glyph;\n              this.save();\n              ctx.scale(fontSize, fontSize);\n              ctx.transform.apply(ctx, fontMatrix);\n              this.executeOperatorList(operatorList);\n              this.restore();\n              var transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);\n              width = transformed[0] * fontSize + spacing;\n              ctx.translate(width, 0);\n              current.x += width * textHScale;\n            }\n            ctx.restore();\n            this.processingType3 = null;\n          },\n          setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {},\n          setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n            this.ctx.rect(llx, lly, urx - llx, ury - lly);\n            this.clip();\n            this.endPath();\n          },\n          getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n            var _this = this;\n            var pattern;\n            if (IR[0] === \"TilingPattern\") {\n              var color = IR[1];\n              var baseTransform = this.baseTransform || this.ctx.mozCurrentTransform.slice();\n              var canvasGraphicsFactory = {\n                createCanvasGraphics: function createCanvasGraphics(ctx) {\n                  return new CanvasGraphics(ctx, _this.commonObjs, _this.objs, _this.canvasFactory, _this.webGLContext);\n                }\n              };\n              pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\n            } else {\n              pattern = (0, _pattern_helper.getShadingPatternFromIR)(IR);\n            }\n            return pattern;\n          },\n          setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n            this.current.strokeColor = this.getColorN_Pattern(arguments);\n          },\n          setFillColorN: function CanvasGraphics_setFillColorN() {\n            this.current.fillColor = this.getColorN_Pattern(arguments);\n            this.current.patternFill = true;\n          },\n          setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n            var color = _util.Util.makeCssRgb(r, g, b);\n            this.ctx.strokeStyle = color;\n            this.current.strokeColor = color;\n          },\n          setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n            var color = _util.Util.makeCssRgb(r, g, b);\n            this.ctx.fillStyle = color;\n            this.current.fillColor = color;\n            this.current.patternFill = false;\n          },\n          shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n            var ctx = this.ctx;\n            this.save();\n            var pattern = (0, _pattern_helper.getShadingPatternFromIR)(patternIR);\n            ctx.fillStyle = pattern.getPattern(ctx, this, true);\n            var inv = ctx.mozCurrentTransformInverse;\n            if (inv) {\n              var canvas = ctx.canvas;\n              var width = canvas.width;\n              var height = canvas.height;\n              var bl = _util.Util.applyTransform([0, 0], inv);\n              var br = _util.Util.applyTransform([0, height], inv);\n              var ul = _util.Util.applyTransform([width, 0], inv);\n              var ur = _util.Util.applyTransform([width, height], inv);\n              var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n              var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n              var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n              var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n              this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n            } else {\n              this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n            }\n            this.restore();\n          },\n          beginInlineImage: function CanvasGraphics_beginInlineImage() {\n            (0, _util.unreachable)(\"Should not call beginInlineImage\");\n          },\n          beginImageData: function CanvasGraphics_beginImageData() {\n            (0, _util.unreachable)(\"Should not call beginImageData\");\n          },\n          paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(matrix, bbox) {\n            this.save();\n            this.baseTransformStack.push(this.baseTransform);\n            if (Array.isArray(matrix) && matrix.length === 6) {\n              this.transform.apply(this, matrix);\n            }\n            this.baseTransform = this.ctx.mozCurrentTransform;\n            if (bbox) {\n              var width = bbox[2] - bbox[0];\n              var height = bbox[3] - bbox[1];\n              this.ctx.rect(bbox[0], bbox[1], width, height);\n              this.clip();\n              this.endPath();\n            }\n          },\n          paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n            this.restore();\n            this.baseTransform = this.baseTransformStack.pop();\n          },\n          beginGroup: function CanvasGraphics_beginGroup(group) {\n            this.save();\n            var currentCtx = this.ctx;\n            if (!group.isolated) {\n              (0, _util.info)(\"TODO: Support non-isolated groups.\");\n            }\n            if (group.knockout) {\n              (0, _util.warn)(\"Knockout groups not supported.\");\n            }\n            var currentTransform = currentCtx.mozCurrentTransform;\n            if (group.matrix) {\n              currentCtx.transform.apply(currentCtx, group.matrix);\n            }\n            if (!group.bbox) {\n              throw new Error(\"Bounding box is required.\");\n            }\n            var bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, currentCtx.mozCurrentTransform);\n            var canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\n            bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n            var offsetX = Math.floor(bounds[0]);\n            var offsetY = Math.floor(bounds[1]);\n            var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n            var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n            var scaleX = 1,\n              scaleY = 1;\n            if (drawnWidth > MAX_GROUP_SIZE) {\n              scaleX = drawnWidth / MAX_GROUP_SIZE;\n              drawnWidth = MAX_GROUP_SIZE;\n            }\n            if (drawnHeight > MAX_GROUP_SIZE) {\n              scaleY = drawnHeight / MAX_GROUP_SIZE;\n              drawnHeight = MAX_GROUP_SIZE;\n            }\n            var cacheId = \"groupAt\" + this.groupLevel;\n            if (group.smask) {\n              cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n            }\n            var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n            var groupCtx = scratchCanvas.context;\n            groupCtx.scale(1 / scaleX, 1 / scaleY);\n            groupCtx.translate(-offsetX, -offsetY);\n            groupCtx.transform.apply(groupCtx, currentTransform);\n            if (group.smask) {\n              this.smaskStack.push({\n                canvas: scratchCanvas.canvas,\n                context: groupCtx,\n                offsetX: offsetX,\n                offsetY: offsetY,\n                scaleX: scaleX,\n                scaleY: scaleY,\n                subtype: group.smask.subtype,\n                backdrop: group.smask.backdrop,\n                transferMap: group.smask.transferMap || null,\n                startTransformInverse: null\n              });\n            } else {\n              currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n              currentCtx.translate(offsetX, offsetY);\n              currentCtx.scale(scaleX, scaleY);\n            }\n            copyCtxState(currentCtx, groupCtx);\n            this.ctx = groupCtx;\n            this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n            this.groupStack.push(currentCtx);\n            this.groupLevel++;\n            this.current.activeSMask = null;\n          },\n          endGroup: function CanvasGraphics_endGroup(group) {\n            this.groupLevel--;\n            var groupCtx = this.ctx;\n            this.ctx = this.groupStack.pop();\n            if (this.ctx.imageSmoothingEnabled !== undefined) {\n              this.ctx.imageSmoothingEnabled = false;\n            } else {\n              this.ctx.mozImageSmoothingEnabled = false;\n            }\n            if (group.smask) {\n              this.tempSMask = this.smaskStack.pop();\n            } else {\n              this.ctx.drawImage(groupCtx.canvas, 0, 0);\n            }\n            this.restore();\n          },\n          beginAnnotations: function CanvasGraphics_beginAnnotations() {\n            this.save();\n            if (this.baseTransform) {\n              this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n            }\n          },\n          endAnnotations: function CanvasGraphics_endAnnotations() {\n            this.restore();\n          },\n          beginAnnotation: function CanvasGraphics_beginAnnotation(rect, transform, matrix) {\n            this.save();\n            resetCtxToDefault(this.ctx);\n            this.current = new CanvasExtraState();\n            if (Array.isArray(rect) && rect.length === 4) {\n              var width = rect[2] - rect[0];\n              var height = rect[3] - rect[1];\n              this.ctx.rect(rect[0], rect[1], width, height);\n              this.clip();\n              this.endPath();\n            }\n            this.transform.apply(this, transform);\n            this.transform.apply(this, matrix);\n          },\n          endAnnotation: function CanvasGraphics_endAnnotation() {\n            this.restore();\n          },\n          paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n            var ctx = this.ctx;\n            var width = img.width,\n              height = img.height;\n            var fillColor = this.current.fillColor;\n            var isPatternFill = this.current.patternFill;\n            var glyph = this.processingType3;\n            if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n              if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n                glyph.compiled = compileType3Glyph({\n                  data: img.data,\n                  width: width,\n                  height: height\n                });\n              } else {\n                glyph.compiled = null;\n              }\n            }\n            if (glyph && glyph.compiled) {\n              glyph.compiled(ctx);\n              return;\n            }\n            var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n            var maskCtx = maskCanvas.context;\n            maskCtx.save();\n            putBinaryImageMask(maskCtx, img);\n            maskCtx.globalCompositeOperation = \"source-in\";\n            maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n            maskCtx.fillRect(0, 0, width, height);\n            maskCtx.restore();\n            this.paintInlineImageXObject(maskCanvas.canvas);\n          },\n          paintImageMaskXObjectRepeat: function CanvasGraphics_paintImageMaskXObjectRepeat(imgData, scaleX, scaleY, positions) {\n            var width = imgData.width;\n            var height = imgData.height;\n            var fillColor = this.current.fillColor;\n            var isPatternFill = this.current.patternFill;\n            var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n            var maskCtx = maskCanvas.context;\n            maskCtx.save();\n            putBinaryImageMask(maskCtx, imgData);\n            maskCtx.globalCompositeOperation = \"source-in\";\n            maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n            maskCtx.fillRect(0, 0, width, height);\n            maskCtx.restore();\n            var ctx = this.ctx;\n            for (var i = 0, ii = positions.length; i < ii; i += 2) {\n              ctx.save();\n              ctx.transform(scaleX, 0, 0, scaleY, positions[i], positions[i + 1]);\n              ctx.scale(1, -1);\n              ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n              ctx.restore();\n            }\n          },\n          paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(images) {\n            var ctx = this.ctx;\n            var fillColor = this.current.fillColor;\n            var isPatternFill = this.current.patternFill;\n            for (var i = 0, ii = images.length; i < ii; i++) {\n              var image = images[i];\n              var width = image.width,\n                height = image.height;\n              var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n              var maskCtx = maskCanvas.context;\n              maskCtx.save();\n              putBinaryImageMask(maskCtx, image);\n              maskCtx.globalCompositeOperation = \"source-in\";\n              maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n              maskCtx.fillRect(0, 0, width, height);\n              maskCtx.restore();\n              ctx.save();\n              ctx.transform.apply(ctx, image.transform);\n              ctx.scale(1, -1);\n              ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n              ctx.restore();\n            }\n          },\n          paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n            var imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n            if (!imgData) {\n              (0, _util.warn)(\"Dependent image isn't ready yet\");\n              return;\n            }\n            this.paintInlineImageXObject(imgData);\n          },\n          paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n            var imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n            if (!imgData) {\n              (0, _util.warn)(\"Dependent image isn't ready yet\");\n              return;\n            }\n            var width = imgData.width;\n            var height = imgData.height;\n            var map = [];\n            for (var i = 0, ii = positions.length; i < ii; i += 2) {\n              map.push({\n                transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n                x: 0,\n                y: 0,\n                w: width,\n                h: height\n              });\n            }\n            this.paintInlineImageXObjectGroup(imgData, map);\n          },\n          paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(imgData) {\n            var width = imgData.width;\n            var height = imgData.height;\n            var ctx = this.ctx;\n            this.save();\n            ctx.scale(1 / width, -1 / height);\n            var currentTransform = ctx.mozCurrentTransformInverse;\n            var a = currentTransform[0],\n              b = currentTransform[1];\n            var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n            var c = currentTransform[2],\n              d = currentTransform[3];\n            var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n            var imgToPaint, tmpCanvas;\n            if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\n              imgToPaint = imgData;\n            } else {\n              tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n              var tmpCtx = tmpCanvas.context;\n              putBinaryImageData(tmpCtx, imgData);\n              imgToPaint = tmpCanvas.canvas;\n            }\n            var paintWidth = width,\n              paintHeight = height;\n            var tmpCanvasId = \"prescale1\";\n            while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\n              var newWidth = paintWidth,\n                newHeight = paintHeight;\n              if (widthScale > 2 && paintWidth > 1) {\n                newWidth = Math.ceil(paintWidth / 2);\n                widthScale /= paintWidth / newWidth;\n              }\n              if (heightScale > 2 && paintHeight > 1) {\n                newHeight = Math.ceil(paintHeight / 2);\n                heightScale /= paintHeight / newHeight;\n              }\n              tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\n              tmpCtx = tmpCanvas.context;\n              tmpCtx.clearRect(0, 0, newWidth, newHeight);\n              tmpCtx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n              imgToPaint = tmpCanvas.canvas;\n              paintWidth = newWidth;\n              paintHeight = newHeight;\n              tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n            }\n            ctx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, -height, width, height);\n            if (this.imageLayer) {\n              var position = this.getCanvasPosition(0, -height);\n              this.imageLayer.appendImage({\n                imgData: imgData,\n                left: position[0],\n                top: position[1],\n                width: width / currentTransform[0],\n                height: height / currentTransform[3]\n              });\n            }\n            this.restore();\n          },\n          paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(imgData, map) {\n            var ctx = this.ctx;\n            var w = imgData.width;\n            var h = imgData.height;\n            var tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n            var tmpCtx = tmpCanvas.context;\n            putBinaryImageData(tmpCtx, imgData);\n            for (var i = 0, ii = map.length; i < ii; i++) {\n              var entry = map[i];\n              ctx.save();\n              ctx.transform.apply(ctx, entry.transform);\n              ctx.scale(1, -1);\n              ctx.drawImage(tmpCanvas.canvas, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n              if (this.imageLayer) {\n                var position = this.getCanvasPosition(entry.x, entry.y);\n                this.imageLayer.appendImage({\n                  imgData: imgData,\n                  left: position[0],\n                  top: position[1],\n                  width: w,\n                  height: h\n                });\n              }\n              ctx.restore();\n            }\n          },\n          paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n            this.ctx.fillRect(0, 0, 1, 1);\n          },\n          paintXObject: function CanvasGraphics_paintXObject() {\n            (0, _util.warn)(\"Unsupported 'paintXObject' command.\");\n          },\n          markPoint: function CanvasGraphics_markPoint(tag) {},\n          markPointProps: function CanvasGraphics_markPointProps(tag, properties) {},\n          beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {},\n          beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(tag, properties) {},\n          endMarkedContent: function CanvasGraphics_endMarkedContent() {},\n          beginCompat: function CanvasGraphics_beginCompat() {},\n          endCompat: function CanvasGraphics_endCompat() {},\n          consumePath: function CanvasGraphics_consumePath() {\n            var ctx = this.ctx;\n            if (this.pendingClip) {\n              if (this.pendingClip === EO_CLIP) {\n                ctx.clip(\"evenodd\");\n              } else {\n                ctx.clip();\n              }\n              this.pendingClip = null;\n            }\n            ctx.beginPath();\n          },\n          getSinglePixelWidth: function getSinglePixelWidth(scale) {\n            if (this._cachedGetSinglePixelWidth === null) {\n              var inverse = this.ctx.mozCurrentTransformInverse;\n              this._cachedGetSinglePixelWidth = Math.sqrt(Math.max(inverse[0] * inverse[0] + inverse[1] * inverse[1], inverse[2] * inverse[2] + inverse[3] * inverse[3]));\n            }\n            return this._cachedGetSinglePixelWidth;\n          },\n          getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n            var transform = this.ctx.mozCurrentTransform;\n            return [transform[0] * x + transform[2] * y + transform[4], transform[1] * x + transform[3] * y + transform[5]];\n          }\n        };\n        for (var op in _util.OPS) {\n          CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\n        }\n        return CanvasGraphics;\n      }();\n      exports.CanvasGraphics = CanvasGraphics;\n\n      /***/\n    }, /* 202 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getShadingPatternFromIR = getShadingPatternFromIR;\n      exports.TilingPattern = void 0;\n      var _util = __w_pdfjs_require__(5);\n      var ShadingIRs = {};\n      function applyBoundingBox(ctx, bbox) {\n        if (!bbox || typeof Path2D === \"undefined\") {\n          return;\n        }\n        var width = bbox[2] - bbox[0];\n        var height = bbox[3] - bbox[1];\n        var region = new Path2D();\n        region.rect(bbox[0], bbox[1], width, height);\n        ctx.clip(region);\n      }\n      ShadingIRs.RadialAxial = {\n        fromIR: function RadialAxial_fromIR(raw) {\n          var type = raw[1];\n          var bbox = raw[2];\n          var colorStops = raw[3];\n          var p0 = raw[4];\n          var p1 = raw[5];\n          var r0 = raw[6];\n          var r1 = raw[7];\n          return {\n            type: \"Pattern\",\n            getPattern: function RadialAxial_getPattern(ctx) {\n              applyBoundingBox(ctx, bbox);\n              var grad;\n              if (type === \"axial\") {\n                grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n              } else if (type === \"radial\") {\n                grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n              }\n              for (var i = 0, ii = colorStops.length; i < ii; ++i) {\n                var c = colorStops[i];\n                grad.addColorStop(c[0], c[1]);\n              }\n              return grad;\n            }\n          };\n        }\n      };\n      var createMeshCanvas = function createMeshCanvasClosure() {\n        function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n          var coords = context.coords,\n            colors = context.colors;\n          var bytes = data.data,\n            rowSize = data.width * 4;\n          var tmp;\n          if (coords[p1 + 1] > coords[p2 + 1]) {\n            tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n            tmp = c1;\n            c1 = c2;\n            c2 = tmp;\n          }\n          if (coords[p2 + 1] > coords[p3 + 1]) {\n            tmp = p2;\n            p2 = p3;\n            p3 = tmp;\n            tmp = c2;\n            c2 = c3;\n            c3 = tmp;\n          }\n          if (coords[p1 + 1] > coords[p2 + 1]) {\n            tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n            tmp = c1;\n            c1 = c2;\n            c2 = tmp;\n          }\n          var x1 = (coords[p1] + context.offsetX) * context.scaleX;\n          var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n          var x2 = (coords[p2] + context.offsetX) * context.scaleX;\n          var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n          var x3 = (coords[p3] + context.offsetX) * context.scaleX;\n          var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n          if (y1 >= y3) {\n            return;\n          }\n          var c1r = colors[c1],\n            c1g = colors[c1 + 1],\n            c1b = colors[c1 + 2];\n          var c2r = colors[c2],\n            c2g = colors[c2 + 1],\n            c2b = colors[c2 + 2];\n          var c3r = colors[c3],\n            c3g = colors[c3 + 1],\n            c3b = colors[c3 + 2];\n          var minY = Math.round(y1),\n            maxY = Math.round(y3);\n          var xa, car, cag, cab;\n          var xb, cbr, cbg, cbb;\n          for (var y = minY; y <= maxY; y++) {\n            if (y < y2) {\n              var _k = void 0;\n              if (y < y1) {\n                _k = 0;\n              } else if (y1 === y2) {\n                _k = 1;\n              } else {\n                _k = (y1 - y) / (y1 - y2);\n              }\n              xa = x1 - (x1 - x2) * _k;\n              car = c1r - (c1r - c2r) * _k;\n              cag = c1g - (c1g - c2g) * _k;\n              cab = c1b - (c1b - c2b) * _k;\n            } else {\n              var _k2 = void 0;\n              if (y > y3) {\n                _k2 = 1;\n              } else if (y2 === y3) {\n                _k2 = 0;\n              } else {\n                _k2 = (y2 - y) / (y2 - y3);\n              }\n              xa = x2 - (x2 - x3) * _k2;\n              car = c2r - (c2r - c3r) * _k2;\n              cag = c2g - (c2g - c3g) * _k2;\n              cab = c2b - (c2b - c3b) * _k2;\n            }\n            var k = void 0;\n            if (y < y1) {\n              k = 0;\n            } else if (y > y3) {\n              k = 1;\n            } else {\n              k = (y1 - y) / (y1 - y3);\n            }\n            xb = x1 - (x1 - x3) * k;\n            cbr = c1r - (c1r - c3r) * k;\n            cbg = c1g - (c1g - c3g) * k;\n            cbb = c1b - (c1b - c3b) * k;\n            var x1_ = Math.round(Math.min(xa, xb));\n            var x2_ = Math.round(Math.max(xa, xb));\n            var j = rowSize * y + x1_ * 4;\n            for (var x = x1_; x <= x2_; x++) {\n              k = (xa - x) / (xa - xb);\n              if (k < 0) {\n                k = 0;\n              } else if (k > 1) {\n                k = 1;\n              }\n              bytes[j++] = car - (car - cbr) * k | 0;\n              bytes[j++] = cag - (cag - cbg) * k | 0;\n              bytes[j++] = cab - (cab - cbb) * k | 0;\n              bytes[j++] = 255;\n            }\n          }\n        }\n        function drawFigure(data, figure, context) {\n          var ps = figure.coords;\n          var cs = figure.colors;\n          var i, ii;\n          switch (figure.type) {\n            case \"lattice\":\n              var verticesPerRow = figure.verticesPerRow;\n              var rows = Math.floor(ps.length / verticesPerRow) - 1;\n              var cols = verticesPerRow - 1;\n              for (i = 0; i < rows; i++) {\n                var q = i * verticesPerRow;\n                for (var j = 0; j < cols; j++, q++) {\n                  drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n                  drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n                }\n              }\n              break;\n            case \"triangles\":\n              for (i = 0, ii = ps.length; i < ii; i += 3) {\n                drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n              }\n              break;\n            default:\n              throw new Error(\"illegal figure\");\n          }\n        }\n        function createMeshCanvas(bounds, combinesScale, coords, colors, figures, backgroundColor, cachedCanvases, webGLContext) {\n          var EXPECTED_SCALE = 1.1;\n          var MAX_PATTERN_SIZE = 3000;\n          var BORDER_SIZE = 2;\n          var offsetX = Math.floor(bounds[0]);\n          var offsetY = Math.floor(bounds[1]);\n          var boundsWidth = Math.ceil(bounds[2]) - offsetX;\n          var boundsHeight = Math.ceil(bounds[3]) - offsetY;\n          var width = Math.min(Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n          var height = Math.min(Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n          var scaleX = boundsWidth / width;\n          var scaleY = boundsHeight / height;\n          var context = {\n            coords: coords,\n            colors: colors,\n            offsetX: -offsetX,\n            offsetY: -offsetY,\n            scaleX: 1 / scaleX,\n            scaleY: 1 / scaleY\n          };\n          var paddedWidth = width + BORDER_SIZE * 2;\n          var paddedHeight = height + BORDER_SIZE * 2;\n          var canvas, tmpCanvas, i, ii;\n          if (webGLContext.isEnabled) {\n            canvas = webGLContext.drawFigures({\n              width: width,\n              height: height,\n              backgroundColor: backgroundColor,\n              figures: figures,\n              context: context\n            });\n            tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n            tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n            canvas = tmpCanvas.canvas;\n          } else {\n            tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n            var tmpCtx = tmpCanvas.context;\n            var data = tmpCtx.createImageData(width, height);\n            if (backgroundColor) {\n              var bytes = data.data;\n              for (i = 0, ii = bytes.length; i < ii; i += 4) {\n                bytes[i] = backgroundColor[0];\n                bytes[i + 1] = backgroundColor[1];\n                bytes[i + 2] = backgroundColor[2];\n                bytes[i + 3] = 255;\n              }\n            }\n            for (i = 0; i < figures.length; i++) {\n              drawFigure(data, figures[i], context);\n            }\n            tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n            canvas = tmpCanvas.canvas;\n          }\n          return {\n            canvas: canvas,\n            offsetX: offsetX - BORDER_SIZE * scaleX,\n            offsetY: offsetY - BORDER_SIZE * scaleY,\n            scaleX: scaleX,\n            scaleY: scaleY\n          };\n        }\n        return createMeshCanvas;\n      }();\n      ShadingIRs.Mesh = {\n        fromIR: function Mesh_fromIR(raw) {\n          var coords = raw[2];\n          var colors = raw[3];\n          var figures = raw[4];\n          var bounds = raw[5];\n          var matrix = raw[6];\n          var bbox = raw[7];\n          var background = raw[8];\n          return {\n            type: \"Pattern\",\n            getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n              applyBoundingBox(ctx, bbox);\n              var scale;\n              if (shadingFill) {\n                scale = _util.Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n              } else {\n                scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\n                if (matrix) {\n                  var matrixScale = _util.Util.singularValueDecompose2dScale(matrix);\n                  scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n                }\n              }\n              var temporaryPatternCanvas = createMeshCanvas(bounds, scale, coords, colors, figures, shadingFill ? null : background, owner.cachedCanvases, owner.webGLContext);\n              if (!shadingFill) {\n                ctx.setTransform.apply(ctx, owner.baseTransform);\n                if (matrix) {\n                  ctx.transform.apply(ctx, matrix);\n                }\n              }\n              ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n              ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n              return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n            }\n          };\n        }\n      };\n      ShadingIRs.Dummy = {\n        fromIR: function Dummy_fromIR() {\n          return {\n            type: \"Pattern\",\n            getPattern: function Dummy_fromIR_getPattern() {\n              return \"hotpink\";\n            }\n          };\n        }\n      };\n      function getShadingPatternFromIR(raw) {\n        var shadingIR = ShadingIRs[raw[0]];\n        if (!shadingIR) {\n          throw new Error(\"Unknown IR type: \".concat(raw[0]));\n        }\n        return shadingIR.fromIR(raw);\n      }\n      var TilingPattern = function TilingPatternClosure() {\n        var PaintType = {\n          COLORED: 1,\n          UNCOLORED: 2\n        };\n        var MAX_PATTERN_SIZE = 3000;\n        function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n          this.operatorList = IR[2];\n          this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n          this.bbox = IR[4];\n          this.xstep = IR[5];\n          this.ystep = IR[6];\n          this.paintType = IR[7];\n          this.tilingType = IR[8];\n          this.color = color;\n          this.canvasGraphicsFactory = canvasGraphicsFactory;\n          this.baseTransform = baseTransform;\n          this.type = \"Pattern\";\n          this.ctx = ctx;\n        }\n        TilingPattern.prototype = {\n          createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n            var operatorList = this.operatorList;\n            var bbox = this.bbox;\n            var xstep = this.xstep;\n            var ystep = this.ystep;\n            var paintType = this.paintType;\n            var tilingType = this.tilingType;\n            var color = this.color;\n            var canvasGraphicsFactory = this.canvasGraphicsFactory;\n            (0, _util.info)(\"TilingType: \" + tilingType);\n            var x0 = bbox[0],\n              y0 = bbox[1],\n              x1 = bbox[2],\n              y1 = bbox[3];\n            var matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n            var curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\n            var combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];\n            var dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\n            var dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\n            var tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\n            var tmpCtx = tmpCanvas.context;\n            var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n            graphics.groupLevel = owner.groupLevel;\n            this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n            graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n            graphics.transform(1, 0, 0, 1, -x0, -y0);\n            this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n            graphics.executeOperatorList(operatorList);\n            this.ctx.transform(1, 0, 0, 1, x0, y0);\n            this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n            return tmpCanvas.canvas;\n          },\n          getSizeAndScale: function TilingPattern_getSizeAndScale(step, realOutputSize, scale) {\n            step = Math.abs(step);\n            var maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n            var size = Math.ceil(step * scale);\n            if (size >= maxSize) {\n              size = maxSize;\n            } else {\n              scale = size / step;\n            }\n            return {\n              scale: scale,\n              size: size\n            };\n          },\n          clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n            if (Array.isArray(bbox) && bbox.length === 4) {\n              var bboxWidth = x1 - x0;\n              var bboxHeight = y1 - y0;\n              graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n              graphics.clip();\n              graphics.endPath();\n            }\n          },\n          setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(graphics, paintType, color) {\n            var context = graphics.ctx,\n              current = graphics.current;\n            switch (paintType) {\n              case PaintType.COLORED:\n                var ctx = this.ctx;\n                context.fillStyle = ctx.fillStyle;\n                context.strokeStyle = ctx.strokeStyle;\n                current.fillColor = ctx.fillStyle;\n                current.strokeColor = ctx.strokeStyle;\n                break;\n              case PaintType.UNCOLORED:\n                var cssColor = _util.Util.makeCssRgb(color[0], color[1], color[2]);\n                context.fillStyle = cssColor;\n                context.strokeStyle = cssColor;\n                current.fillColor = cssColor;\n                current.strokeColor = cssColor;\n                break;\n              default:\n                throw new _util.FormatError(\"Unsupported paint type: \".concat(paintType));\n            }\n          },\n          getPattern: function TilingPattern_getPattern(ctx, owner) {\n            ctx = this.ctx;\n            ctx.setTransform.apply(ctx, this.baseTransform);\n            ctx.transform.apply(ctx, this.matrix);\n            var temporaryPatternCanvas = this.createPatternCanvas(owner);\n            return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n          }\n        };\n        return TilingPattern;\n      }();\n      exports.TilingPattern = TilingPattern;\n\n      /***/\n    }, /* 203 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.GlobalWorkerOptions = void 0;\n      var GlobalWorkerOptions = Object.create(null);\n      exports.GlobalWorkerOptions = GlobalWorkerOptions;\n      GlobalWorkerOptions.workerPort = GlobalWorkerOptions.workerPort === undefined ? null : GlobalWorkerOptions.workerPort;\n      GlobalWorkerOptions.workerSrc = GlobalWorkerOptions.workerSrc === undefined ? \"\" : GlobalWorkerOptions.workerSrc;\n\n      /***/\n    }, /* 204 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.MessageHandler = void 0;\n      var _regenerator = _interopRequireDefault(__w_pdfjs_require__(2));\n      var _util = __w_pdfjs_require__(5);\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          \"default\": obj\n        };\n      }\n      function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n        if (info.done) {\n          resolve(value);\n        } else {\n          Promise.resolve(value).then(_next, _throw);\n        }\n      }\n      function _asyncToGenerator(fn) {\n        return function () {\n          var self = this,\n            args = arguments;\n          return new Promise(function (resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n          });\n        };\n      }\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n      function _defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n      function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        return Constructor;\n      }\n      function _typeof(obj) {\n        \"@babel/helpers - typeof\";\n\n        if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n          _typeof = function _typeof(obj) {\n            return typeof obj;\n          };\n        } else {\n          _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n          };\n        }\n        return _typeof(obj);\n      }\n      var CallbackKind = {\n        UNKNOWN: 0,\n        DATA: 1,\n        ERROR: 2\n      };\n      var StreamKind = {\n        UNKNOWN: 0,\n        CANCEL: 1,\n        CANCEL_COMPLETE: 2,\n        CLOSE: 3,\n        ENQUEUE: 4,\n        ERROR: 5,\n        PULL: 6,\n        PULL_COMPLETE: 7,\n        START_COMPLETE: 8\n      };\n      function wrapReason(reason) {\n        if (_typeof(reason) !== \"object\" || reason === null) {\n          return reason;\n        }\n        switch (reason.name) {\n          case \"AbortException\":\n            return new _util.AbortException(reason.message);\n          case \"MissingPDFException\":\n            return new _util.MissingPDFException(reason.message);\n          case \"UnexpectedResponseException\":\n            return new _util.UnexpectedResponseException(reason.message, reason.status);\n          case \"UnknownErrorException\":\n            return new _util.UnknownErrorException(reason.message, reason.details);\n          default:\n            return new _util.UnknownErrorException(reason.message, reason.toString());\n        }\n      }\n      var MessageHandler = /*#__PURE__*/function () {\n        function MessageHandler(sourceName, targetName, comObj) {\n          var _this = this;\n          _classCallCheck(this, MessageHandler);\n          this.sourceName = sourceName;\n          this.targetName = targetName;\n          this.comObj = comObj;\n          this.callbackId = 1;\n          this.streamId = 1;\n          this.postMessageTransfers = true;\n          this.streamSinks = Object.create(null);\n          this.streamControllers = Object.create(null);\n          this.callbackCapabilities = Object.create(null);\n          this.actionHandler = Object.create(null);\n          this._onComObjOnMessage = function (event) {\n            var data = event.data;\n            if (data.targetName !== _this.sourceName) {\n              return;\n            }\n            if (data.stream) {\n              _this._processStreamMessage(data);\n              return;\n            }\n            if (data.callback) {\n              var callbackId = data.callbackId;\n              var capability = _this.callbackCapabilities[callbackId];\n              if (!capability) {\n                throw new Error(\"Cannot resolve callback \".concat(callbackId));\n              }\n              delete _this.callbackCapabilities[callbackId];\n              if (data.callback === CallbackKind.DATA) {\n                capability.resolve(data.data);\n              } else if (data.callback === CallbackKind.ERROR) {\n                capability.reject(wrapReason(data.reason));\n              } else {\n                throw new Error(\"Unexpected callback case\");\n              }\n              return;\n            }\n            var action = _this.actionHandler[data.action];\n            if (!action) {\n              throw new Error(\"Unknown action from worker: \".concat(data.action));\n            }\n            if (data.callbackId) {\n              var cbSourceName = _this.sourceName;\n              var cbTargetName = data.sourceName;\n              new Promise(function (resolve) {\n                resolve(action(data.data));\n              }).then(function (result) {\n                comObj.postMessage({\n                  sourceName: cbSourceName,\n                  targetName: cbTargetName,\n                  callback: CallbackKind.DATA,\n                  callbackId: data.callbackId,\n                  data: result\n                });\n              }, function (reason) {\n                comObj.postMessage({\n                  sourceName: cbSourceName,\n                  targetName: cbTargetName,\n                  callback: CallbackKind.ERROR,\n                  callbackId: data.callbackId,\n                  reason: wrapReason(reason)\n                });\n              });\n              return;\n            }\n            if (data.streamId) {\n              _this._createStreamSink(data);\n              return;\n            }\n            action(data.data);\n          };\n          comObj.addEventListener(\"message\", this._onComObjOnMessage);\n        }\n        _createClass(MessageHandler, [{\n          key: \"on\",\n          value: function on(actionName, handler) {\n            var ah = this.actionHandler;\n            if (ah[actionName]) {\n              throw new Error(\"There is already an actionName called \\\"\".concat(actionName, \"\\\"\"));\n            }\n            ah[actionName] = handler;\n          }\n        }, {\n          key: \"send\",\n          value: function send(actionName, data, transfers) {\n            this._postMessage({\n              sourceName: this.sourceName,\n              targetName: this.targetName,\n              action: actionName,\n              data: data\n            }, transfers);\n          }\n        }, {\n          key: \"sendWithPromise\",\n          value: function sendWithPromise(actionName, data, transfers) {\n            var callbackId = this.callbackId++;\n            var capability = (0, _util.createPromiseCapability)();\n            this.callbackCapabilities[callbackId] = capability;\n            try {\n              this._postMessage({\n                sourceName: this.sourceName,\n                targetName: this.targetName,\n                action: actionName,\n                callbackId: callbackId,\n                data: data\n              }, transfers);\n            } catch (ex) {\n              capability.reject(ex);\n            }\n            return capability.promise;\n          }\n        }, {\n          key: \"sendWithStream\",\n          value: function sendWithStream(actionName, data, queueingStrategy, transfers) {\n            var _this2 = this;\n            var streamId = this.streamId++;\n            var sourceName = this.sourceName;\n            var targetName = this.targetName;\n            var comObj = this.comObj;\n            return new ReadableStream({\n              start: function start(controller) {\n                var startCapability = (0, _util.createPromiseCapability)();\n                _this2.streamControllers[streamId] = {\n                  controller: controller,\n                  startCall: startCapability,\n                  pullCall: null,\n                  cancelCall: null,\n                  isClosed: false\n                };\n                _this2._postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  action: actionName,\n                  streamId: streamId,\n                  data: data,\n                  desiredSize: controller.desiredSize\n                }, transfers);\n                return startCapability.promise;\n              },\n              pull: function pull(controller) {\n                var pullCapability = (0, _util.createPromiseCapability)();\n                _this2.streamControllers[streamId].pullCall = pullCapability;\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.PULL,\n                  streamId: streamId,\n                  desiredSize: controller.desiredSize\n                });\n                return pullCapability.promise;\n              },\n              cancel: function cancel(reason) {\n                (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n                var cancelCapability = (0, _util.createPromiseCapability)();\n                _this2.streamControllers[streamId].cancelCall = cancelCapability;\n                _this2.streamControllers[streamId].isClosed = true;\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.CANCEL,\n                  streamId: streamId,\n                  reason: wrapReason(reason)\n                });\n                return cancelCapability.promise;\n              }\n            }, queueingStrategy);\n          }\n        }, {\n          key: \"_createStreamSink\",\n          value: function _createStreamSink(data) {\n            var self = this;\n            var action = this.actionHandler[data.action];\n            var streamId = data.streamId;\n            var sourceName = this.sourceName;\n            var targetName = data.sourceName;\n            var comObj = this.comObj;\n            var streamSink = {\n              enqueue: function enqueue(chunk) {\n                var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n                var transfers = arguments.length > 2 ? arguments[2] : undefined;\n                if (this.isCancelled) {\n                  return;\n                }\n                var lastDesiredSize = this.desiredSize;\n                this.desiredSize -= size;\n                if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n                  this.sinkCapability = (0, _util.createPromiseCapability)();\n                  this.ready = this.sinkCapability.promise;\n                }\n                self._postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.ENQUEUE,\n                  streamId: streamId,\n                  chunk: chunk\n                }, transfers);\n              },\n              close: function close() {\n                if (this.isCancelled) {\n                  return;\n                }\n                this.isCancelled = true;\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.CLOSE,\n                  streamId: streamId\n                });\n                delete self.streamSinks[streamId];\n              },\n              error: function error(reason) {\n                (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n                if (this.isCancelled) {\n                  return;\n                }\n                this.isCancelled = true;\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.ERROR,\n                  streamId: streamId,\n                  reason: wrapReason(reason)\n                });\n              },\n              sinkCapability: (0, _util.createPromiseCapability)(),\n              onPull: null,\n              onCancel: null,\n              isCancelled: false,\n              desiredSize: data.desiredSize,\n              ready: null\n            };\n            streamSink.sinkCapability.resolve();\n            streamSink.ready = streamSink.sinkCapability.promise;\n            this.streamSinks[streamId] = streamSink;\n            new Promise(function (resolve) {\n              resolve(action(data.data, streamSink));\n            }).then(function () {\n              comObj.postMessage({\n                sourceName: sourceName,\n                targetName: targetName,\n                stream: StreamKind.START_COMPLETE,\n                streamId: streamId,\n                success: true\n              });\n            }, function (reason) {\n              comObj.postMessage({\n                sourceName: sourceName,\n                targetName: targetName,\n                stream: StreamKind.START_COMPLETE,\n                streamId: streamId,\n                reason: wrapReason(reason)\n              });\n            });\n          }\n        }, {\n          key: \"_processStreamMessage\",\n          value: function _processStreamMessage(data) {\n            var streamId = data.streamId;\n            var sourceName = this.sourceName;\n            var targetName = data.sourceName;\n            var comObj = this.comObj;\n            switch (data.stream) {\n              case StreamKind.START_COMPLETE:\n                if (data.success) {\n                  this.streamControllers[streamId].startCall.resolve();\n                } else {\n                  this.streamControllers[streamId].startCall.reject(wrapReason(data.reason));\n                }\n                break;\n              case StreamKind.PULL_COMPLETE:\n                if (data.success) {\n                  this.streamControllers[streamId].pullCall.resolve();\n                } else {\n                  this.streamControllers[streamId].pullCall.reject(wrapReason(data.reason));\n                }\n                break;\n              case StreamKind.PULL:\n                if (!this.streamSinks[streamId]) {\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId: streamId,\n                    success: true\n                  });\n                  break;\n                }\n                if (this.streamSinks[streamId].desiredSize <= 0 && data.desiredSize > 0) {\n                  this.streamSinks[streamId].sinkCapability.resolve();\n                }\n                this.streamSinks[streamId].desiredSize = data.desiredSize;\n                var onPull = this.streamSinks[data.streamId].onPull;\n                new Promise(function (resolve) {\n                  resolve(onPull && onPull());\n                }).then(function () {\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId: streamId,\n                    success: true\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId: streamId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                break;\n              case StreamKind.ENQUEUE:\n                (0, _util.assert)(this.streamControllers[streamId], \"enqueue should have stream controller\");\n                if (this.streamControllers[streamId].isClosed) {\n                  break;\n                }\n                this.streamControllers[streamId].controller.enqueue(data.chunk);\n                break;\n              case StreamKind.CLOSE:\n                (0, _util.assert)(this.streamControllers[streamId], \"close should have stream controller\");\n                if (this.streamControllers[streamId].isClosed) {\n                  break;\n                }\n                this.streamControllers[streamId].isClosed = true;\n                this.streamControllers[streamId].controller.close();\n                this._deleteStreamController(streamId);\n                break;\n              case StreamKind.ERROR:\n                (0, _util.assert)(this.streamControllers[streamId], \"error should have stream controller\");\n                this.streamControllers[streamId].controller.error(wrapReason(data.reason));\n                this._deleteStreamController(streamId);\n                break;\n              case StreamKind.CANCEL_COMPLETE:\n                if (data.success) {\n                  this.streamControllers[streamId].cancelCall.resolve();\n                } else {\n                  this.streamControllers[streamId].cancelCall.reject(wrapReason(data.reason));\n                }\n                this._deleteStreamController(streamId);\n                break;\n              case StreamKind.CANCEL:\n                if (!this.streamSinks[streamId]) {\n                  break;\n                }\n                var onCancel = this.streamSinks[data.streamId].onCancel;\n                new Promise(function (resolve) {\n                  resolve(onCancel && onCancel(wrapReason(data.reason)));\n                }).then(function () {\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.CANCEL_COMPLETE,\n                    streamId: streamId,\n                    success: true\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.CANCEL_COMPLETE,\n                    streamId: streamId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                this.streamSinks[streamId].sinkCapability.reject(wrapReason(data.reason));\n                this.streamSinks[streamId].isCancelled = true;\n                delete this.streamSinks[streamId];\n                break;\n              default:\n                throw new Error(\"Unexpected stream case\");\n            }\n          }\n        }, {\n          key: \"_deleteStreamController\",\n          value: function () {\n            var _deleteStreamController2 = _asyncToGenerator( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(streamId) {\n              return _regenerator[\"default\"].wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return Promise.allSettled([this.streamControllers[streamId].startCall, this.streamControllers[streamId].pullCall, this.streamControllers[streamId].cancelCall].map(function (capability) {\n                        return capability && capability.promise;\n                      }));\n                    case 2:\n                      delete this.streamControllers[streamId];\n                    case 3:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee, this);\n            }));\n            function _deleteStreamController(_x) {\n              return _deleteStreamController2.apply(this, arguments);\n            }\n            return _deleteStreamController;\n          }()\n        }, {\n          key: \"_postMessage\",\n          value: function _postMessage(message, transfers) {\n            if (transfers && this.postMessageTransfers) {\n              this.comObj.postMessage(message, transfers);\n            } else {\n              this.comObj.postMessage(message);\n            }\n          }\n        }, {\n          key: \"destroy\",\n          value: function destroy() {\n            this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n          }\n        }]);\n        return MessageHandler;\n      }();\n      exports.MessageHandler = MessageHandler;\n\n      /***/\n    }, /* 205 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.Metadata = void 0;\n      var _util = __w_pdfjs_require__(5);\n      var _xml_parser = __w_pdfjs_require__(206);\n      function _slicedToArray(arr, i) {\n        return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n      }\n      function _nonIterableRest() {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n      }\n      function _iterableToArrayLimit(arr, i) {\n        if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n        var _arr = [];\n        var _n = true;\n        var _d = false;\n        var _e = undefined;\n        try {\n          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n          }\n        } catch (err) {\n          _d = true;\n          _e = err;\n        } finally {\n          try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n          } finally {\n            if (_d) throw _e;\n          }\n        }\n        return _arr;\n      }\n      function _arrayWithHoles(arr) {\n        if (Array.isArray(arr)) return arr;\n      }\n      function _createForOfIteratorHelper(o, allowArrayLike) {\n        var it;\n        if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n          if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n            if (it) o = it;\n            var i = 0;\n            var F = function F() {};\n            return {\n              s: F,\n              n: function n() {\n                if (i >= o.length) return {\n                  done: true\n                };\n                return {\n                  done: false,\n                  value: o[i++]\n                };\n              },\n              e: function e(_e2) {\n                throw _e2;\n              },\n              f: F\n            };\n          }\n          throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n        }\n        var normalCompletion = true,\n          didErr = false,\n          err;\n        return {\n          s: function s() {\n            it = o[Symbol.iterator]();\n          },\n          n: function n() {\n            var step = it.next();\n            normalCompletion = step.done;\n            return step;\n          },\n          e: function e(_e3) {\n            didErr = true;\n            err = _e3;\n          },\n          f: function f() {\n            try {\n              if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n            } finally {\n              if (didErr) throw err;\n            }\n          }\n        };\n      }\n      function _unsupportedIterableToArray(o, minLen) {\n        if (!o) return;\n        if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n        var n = Object.prototype.toString.call(o).slice(8, -1);\n        if (n === \"Object\" && o.constructor) n = o.constructor.name;\n        if (n === \"Map\" || n === \"Set\") return Array.from(o);\n        if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n      }\n      function _arrayLikeToArray(arr, len) {\n        if (len == null || len > arr.length) len = arr.length;\n        for (var i = 0, arr2 = new Array(len); i < len; i++) {\n          arr2[i] = arr[i];\n        }\n        return arr2;\n      }\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n      function _defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n      function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        return Constructor;\n      }\n      var Metadata = /*#__PURE__*/function () {\n        function Metadata(data) {\n          _classCallCheck(this, Metadata);\n          (0, _util.assert)(typeof data === \"string\", \"Metadata: input is not a string\");\n          data = this._repair(data);\n          var parser = new _xml_parser.SimpleXMLParser();\n          var xmlDocument = parser.parseFromString(data);\n          this._metadataMap = new Map();\n          if (xmlDocument) {\n            this._parse(xmlDocument);\n          }\n        }\n        _createClass(Metadata, [{\n          key: \"_repair\",\n          value: function _repair(data) {\n            return data.replace(/^[^<]+/, \"\").replace(/>\\\\376\\\\377([^<]+)/g, function (all, codes) {\n              var bytes = codes.replace(/\\\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {\n                return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n              }).replace(/&(amp|apos|gt|lt|quot);/g, function (str, name) {\n                switch (name) {\n                  case \"amp\":\n                    return \"&\";\n                  case \"apos\":\n                    return \"'\";\n                  case \"gt\":\n                    return \">\";\n                  case \"lt\":\n                    return \"<\";\n                  case \"quot\":\n                    return '\"';\n                }\n                throw new Error(\"_repair: \".concat(name, \" isn't defined.\"));\n              });\n              var chars = \"\";\n              for (var i = 0, ii = bytes.length; i < ii; i += 2) {\n                var code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n                if (code >= 32 && code < 127 && code !== 60 && code !== 62 && code !== 38) {\n                  chars += String.fromCharCode(code);\n                } else {\n                  chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n                }\n              }\n              return \">\" + chars;\n            });\n          }\n        }, {\n          key: \"_parse\",\n          value: function _parse(xmlDocument) {\n            var rdf = xmlDocument.documentElement;\n            if (rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n              rdf = rdf.firstChild;\n              while (rdf && rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n                rdf = rdf.nextSibling;\n              }\n            }\n            var nodeName = rdf ? rdf.nodeName.toLowerCase() : null;\n            if (!rdf || nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n              return;\n            }\n            var children = rdf.childNodes;\n            for (var i = 0, ii = children.length; i < ii; i++) {\n              var desc = children[i];\n              if (desc.nodeName.toLowerCase() !== \"rdf:description\") {\n                continue;\n              }\n              for (var j = 0, jj = desc.childNodes.length; j < jj; j++) {\n                if (desc.childNodes[j].nodeName.toLowerCase() !== \"#text\") {\n                  var entry = desc.childNodes[j];\n                  var name = entry.nodeName.toLowerCase();\n                  this._metadataMap.set(name, entry.textContent.trim());\n                }\n              }\n            }\n          }\n        }, {\n          key: \"get\",\n          value: function get(name) {\n            return this._metadataMap.has(name) ? this._metadataMap.get(name) : null;\n          }\n        }, {\n          key: \"getAll\",\n          value: function getAll() {\n            var obj = Object.create(null);\n            var _iterator = _createForOfIteratorHelper(this._metadataMap),\n              _step;\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var _step$value = _slicedToArray(_step.value, 2),\n                  key = _step$value[0],\n                  value = _step$value[1];\n                obj[key] = value;\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n            return obj;\n          }\n        }, {\n          key: \"has\",\n          value: function has(name) {\n            return this._metadataMap.has(name);\n          }\n        }]);\n        return Metadata;\n      }();\n      exports.Metadata = Metadata;\n\n      /***/\n    }, /* 206 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.SimpleXMLParser = void 0;\n      function _typeof(obj) {\n        \"@babel/helpers - typeof\";\n\n        if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n          _typeof = function _typeof(obj) {\n            return typeof obj;\n          };\n        } else {\n          _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n          };\n        }\n        return _typeof(obj);\n      }\n      function _slicedToArray(arr, i) {\n        return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n      }\n      function _nonIterableRest() {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n      }\n      function _unsupportedIterableToArray(o, minLen) {\n        if (!o) return;\n        if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n        var n = Object.prototype.toString.call(o).slice(8, -1);\n        if (n === \"Object\" && o.constructor) n = o.constructor.name;\n        if (n === \"Map\" || n === \"Set\") return Array.from(o);\n        if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n      }\n      function _arrayLikeToArray(arr, len) {\n        if (len == null || len > arr.length) len = arr.length;\n        for (var i = 0, arr2 = new Array(len); i < len; i++) {\n          arr2[i] = arr[i];\n        }\n        return arr2;\n      }\n      function _iterableToArrayLimit(arr, i) {\n        if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n        var _arr = [];\n        var _n = true;\n        var _d = false;\n        var _e = undefined;\n        try {\n          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n          }\n        } catch (err) {\n          _d = true;\n          _e = err;\n        } finally {\n          try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n          } finally {\n            if (_d) throw _e;\n          }\n        }\n        return _arr;\n      }\n      function _arrayWithHoles(arr) {\n        if (Array.isArray(arr)) return arr;\n      }\n      function _get(target, property, receiver) {\n        if (typeof Reflect !== \"undefined\" && Reflect.get) {\n          _get = Reflect.get;\n        } else {\n          _get = function _get(target, property, receiver) {\n            var base = _superPropBase(target, property);\n            if (!base) return;\n            var desc = Object.getOwnPropertyDescriptor(base, property);\n            if (desc.get) {\n              return desc.get.call(receiver);\n            }\n            return desc.value;\n          };\n        }\n        return _get(target, property, receiver || target);\n      }\n      function _superPropBase(object, property) {\n        while (!Object.prototype.hasOwnProperty.call(object, property)) {\n          object = _getPrototypeOf(object);\n          if (object === null) break;\n        }\n        return object;\n      }\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function\");\n        }\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) _setPrototypeOf(subClass, superClass);\n      }\n      function _setPrototypeOf(o, p) {\n        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n          o.__proto__ = p;\n          return o;\n        };\n        return _setPrototypeOf(o, p);\n      }\n      function _createSuper(Derived) {\n        var hasNativeReflectConstruct = _isNativeReflectConstruct();\n        return function _createSuperInternal() {\n          var Super = _getPrototypeOf(Derived),\n            result;\n          if (hasNativeReflectConstruct) {\n            var NewTarget = _getPrototypeOf(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n          } else {\n            result = Super.apply(this, arguments);\n          }\n          return _possibleConstructorReturn(this, result);\n        };\n      }\n      function _possibleConstructorReturn(self, call) {\n        if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n          return call;\n        }\n        return _assertThisInitialized(self);\n      }\n      function _assertThisInitialized(self) {\n        if (self === void 0) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n        return self;\n      }\n      function _isNativeReflectConstruct() {\n        if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n        if (Reflect.construct.sham) return false;\n        if (typeof Proxy === \"function\") return true;\n        try {\n          Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n          return true;\n        } catch (e) {\n          return false;\n        }\n      }\n      function _getPrototypeOf(o) {\n        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n          return o.__proto__ || Object.getPrototypeOf(o);\n        };\n        return _getPrototypeOf(o);\n      }\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n      function _defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n      function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        return Constructor;\n      }\n      var XMLParserErrorCode = {\n        NoError: 0,\n        EndOfDocument: -1,\n        UnterminatedCdat: -2,\n        UnterminatedXmlDeclaration: -3,\n        UnterminatedDoctypeDeclaration: -4,\n        UnterminatedComment: -5,\n        MalformedElement: -6,\n        OutOfMemory: -7,\n        UnterminatedAttributeValue: -8,\n        UnterminatedElement: -9,\n        ElementNeverBegun: -10\n      };\n      function isWhitespace(s, index) {\n        var ch = s[index];\n        return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n      }\n      function isWhitespaceString(s) {\n        for (var i = 0, ii = s.length; i < ii; i++) {\n          if (!isWhitespace(s, i)) {\n            return false;\n          }\n        }\n        return true;\n      }\n      var XMLParserBase = /*#__PURE__*/function () {\n        function XMLParserBase() {\n          _classCallCheck(this, XMLParserBase);\n        }\n        _createClass(XMLParserBase, [{\n          key: \"_resolveEntities\",\n          value: function _resolveEntities(s) {\n            var _this = this;\n            return s.replace(/&([^;]+);/g, function (all, entity) {\n              if (entity.substring(0, 2) === \"#x\") {\n                return String.fromCharCode(parseInt(entity.substring(2), 16));\n              } else if (entity.substring(0, 1) === \"#\") {\n                return String.fromCharCode(parseInt(entity.substring(1), 10));\n              }\n              switch (entity) {\n                case \"lt\":\n                  return \"<\";\n                case \"gt\":\n                  return \">\";\n                case \"amp\":\n                  return \"&\";\n                case \"quot\":\n                  return '\"';\n              }\n              return _this.onResolveEntity(entity);\n            });\n          }\n        }, {\n          key: \"_parseContent\",\n          value: function _parseContent(s, start) {\n            var attributes = [];\n            var pos = start;\n            function skipWs() {\n              while (pos < s.length && isWhitespace(s, pos)) {\n                ++pos;\n              }\n            }\n            while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n              ++pos;\n            }\n            var name = s.substring(start, pos);\n            skipWs();\n            while (pos < s.length && s[pos] !== \">\" && s[pos] !== \"/\" && s[pos] !== \"?\") {\n              skipWs();\n              var attrName = \"\",\n                attrValue = \"\";\n              while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n                attrName += s[pos];\n                ++pos;\n              }\n              skipWs();\n              if (s[pos] !== \"=\") {\n                return null;\n              }\n              ++pos;\n              skipWs();\n              var attrEndChar = s[pos];\n              if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n                return null;\n              }\n              var attrEndIndex = s.indexOf(attrEndChar, ++pos);\n              if (attrEndIndex < 0) {\n                return null;\n              }\n              attrValue = s.substring(pos, attrEndIndex);\n              attributes.push({\n                name: attrName,\n                value: this._resolveEntities(attrValue)\n              });\n              pos = attrEndIndex + 1;\n              skipWs();\n            }\n            return {\n              name: name,\n              attributes: attributes,\n              parsed: pos - start\n            };\n          }\n        }, {\n          key: \"_parseProcessingInstruction\",\n          value: function _parseProcessingInstruction(s, start) {\n            var pos = start;\n            function skipWs() {\n              while (pos < s.length && isWhitespace(s, pos)) {\n                ++pos;\n              }\n            }\n            while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n              ++pos;\n            }\n            var name = s.substring(start, pos);\n            skipWs();\n            var attrStart = pos;\n            while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n              ++pos;\n            }\n            var value = s.substring(attrStart, pos);\n            return {\n              name: name,\n              value: value,\n              parsed: pos - start\n            };\n          }\n        }, {\n          key: \"parseXml\",\n          value: function parseXml(s) {\n            var i = 0;\n            while (i < s.length) {\n              var ch = s[i];\n              var j = i;\n              if (ch === \"<\") {\n                ++j;\n                var ch2 = s[j];\n                var q = void 0;\n                switch (ch2) {\n                  case \"/\":\n                    ++j;\n                    q = s.indexOf(\">\", j);\n                    if (q < 0) {\n                      this.onError(XMLParserErrorCode.UnterminatedElement);\n                      return;\n                    }\n                    this.onEndElement(s.substring(j, q));\n                    j = q + 1;\n                    break;\n                  case \"?\":\n                    ++j;\n                    var pi = this._parseProcessingInstruction(s, j);\n                    if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n                      this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n                      return;\n                    }\n                    this.onPi(pi.name, pi.value);\n                    j += pi.parsed + 2;\n                    break;\n                  case \"!\":\n                    if (s.substring(j + 1, j + 3) === \"--\") {\n                      q = s.indexOf(\"-->\", j + 3);\n                      if (q < 0) {\n                        this.onError(XMLParserErrorCode.UnterminatedComment);\n                        return;\n                      }\n                      this.onComment(s.substring(j + 3, q));\n                      j = q + 3;\n                    } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n                      q = s.indexOf(\"]]>\", j + 8);\n                      if (q < 0) {\n                        this.onError(XMLParserErrorCode.UnterminatedCdat);\n                        return;\n                      }\n                      this.onCdata(s.substring(j + 8, q));\n                      j = q + 3;\n                    } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n                      var q2 = s.indexOf(\"[\", j + 8);\n                      var complexDoctype = false;\n                      q = s.indexOf(\">\", j + 8);\n                      if (q < 0) {\n                        this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                        return;\n                      }\n                      if (q2 > 0 && q > q2) {\n                        q = s.indexOf(\"]>\", j + 8);\n                        if (q < 0) {\n                          this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                          return;\n                        }\n                        complexDoctype = true;\n                      }\n                      var doctypeContent = s.substring(j + 8, q + (complexDoctype ? 1 : 0));\n                      this.onDoctype(doctypeContent);\n                      j = q + (complexDoctype ? 2 : 1);\n                    } else {\n                      this.onError(XMLParserErrorCode.MalformedElement);\n                      return;\n                    }\n                    break;\n                  default:\n                    var content = this._parseContent(s, j);\n                    if (content === null) {\n                      this.onError(XMLParserErrorCode.MalformedElement);\n                      return;\n                    }\n                    var isClosed = false;\n                    if (s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\") {\n                      isClosed = true;\n                    } else if (s.substring(j + content.parsed, j + content.parsed + 1) !== \">\") {\n                      this.onError(XMLParserErrorCode.UnterminatedElement);\n                      return;\n                    }\n                    this.onBeginElement(content.name, content.attributes, isClosed);\n                    j += content.parsed + (isClosed ? 2 : 1);\n                    break;\n                }\n              } else {\n                while (j < s.length && s[j] !== \"<\") {\n                  j++;\n                }\n                var text = s.substring(i, j);\n                this.onText(this._resolveEntities(text));\n              }\n              i = j;\n            }\n          }\n        }, {\n          key: \"onResolveEntity\",\n          value: function onResolveEntity(name) {\n            return \"&\".concat(name, \";\");\n          }\n        }, {\n          key: \"onPi\",\n          value: function onPi(name, value) {}\n        }, {\n          key: \"onComment\",\n          value: function onComment(text) {}\n        }, {\n          key: \"onCdata\",\n          value: function onCdata(text) {}\n        }, {\n          key: \"onDoctype\",\n          value: function onDoctype(doctypeContent) {}\n        }, {\n          key: \"onText\",\n          value: function onText(text) {}\n        }, {\n          key: \"onBeginElement\",\n          value: function onBeginElement(name, attributes, isEmpty) {}\n        }, {\n          key: \"onEndElement\",\n          value: function onEndElement(name) {}\n        }, {\n          key: \"onError\",\n          value: function onError(code) {}\n        }]);\n        return XMLParserBase;\n      }();\n      var SimpleDOMNode = /*#__PURE__*/function () {\n        function SimpleDOMNode(nodeName, nodeValue) {\n          _classCallCheck(this, SimpleDOMNode);\n          this.nodeName = nodeName;\n          this.nodeValue = nodeValue;\n          Object.defineProperty(this, \"parentNode\", {\n            value: null,\n            writable: true\n          });\n        }\n        _createClass(SimpleDOMNode, [{\n          key: \"hasChildNodes\",\n          value: function hasChildNodes() {\n            return this.childNodes && this.childNodes.length > 0;\n          }\n        }, {\n          key: \"firstChild\",\n          get: function get() {\n            return this.childNodes && this.childNodes[0];\n          }\n        }, {\n          key: \"nextSibling\",\n          get: function get() {\n            var childNodes = this.parentNode.childNodes;\n            if (!childNodes) {\n              return undefined;\n            }\n            var index = childNodes.indexOf(this);\n            if (index === -1) {\n              return undefined;\n            }\n            return childNodes[index + 1];\n          }\n        }, {\n          key: \"textContent\",\n          get: function get() {\n            if (!this.childNodes) {\n              return this.nodeValue || \"\";\n            }\n            return this.childNodes.map(function (child) {\n              return child.textContent;\n            }).join(\"\");\n          }\n        }]);\n        return SimpleDOMNode;\n      }();\n      var SimpleXMLParser = /*#__PURE__*/function (_XMLParserBase) {\n        _inherits(SimpleXMLParser, _XMLParserBase);\n        var _super = _createSuper(SimpleXMLParser);\n        function SimpleXMLParser() {\n          var _this2;\n          _classCallCheck(this, SimpleXMLParser);\n          _this2 = _super.call(this);\n          _this2._currentFragment = null;\n          _this2._stack = null;\n          _this2._errorCode = XMLParserErrorCode.NoError;\n          return _this2;\n        }\n        _createClass(SimpleXMLParser, [{\n          key: \"parseFromString\",\n          value: function parseFromString(data) {\n            this._currentFragment = [];\n            this._stack = [];\n            this._errorCode = XMLParserErrorCode.NoError;\n            this.parseXml(data);\n            if (this._errorCode !== XMLParserErrorCode.NoError) {\n              return undefined;\n            }\n            var _this$_currentFragmen = _slicedToArray(this._currentFragment, 1),\n              documentElement = _this$_currentFragmen[0];\n            if (!documentElement) {\n              return undefined;\n            }\n            return {\n              documentElement: documentElement\n            };\n          }\n        }, {\n          key: \"onResolveEntity\",\n          value: function onResolveEntity(name) {\n            switch (name) {\n              case \"apos\":\n                return \"'\";\n            }\n            return _get(_getPrototypeOf(SimpleXMLParser.prototype), \"onResolveEntity\", this).call(this, name);\n          }\n        }, {\n          key: \"onText\",\n          value: function onText(text) {\n            if (isWhitespaceString(text)) {\n              return;\n            }\n            var node = new SimpleDOMNode(\"#text\", text);\n            this._currentFragment.push(node);\n          }\n        }, {\n          key: \"onCdata\",\n          value: function onCdata(text) {\n            var node = new SimpleDOMNode(\"#text\", text);\n            this._currentFragment.push(node);\n          }\n        }, {\n          key: \"onBeginElement\",\n          value: function onBeginElement(name, attributes, isEmpty) {\n            var node = new SimpleDOMNode(name);\n            node.childNodes = [];\n            this._currentFragment.push(node);\n            if (isEmpty) {\n              return;\n            }\n            this._stack.push(this._currentFragment);\n            this._currentFragment = node.childNodes;\n          }\n        }, {\n          key: \"onEndElement\",\n          value: function onEndElement(name) {\n            this._currentFragment = this._stack.pop() || [];\n            var lastElement = this._currentFragment[this._currentFragment.length - 1];\n            if (!lastElement) {\n              return;\n            }\n            for (var i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n              lastElement.childNodes[i].parentNode = lastElement;\n            }\n          }\n        }, {\n          key: \"onError\",\n          value: function onError(code) {\n            this._errorCode = code;\n          }\n        }]);\n        return SimpleXMLParser;\n      }(XMLParserBase);\n      exports.SimpleXMLParser = SimpleXMLParser;\n\n      /***/\n    }, /* 207 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFDataTransportStream = void 0;\n      var _regenerator = _interopRequireDefault(__w_pdfjs_require__(2));\n      var _util = __w_pdfjs_require__(5);\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          \"default\": obj\n        };\n      }\n      function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n        if (info.done) {\n          resolve(value);\n        } else {\n          Promise.resolve(value).then(_next, _throw);\n        }\n      }\n      function _asyncToGenerator(fn) {\n        return function () {\n          var self = this,\n            args = arguments;\n          return new Promise(function (resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n          });\n        };\n      }\n      function _createForOfIteratorHelper(o, allowArrayLike) {\n        var it;\n        if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n          if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n            if (it) o = it;\n            var i = 0;\n            var F = function F() {};\n            return {\n              s: F,\n              n: function n() {\n                if (i >= o.length) return {\n                  done: true\n                };\n                return {\n                  done: false,\n                  value: o[i++]\n                };\n              },\n              e: function e(_e) {\n                throw _e;\n              },\n              f: F\n            };\n          }\n          throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n        }\n        var normalCompletion = true,\n          didErr = false,\n          err;\n        return {\n          s: function s() {\n            it = o[Symbol.iterator]();\n          },\n          n: function n() {\n            var step = it.next();\n            normalCompletion = step.done;\n            return step;\n          },\n          e: function e(_e2) {\n            didErr = true;\n            err = _e2;\n          },\n          f: function f() {\n            try {\n              if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n            } finally {\n              if (didErr) throw err;\n            }\n          }\n        };\n      }\n      function _unsupportedIterableToArray(o, minLen) {\n        if (!o) return;\n        if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n        var n = Object.prototype.toString.call(o).slice(8, -1);\n        if (n === \"Object\" && o.constructor) n = o.constructor.name;\n        if (n === \"Map\" || n === \"Set\") return Array.from(o);\n        if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n      }\n      function _arrayLikeToArray(arr, len) {\n        if (len == null || len > arr.length) len = arr.length;\n        for (var i = 0, arr2 = new Array(len); i < len; i++) {\n          arr2[i] = arr[i];\n        }\n        return arr2;\n      }\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n      function _defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n      function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        return Constructor;\n      }\n      var PDFDataTransportStream = /*#__PURE__*/function () {\n        function PDFDataTransportStream(params, pdfDataRangeTransport) {\n          var _this = this;\n          _classCallCheck(this, PDFDataTransportStream);\n          (0, _util.assert)(pdfDataRangeTransport, 'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.');\n          this._queuedChunks = [];\n          this._progressiveDone = params.progressiveDone || false;\n          var initialData = params.initialData;\n          if (initialData && initialData.length > 0) {\n            var buffer = new Uint8Array(initialData).buffer;\n            this._queuedChunks.push(buffer);\n          }\n          this._pdfDataRangeTransport = pdfDataRangeTransport;\n          this._isStreamingSupported = !params.disableStream;\n          this._isRangeSupported = !params.disableRange;\n          this._contentLength = params.length;\n          this._fullRequestReader = null;\n          this._rangeReaders = [];\n          this._pdfDataRangeTransport.addRangeListener(function (begin, chunk) {\n            _this._onReceiveData({\n              begin: begin,\n              chunk: chunk\n            });\n          });\n          this._pdfDataRangeTransport.addProgressListener(function (loaded, total) {\n            _this._onProgress({\n              loaded: loaded,\n              total: total\n            });\n          });\n          this._pdfDataRangeTransport.addProgressiveReadListener(function (chunk) {\n            _this._onReceiveData({\n              chunk: chunk\n            });\n          });\n          this._pdfDataRangeTransport.addProgressiveDoneListener(function () {\n            _this._onProgressiveDone();\n          });\n          this._pdfDataRangeTransport.transportReady();\n        }\n        _createClass(PDFDataTransportStream, [{\n          key: \"_onReceiveData\",\n          value: function _onReceiveData(args) {\n            var buffer = new Uint8Array(args.chunk).buffer;\n            if (args.begin === undefined) {\n              if (this._fullRequestReader) {\n                this._fullRequestReader._enqueue(buffer);\n              } else {\n                this._queuedChunks.push(buffer);\n              }\n            } else {\n              var found = this._rangeReaders.some(function (rangeReader) {\n                if (rangeReader._begin !== args.begin) {\n                  return false;\n                }\n                rangeReader._enqueue(buffer);\n                return true;\n              });\n              (0, _util.assert)(found, \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\");\n            }\n          }\n        }, {\n          key: \"_onProgress\",\n          value: function _onProgress(evt) {\n            if (evt.total === undefined) {\n              var firstReader = this._rangeReaders[0];\n              if (firstReader && firstReader.onProgress) {\n                firstReader.onProgress({\n                  loaded: evt.loaded\n                });\n              }\n            } else {\n              var fullReader = this._fullRequestReader;\n              if (fullReader && fullReader.onProgress) {\n                fullReader.onProgress({\n                  loaded: evt.loaded,\n                  total: evt.total\n                });\n              }\n            }\n          }\n        }, {\n          key: \"_onProgressiveDone\",\n          value: function _onProgressiveDone() {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.progressiveDone();\n            }\n            this._progressiveDone = true;\n          }\n        }, {\n          key: \"_removeRangeReader\",\n          value: function _removeRangeReader(reader) {\n            var i = this._rangeReaders.indexOf(reader);\n            if (i >= 0) {\n              this._rangeReaders.splice(i, 1);\n            }\n          }\n        }, {\n          key: \"getFullReader\",\n          value: function getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFDataTransportStream.getFullReader can only be called once.\");\n            var queuedChunks = this._queuedChunks;\n            this._queuedChunks = null;\n            return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone);\n          }\n        }, {\n          key: \"getRangeReader\",\n          value: function getRangeReader(begin, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n            var reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n            this._pdfDataRangeTransport.requestDataRange(begin, end);\n            this._rangeReaders.push(reader);\n            return reader;\n          }\n        }, {\n          key: \"cancelAllRequests\",\n          value: function cancelAllRequests(reason) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.cancel(reason);\n            }\n            var readers = this._rangeReaders.slice(0);\n            readers.forEach(function (rangeReader) {\n              rangeReader.cancel(reason);\n            });\n            this._pdfDataRangeTransport.abort();\n          }\n        }, {\n          key: \"_progressiveDataLength\",\n          get: function get() {\n            return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n          }\n        }]);\n        return PDFDataTransportStream;\n      }();\n      exports.PDFDataTransportStream = PDFDataTransportStream;\n      var PDFDataTransportStreamReader = /*#__PURE__*/function () {\n        function PDFDataTransportStreamReader(stream, queuedChunks) {\n          var progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          _classCallCheck(this, PDFDataTransportStreamReader);\n          this._stream = stream;\n          this._done = progressiveDone || false;\n          this._filename = null;\n          this._queuedChunks = queuedChunks || [];\n          this._loaded = 0;\n          var _iterator = _createForOfIteratorHelper(this._queuedChunks),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var chunk = _step.value;\n              this._loaded += chunk.byteLength;\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n          this._requests = [];\n          this._headersReady = Promise.resolve();\n          stream._fullRequestReader = this;\n          this.onProgress = null;\n        }\n        _createClass(PDFDataTransportStreamReader, [{\n          key: \"_enqueue\",\n          value: function _enqueue(chunk) {\n            if (this._done) {\n              return;\n            }\n            if (this._requests.length > 0) {\n              var requestCapability = this._requests.shift();\n              requestCapability.resolve({\n                value: chunk,\n                done: false\n              });\n            } else {\n              this._queuedChunks.push(chunk);\n            }\n            this._loaded += chunk.byteLength;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read = _asyncToGenerator( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n              var chunk, requestCapability;\n              return _regenerator[\"default\"].wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      if (!(this._queuedChunks.length > 0)) {\n                        _context.next = 3;\n                        break;\n                      }\n                      chunk = this._queuedChunks.shift();\n                      return _context.abrupt(\"return\", {\n                        value: chunk,\n                        done: false\n                      });\n                    case 3:\n                      if (!this._done) {\n                        _context.next = 5;\n                        break;\n                      }\n                      return _context.abrupt(\"return\", {\n                        value: undefined,\n                        done: true\n                      });\n                    case 5:\n                      requestCapability = (0, _util.createPromiseCapability)();\n                      this._requests.push(requestCapability);\n                      return _context.abrupt(\"return\", requestCapability.promise);\n                    case 8:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee, this);\n            }));\n            function read() {\n              return _read.apply(this, arguments);\n            }\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            this._done = true;\n            this._requests.forEach(function (requestCapability) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            });\n            this._requests = [];\n          }\n        }, {\n          key: \"progressiveDone\",\n          value: function progressiveDone() {\n            if (this._done) {\n              return;\n            }\n            this._done = true;\n          }\n        }, {\n          key: \"headersReady\",\n          get: function get() {\n            return this._headersReady;\n          }\n        }, {\n          key: \"filename\",\n          get: function get() {\n            return this._filename;\n          }\n        }, {\n          key: \"isRangeSupported\",\n          get: function get() {\n            return this._stream._isRangeSupported;\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return this._stream._isStreamingSupported;\n          }\n        }, {\n          key: \"contentLength\",\n          get: function get() {\n            return this._stream._contentLength;\n          }\n        }]);\n        return PDFDataTransportStreamReader;\n      }();\n      var PDFDataTransportStreamRangeReader = /*#__PURE__*/function () {\n        function PDFDataTransportStreamRangeReader(stream, begin, end) {\n          _classCallCheck(this, PDFDataTransportStreamRangeReader);\n          this._stream = stream;\n          this._begin = begin;\n          this._end = end;\n          this._queuedChunk = null;\n          this._requests = [];\n          this._done = false;\n          this.onProgress = null;\n        }\n        _createClass(PDFDataTransportStreamRangeReader, [{\n          key: \"_enqueue\",\n          value: function _enqueue(chunk) {\n            if (this._done) {\n              return;\n            }\n            if (this._requests.length === 0) {\n              this._queuedChunk = chunk;\n            } else {\n              var requestsCapability = this._requests.shift();\n              requestsCapability.resolve({\n                value: chunk,\n                done: false\n              });\n              this._requests.forEach(function (requestCapability) {\n                requestCapability.resolve({\n                  value: undefined,\n                  done: true\n                });\n              });\n              this._requests = [];\n            }\n            this._done = true;\n            this._stream._removeRangeReader(this);\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read2 = _asyncToGenerator( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n              var chunk, requestCapability;\n              return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      if (!this._queuedChunk) {\n                        _context2.next = 4;\n                        break;\n                      }\n                      chunk = this._queuedChunk;\n                      this._queuedChunk = null;\n                      return _context2.abrupt(\"return\", {\n                        value: chunk,\n                        done: false\n                      });\n                    case 4:\n                      if (!this._done) {\n                        _context2.next = 6;\n                        break;\n                      }\n                      return _context2.abrupt(\"return\", {\n                        value: undefined,\n                        done: true\n                      });\n                    case 6:\n                      requestCapability = (0, _util.createPromiseCapability)();\n                      this._requests.push(requestCapability);\n                      return _context2.abrupt(\"return\", requestCapability.promise);\n                    case 9:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2, this);\n            }));\n            function read() {\n              return _read2.apply(this, arguments);\n            }\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            this._done = true;\n            this._requests.forEach(function (requestCapability) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            });\n            this._requests = [];\n            this._stream._removeRangeReader(this);\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return false;\n          }\n        }]);\n        return PDFDataTransportStreamRangeReader;\n      }();\n\n      /***/\n    }, /* 208 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.WebGLContext = void 0;\n      var _util = __w_pdfjs_require__(5);\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n      function _defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n      function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        return Constructor;\n      }\n      var WebGLContext = /*#__PURE__*/function () {\n        function WebGLContext(_ref) {\n          var _ref$enable = _ref.enable,\n            enable = _ref$enable === void 0 ? false : _ref$enable;\n          _classCallCheck(this, WebGLContext);\n          this._enabled = enable === true;\n        }\n        _createClass(WebGLContext, [{\n          key: \"composeSMask\",\n          value: function composeSMask(_ref2) {\n            var layer = _ref2.layer,\n              mask = _ref2.mask,\n              properties = _ref2.properties;\n            return WebGLUtils.composeSMask(layer, mask, properties);\n          }\n        }, {\n          key: \"drawFigures\",\n          value: function drawFigures(_ref3) {\n            var width = _ref3.width,\n              height = _ref3.height,\n              backgroundColor = _ref3.backgroundColor,\n              figures = _ref3.figures,\n              context = _ref3.context;\n            return WebGLUtils.drawFigures(width, height, backgroundColor, figures, context);\n          }\n        }, {\n          key: \"clear\",\n          value: function clear() {\n            WebGLUtils.cleanup();\n          }\n        }, {\n          key: \"isEnabled\",\n          get: function get() {\n            var enabled = this._enabled;\n            if (enabled) {\n              enabled = WebGLUtils.tryInitGL();\n            }\n            return (0, _util.shadow)(this, \"isEnabled\", enabled);\n          }\n        }]);\n        return WebGLContext;\n      }();\n      exports.WebGLContext = WebGLContext;\n      var WebGLUtils = function WebGLUtilsClosure() {\n        function loadShader(gl, code, shaderType) {\n          var shader = gl.createShader(shaderType);\n          gl.shaderSource(shader, code);\n          gl.compileShader(shader);\n          var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n          if (!compiled) {\n            var errorMsg = gl.getShaderInfoLog(shader);\n            throw new Error(\"Error during shader compilation: \" + errorMsg);\n          }\n          return shader;\n        }\n        function createVertexShader(gl, code) {\n          return loadShader(gl, code, gl.VERTEX_SHADER);\n        }\n        function createFragmentShader(gl, code) {\n          return loadShader(gl, code, gl.FRAGMENT_SHADER);\n        }\n        function createProgram(gl, shaders) {\n          var program = gl.createProgram();\n          for (var i = 0, ii = shaders.length; i < ii; ++i) {\n            gl.attachShader(program, shaders[i]);\n          }\n          gl.linkProgram(program);\n          var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n          if (!linked) {\n            var errorMsg = gl.getProgramInfoLog(program);\n            throw new Error(\"Error during program linking: \" + errorMsg);\n          }\n          return program;\n        }\n        function createTexture(gl, image, textureId) {\n          gl.activeTexture(textureId);\n          var texture = gl.createTexture();\n          gl.bindTexture(gl.TEXTURE_2D, texture);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n          return texture;\n        }\n        var currentGL, currentCanvas;\n        function generateGL() {\n          if (currentGL) {\n            return;\n          }\n          currentCanvas = document.createElement(\"canvas\");\n          currentGL = currentCanvas.getContext(\"webgl\", {\n            premultipliedalpha: false\n          });\n        }\n        var smaskVertexShaderCode = \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n        var smaskFragmentShaderCode = \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n        var smaskCache = null;\n        function initSmaskGL() {\n          var canvas, gl;\n          generateGL();\n          canvas = currentCanvas;\n          currentCanvas = null;\n          gl = currentGL;\n          currentGL = null;\n          var vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n          var fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n          var program = createProgram(gl, [vertexShader, fragmentShader]);\n          gl.useProgram(program);\n          var cache = {};\n          cache.gl = gl;\n          cache.canvas = canvas;\n          cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n          cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n          cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n          cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n          var texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n          var texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n          var texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n          var texCoordBuffer = gl.createBuffer();\n          gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n          gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]), gl.STATIC_DRAW);\n          gl.enableVertexAttribArray(texCoordLocation);\n          gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n          gl.uniform1i(texLayerLocation, 0);\n          gl.uniform1i(texMaskLocation, 1);\n          smaskCache = cache;\n        }\n        function composeSMask(layer, mask, properties) {\n          var width = layer.width,\n            height = layer.height;\n          if (!smaskCache) {\n            initSmaskGL();\n          }\n          var cache = smaskCache,\n            canvas = cache.canvas,\n            gl = cache.gl;\n          canvas.width = width;\n          canvas.height = height;\n          gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n          gl.uniform2f(cache.resolutionLocation, width, height);\n          if (properties.backdrop) {\n            gl.uniform4f(cache.resolutionLocation, properties.backdrop[0], properties.backdrop[1], properties.backdrop[2], 1);\n          } else {\n            gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n          }\n          gl.uniform1i(cache.subtypeLocation, properties.subtype === \"Luminosity\" ? 1 : 0);\n          var texture = createTexture(gl, layer, gl.TEXTURE0);\n          var maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n          var buffer = gl.createBuffer();\n          gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n          gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0, 0, width, 0, 0, height, 0, height, width, 0, width, height]), gl.STATIC_DRAW);\n          gl.enableVertexAttribArray(cache.positionLocation);\n          gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n          gl.clearColor(0, 0, 0, 0);\n          gl.enable(gl.BLEND);\n          gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n          gl.clear(gl.COLOR_BUFFER_BIT);\n          gl.drawArrays(gl.TRIANGLES, 0, 6);\n          gl.flush();\n          gl.deleteTexture(texture);\n          gl.deleteTexture(maskTexture);\n          gl.deleteBuffer(buffer);\n          return canvas;\n        }\n        var figuresVertexShaderCode = \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n        var figuresFragmentShaderCode = \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n        var figuresCache = null;\n        function initFiguresGL() {\n          var canvas, gl;\n          generateGL();\n          canvas = currentCanvas;\n          currentCanvas = null;\n          gl = currentGL;\n          currentGL = null;\n          var vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n          var fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n          var program = createProgram(gl, [vertexShader, fragmentShader]);\n          gl.useProgram(program);\n          var cache = {};\n          cache.gl = gl;\n          cache.canvas = canvas;\n          cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n          cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n          cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n          cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n          cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n          figuresCache = cache;\n        }\n        function drawFigures(width, height, backgroundColor, figures, context) {\n          if (!figuresCache) {\n            initFiguresGL();\n          }\n          var cache = figuresCache,\n            canvas = cache.canvas,\n            gl = cache.gl;\n          canvas.width = width;\n          canvas.height = height;\n          gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n          gl.uniform2f(cache.resolutionLocation, width, height);\n          var count = 0;\n          var i, ii, rows;\n          for (i = 0, ii = figures.length; i < ii; i++) {\n            switch (figures[i].type) {\n              case \"lattice\":\n                rows = figures[i].coords.length / figures[i].verticesPerRow | 0;\n                count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n                break;\n              case \"triangles\":\n                count += figures[i].coords.length;\n                break;\n            }\n          }\n          var coords = new Float32Array(count * 2);\n          var colors = new Uint8Array(count * 3);\n          var coordsMap = context.coords,\n            colorsMap = context.colors;\n          var pIndex = 0,\n            cIndex = 0;\n          for (i = 0, ii = figures.length; i < ii; i++) {\n            var figure = figures[i],\n              ps = figure.coords,\n              cs = figure.colors;\n            switch (figure.type) {\n              case \"lattice\":\n                var cols = figure.verticesPerRow;\n                rows = ps.length / cols | 0;\n                for (var row = 1; row < rows; row++) {\n                  var offset = row * cols + 1;\n                  for (var col = 1; col < cols; col++, offset++) {\n                    coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n                    coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n                    coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n                    coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n                    coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n                    coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n                    colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n                    colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n                    colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n                    colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n                    colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n                    colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n                    colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n                    colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n                    colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n                    coords[pIndex + 6] = coords[pIndex + 2];\n                    coords[pIndex + 7] = coords[pIndex + 3];\n                    coords[pIndex + 8] = coords[pIndex + 4];\n                    coords[pIndex + 9] = coords[pIndex + 5];\n                    coords[pIndex + 10] = coordsMap[ps[offset]];\n                    coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n                    colors[cIndex + 9] = colors[cIndex + 3];\n                    colors[cIndex + 10] = colors[cIndex + 4];\n                    colors[cIndex + 11] = colors[cIndex + 5];\n                    colors[cIndex + 12] = colors[cIndex + 6];\n                    colors[cIndex + 13] = colors[cIndex + 7];\n                    colors[cIndex + 14] = colors[cIndex + 8];\n                    colors[cIndex + 15] = colorsMap[cs[offset]];\n                    colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n                    colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n                    pIndex += 12;\n                    cIndex += 18;\n                  }\n                }\n                break;\n              case \"triangles\":\n                for (var j = 0, jj = ps.length; j < jj; j++) {\n                  coords[pIndex] = coordsMap[ps[j]];\n                  coords[pIndex + 1] = coordsMap[ps[j] + 1];\n                  colors[cIndex] = colorsMap[cs[j]];\n                  colors[cIndex + 1] = colorsMap[cs[j] + 1];\n                  colors[cIndex + 2] = colorsMap[cs[j] + 2];\n                  pIndex += 2;\n                  cIndex += 3;\n                }\n                break;\n            }\n          }\n          if (backgroundColor) {\n            gl.clearColor(backgroundColor[0] / 255, backgroundColor[1] / 255, backgroundColor[2] / 255, 1.0);\n          } else {\n            gl.clearColor(0, 0, 0, 0);\n          }\n          gl.clear(gl.COLOR_BUFFER_BIT);\n          var coordsBuffer = gl.createBuffer();\n          gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n          gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n          gl.enableVertexAttribArray(cache.positionLocation);\n          gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n          var colorsBuffer = gl.createBuffer();\n          gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n          gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n          gl.enableVertexAttribArray(cache.colorLocation);\n          gl.vertexAttribPointer(cache.colorLocation, 3, gl.UNSIGNED_BYTE, false, 0, 0);\n          gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n          gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n          gl.drawArrays(gl.TRIANGLES, 0, count);\n          gl.flush();\n          gl.deleteBuffer(coordsBuffer);\n          gl.deleteBuffer(colorsBuffer);\n          return canvas;\n        }\n        return {\n          tryInitGL: function tryInitGL() {\n            try {\n              generateGL();\n              return !!currentGL;\n            } catch (ex) {}\n            return false;\n          },\n          composeSMask: composeSMask,\n          drawFigures: drawFigures,\n          cleanup: function cleanup() {\n            if (smaskCache && smaskCache.canvas) {\n              smaskCache.canvas.width = 0;\n              smaskCache.canvas.height = 0;\n            }\n            if (figuresCache && figuresCache.canvas) {\n              figuresCache.canvas.width = 0;\n              figuresCache.canvas.height = 0;\n            }\n            smaskCache = null;\n            figuresCache = null;\n          }\n        };\n      }();\n\n      /***/\n    }, /* 209 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.AnnotationLayer = void 0;\n      var _display_utils = __w_pdfjs_require__(1);\n      var _util = __w_pdfjs_require__(5);\n      function _createForOfIteratorHelper(o, allowArrayLike) {\n        var it;\n        if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n          if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n            if (it) o = it;\n            var i = 0;\n            var F = function F() {};\n            return {\n              s: F,\n              n: function n() {\n                if (i >= o.length) return {\n                  done: true\n                };\n                return {\n                  done: false,\n                  value: o[i++]\n                };\n              },\n              e: function e(_e) {\n                throw _e;\n              },\n              f: F\n            };\n          }\n          throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n        }\n        var normalCompletion = true,\n          didErr = false,\n          err;\n        return {\n          s: function s() {\n            it = o[Symbol.iterator]();\n          },\n          n: function n() {\n            var step = it.next();\n            normalCompletion = step.done;\n            return step;\n          },\n          e: function e(_e2) {\n            didErr = true;\n            err = _e2;\n          },\n          f: function f() {\n            try {\n              if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n            } finally {\n              if (didErr) throw err;\n            }\n          }\n        };\n      }\n      function _unsupportedIterableToArray(o, minLen) {\n        if (!o) return;\n        if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n        var n = Object.prototype.toString.call(o).slice(8, -1);\n        if (n === \"Object\" && o.constructor) n = o.constructor.name;\n        if (n === \"Map\" || n === \"Set\") return Array.from(o);\n        if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n      }\n      function _arrayLikeToArray(arr, len) {\n        if (len == null || len > arr.length) len = arr.length;\n        for (var i = 0, arr2 = new Array(len); i < len; i++) {\n          arr2[i] = arr[i];\n        }\n        return arr2;\n      }\n      function _get(target, property, receiver) {\n        if (typeof Reflect !== \"undefined\" && Reflect.get) {\n          _get = Reflect.get;\n        } else {\n          _get = function _get(target, property, receiver) {\n            var base = _superPropBase(target, property);\n            if (!base) return;\n            var desc = Object.getOwnPropertyDescriptor(base, property);\n            if (desc.get) {\n              return desc.get.call(receiver);\n            }\n            return desc.value;\n          };\n        }\n        return _get(target, property, receiver || target);\n      }\n      function _superPropBase(object, property) {\n        while (!Object.prototype.hasOwnProperty.call(object, property)) {\n          object = _getPrototypeOf(object);\n          if (object === null) break;\n        }\n        return object;\n      }\n      function _typeof(obj) {\n        \"@babel/helpers - typeof\";\n\n        if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n          _typeof = function _typeof(obj) {\n            return typeof obj;\n          };\n        } else {\n          _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n          };\n        }\n        return _typeof(obj);\n      }\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function\");\n        }\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) _setPrototypeOf(subClass, superClass);\n      }\n      function _setPrototypeOf(o, p) {\n        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n          o.__proto__ = p;\n          return o;\n        };\n        return _setPrototypeOf(o, p);\n      }\n      function _createSuper(Derived) {\n        var hasNativeReflectConstruct = _isNativeReflectConstruct();\n        return function _createSuperInternal() {\n          var Super = _getPrototypeOf(Derived),\n            result;\n          if (hasNativeReflectConstruct) {\n            var NewTarget = _getPrototypeOf(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n          } else {\n            result = Super.apply(this, arguments);\n          }\n          return _possibleConstructorReturn(this, result);\n        };\n      }\n      function _possibleConstructorReturn(self, call) {\n        if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n          return call;\n        }\n        return _assertThisInitialized(self);\n      }\n      function _assertThisInitialized(self) {\n        if (self === void 0) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n        return self;\n      }\n      function _isNativeReflectConstruct() {\n        if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n        if (Reflect.construct.sham) return false;\n        if (typeof Proxy === \"function\") return true;\n        try {\n          Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n          return true;\n        } catch (e) {\n          return false;\n        }\n      }\n      function _getPrototypeOf(o) {\n        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n          return o.__proto__ || Object.getPrototypeOf(o);\n        };\n        return _getPrototypeOf(o);\n      }\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n      function _defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n      function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        return Constructor;\n      }\n      var AnnotationElementFactory = /*#__PURE__*/function () {\n        function AnnotationElementFactory() {\n          _classCallCheck(this, AnnotationElementFactory);\n        }\n        _createClass(AnnotationElementFactory, null, [{\n          key: \"create\",\n          value: function create(parameters) {\n            var subtype = parameters.data.annotationType;\n            switch (subtype) {\n              case _util.AnnotationType.LINK:\n                return new LinkAnnotationElement(parameters);\n              case _util.AnnotationType.TEXT:\n                return new TextAnnotationElement(parameters);\n              case _util.AnnotationType.WIDGET:\n                var fieldType = parameters.data.fieldType;\n                switch (fieldType) {\n                  case \"Tx\":\n                    return new TextWidgetAnnotationElement(parameters);\n                  case \"Btn\":\n                    if (parameters.data.radioButton) {\n                      return new RadioButtonWidgetAnnotationElement(parameters);\n                    } else if (parameters.data.checkBox) {\n                      return new CheckboxWidgetAnnotationElement(parameters);\n                    }\n                    return new PushButtonWidgetAnnotationElement(parameters);\n                  case \"Ch\":\n                    return new ChoiceWidgetAnnotationElement(parameters);\n                }\n                return new WidgetAnnotationElement(parameters);\n              case _util.AnnotationType.POPUP:\n                return new PopupAnnotationElement(parameters);\n              case _util.AnnotationType.FREETEXT:\n                return new FreeTextAnnotationElement(parameters);\n              case _util.AnnotationType.LINE:\n                return new LineAnnotationElement(parameters);\n              case _util.AnnotationType.SQUARE:\n                return new SquareAnnotationElement(parameters);\n              case _util.AnnotationType.CIRCLE:\n                return new CircleAnnotationElement(parameters);\n              case _util.AnnotationType.POLYLINE:\n                return new PolylineAnnotationElement(parameters);\n              case _util.AnnotationType.CARET:\n                return new CaretAnnotationElement(parameters);\n              case _util.AnnotationType.INK:\n                return new InkAnnotationElement(parameters);\n              case _util.AnnotationType.POLYGON:\n                return new PolygonAnnotationElement(parameters);\n              case _util.AnnotationType.HIGHLIGHT:\n                return new HighlightAnnotationElement(parameters);\n              case _util.AnnotationType.UNDERLINE:\n                return new UnderlineAnnotationElement(parameters);\n              case _util.AnnotationType.SQUIGGLY:\n                return new SquigglyAnnotationElement(parameters);\n              case _util.AnnotationType.STRIKEOUT:\n                return new StrikeOutAnnotationElement(parameters);\n              case _util.AnnotationType.STAMP:\n                return new StampAnnotationElement(parameters);\n              case _util.AnnotationType.FILEATTACHMENT:\n                return new FileAttachmentAnnotationElement(parameters);\n              default:\n                return new AnnotationElement(parameters);\n            }\n          }\n        }]);\n        return AnnotationElementFactory;\n      }();\n      var AnnotationElement = /*#__PURE__*/function () {\n        function AnnotationElement(parameters) {\n          var isRenderable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          var ignoreBorder = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          _classCallCheck(this, AnnotationElement);\n          this.isRenderable = isRenderable;\n          this.data = parameters.data;\n          this.layer = parameters.layer;\n          this.page = parameters.page;\n          this.viewport = parameters.viewport;\n          this.linkService = parameters.linkService;\n          this.downloadManager = parameters.downloadManager;\n          this.imageResourcesPath = parameters.imageResourcesPath;\n          this.renderInteractiveForms = parameters.renderInteractiveForms;\n          this.svgFactory = parameters.svgFactory;\n          if (isRenderable) {\n            this.container = this._createContainer(ignoreBorder);\n          }\n        }\n        _createClass(AnnotationElement, [{\n          key: \"_createContainer\",\n          value: function _createContainer() {\n            var ignoreBorder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            var data = this.data,\n              page = this.page,\n              viewport = this.viewport;\n            var container = document.createElement(\"section\");\n            var width = data.rect[2] - data.rect[0];\n            var height = data.rect[3] - data.rect[1];\n            container.setAttribute(\"data-annotation-id\", data.id);\n            var rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n            container.style.transform = \"matrix(\".concat(viewport.transform.join(\",\"), \")\");\n            container.style.transformOrigin = \"-\".concat(rect[0], \"px -\").concat(rect[1], \"px\");\n            if (!ignoreBorder && data.borderStyle.width > 0) {\n              container.style.borderWidth = \"\".concat(data.borderStyle.width, \"px\");\n              if (data.borderStyle.style !== _util.AnnotationBorderStyleType.UNDERLINE) {\n                width = width - 2 * data.borderStyle.width;\n                height = height - 2 * data.borderStyle.width;\n              }\n              var horizontalRadius = data.borderStyle.horizontalCornerRadius;\n              var verticalRadius = data.borderStyle.verticalCornerRadius;\n              if (horizontalRadius > 0 || verticalRadius > 0) {\n                var radius = \"\".concat(horizontalRadius, \"px / \").concat(verticalRadius, \"px\");\n                container.style.borderRadius = radius;\n              }\n              switch (data.borderStyle.style) {\n                case _util.AnnotationBorderStyleType.SOLID:\n                  container.style.borderStyle = \"solid\";\n                  break;\n                case _util.AnnotationBorderStyleType.DASHED:\n                  container.style.borderStyle = \"dashed\";\n                  break;\n                case _util.AnnotationBorderStyleType.BEVELED:\n                  (0, _util.warn)(\"Unimplemented border style: beveled\");\n                  break;\n                case _util.AnnotationBorderStyleType.INSET:\n                  (0, _util.warn)(\"Unimplemented border style: inset\");\n                  break;\n                case _util.AnnotationBorderStyleType.UNDERLINE:\n                  container.style.borderBottomStyle = \"solid\";\n                  break;\n                default:\n                  break;\n              }\n              if (data.color) {\n                container.style.borderColor = _util.Util.makeCssRgb(data.color[0] | 0, data.color[1] | 0, data.color[2] | 0);\n              } else {\n                container.style.borderWidth = 0;\n              }\n            }\n            container.style.left = \"\".concat(rect[0], \"px\");\n            container.style.top = \"\".concat(rect[1], \"px\");\n            container.style.width = \"\".concat(width, \"px\");\n            container.style.height = \"\".concat(height, \"px\");\n            return container;\n          }\n        }, {\n          key: \"_createPopup\",\n          value: function _createPopup(container, trigger, data) {\n            if (!trigger) {\n              trigger = document.createElement(\"div\");\n              trigger.style.height = container.style.height;\n              trigger.style.width = container.style.width;\n              container.appendChild(trigger);\n            }\n            var popupElement = new PopupElement({\n              container: container,\n              trigger: trigger,\n              color: data.color,\n              title: data.title,\n              modificationDate: data.modificationDate,\n              contents: data.contents,\n              hideWrapper: true\n            });\n            var popup = popupElement.render();\n            popup.style.left = container.style.width;\n            container.appendChild(popup);\n          }\n        }, {\n          key: \"render\",\n          value: function render() {\n            (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\");\n          }\n        }]);\n        return AnnotationElement;\n      }();\n      var LinkAnnotationElement = /*#__PURE__*/function (_AnnotationElement) {\n        _inherits(LinkAnnotationElement, _AnnotationElement);\n        var _super = _createSuper(LinkAnnotationElement);\n        function LinkAnnotationElement(parameters) {\n          _classCallCheck(this, LinkAnnotationElement);\n          var isRenderable = !!(parameters.data.url || parameters.data.dest || parameters.data.action);\n          return _super.call(this, parameters, isRenderable);\n        }\n        _createClass(LinkAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"linkAnnotation\";\n            var data = this.data,\n              linkService = this.linkService;\n            var link = document.createElement(\"a\");\n            if (data.url) {\n              (0, _display_utils.addLinkAttributes)(link, {\n                url: data.url,\n                target: data.newWindow ? _display_utils.LinkTarget.BLANK : linkService.externalLinkTarget,\n                rel: linkService.externalLinkRel,\n                enabled: linkService.externalLinkEnabled\n              });\n            } else if (data.action) {\n              this._bindNamedAction(link, data.action);\n            } else {\n              this._bindLink(link, data.dest);\n            }\n            this.container.appendChild(link);\n            return this.container;\n          }\n        }, {\n          key: \"_bindLink\",\n          value: function _bindLink(link, destination) {\n            var _this = this;\n            link.href = this.linkService.getDestinationHash(destination);\n            link.onclick = function () {\n              if (destination) {\n                _this.linkService.navigateTo(destination);\n              }\n              return false;\n            };\n            if (destination) {\n              link.className = \"internalLink\";\n            }\n          }\n        }, {\n          key: \"_bindNamedAction\",\n          value: function _bindNamedAction(link, action) {\n            var _this2 = this;\n            link.href = this.linkService.getAnchorUrl(\"\");\n            link.onclick = function () {\n              _this2.linkService.executeNamedAction(action);\n              return false;\n            };\n            link.className = \"internalLink\";\n          }\n        }]);\n        return LinkAnnotationElement;\n      }(AnnotationElement);\n      var TextAnnotationElement = /*#__PURE__*/function (_AnnotationElement2) {\n        _inherits(TextAnnotationElement, _AnnotationElement2);\n        var _super2 = _createSuper(TextAnnotationElement);\n        function TextAnnotationElement(parameters) {\n          _classCallCheck(this, TextAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super2.call(this, parameters, isRenderable);\n        }\n        _createClass(TextAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"textAnnotation\";\n            var image = document.createElement(\"img\");\n            image.style.height = this.container.style.height;\n            image.style.width = this.container.style.width;\n            image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n            image.alt = \"[{{type}} Annotation]\";\n            image.dataset.l10nId = \"text_annotation_type\";\n            image.dataset.l10nArgs = JSON.stringify({\n              type: this.data.name\n            });\n            if (!this.data.hasPopup) {\n              this._createPopup(this.container, image, this.data);\n            }\n            this.container.appendChild(image);\n            return this.container;\n          }\n        }]);\n        return TextAnnotationElement;\n      }(AnnotationElement);\n      var WidgetAnnotationElement = /*#__PURE__*/function (_AnnotationElement3) {\n        _inherits(WidgetAnnotationElement, _AnnotationElement3);\n        var _super3 = _createSuper(WidgetAnnotationElement);\n        function WidgetAnnotationElement() {\n          _classCallCheck(this, WidgetAnnotationElement);\n          return _super3.apply(this, arguments);\n        }\n        _createClass(WidgetAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            return this.container;\n          }\n        }]);\n        return WidgetAnnotationElement;\n      }(AnnotationElement);\n      var TextWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem) {\n        _inherits(TextWidgetAnnotationElement, _WidgetAnnotationElem);\n        var _super4 = _createSuper(TextWidgetAnnotationElement);\n        function TextWidgetAnnotationElement(parameters) {\n          _classCallCheck(this, TextWidgetAnnotationElement);\n          var isRenderable = parameters.renderInteractiveForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n          return _super4.call(this, parameters, isRenderable);\n        }\n        _createClass(TextWidgetAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            var TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n            this.container.className = \"textWidgetAnnotation\";\n            var element = null;\n            if (this.renderInteractiveForms) {\n              if (this.data.multiLine) {\n                element = document.createElement(\"textarea\");\n                element.textContent = this.data.fieldValue;\n              } else {\n                element = document.createElement(\"input\");\n                element.type = \"text\";\n                element.setAttribute(\"value\", this.data.fieldValue);\n              }\n              element.disabled = this.data.readOnly;\n              element.name = this.data.fieldName;\n              if (this.data.maxLen !== null) {\n                element.maxLength = this.data.maxLen;\n              }\n              if (this.data.comb) {\n                var fieldWidth = this.data.rect[2] - this.data.rect[0];\n                var combWidth = fieldWidth / this.data.maxLen;\n                element.classList.add(\"comb\");\n                element.style.letterSpacing = \"calc(\".concat(combWidth, \"px - 1ch)\");\n              }\n            } else {\n              element = document.createElement(\"div\");\n              element.textContent = this.data.fieldValue;\n              element.style.verticalAlign = \"middle\";\n              element.style.display = \"table-cell\";\n              var font = null;\n              if (this.data.fontRefName && this.page.commonObjs.has(this.data.fontRefName)) {\n                font = this.page.commonObjs.get(this.data.fontRefName);\n              }\n              this._setTextStyle(element, font);\n            }\n            if (this.data.textAlignment !== null) {\n              element.style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n            }\n            this.container.appendChild(element);\n            return this.container;\n          }\n        }, {\n          key: \"_setTextStyle\",\n          value: function _setTextStyle(element, font) {\n            var style = element.style;\n            style.fontSize = \"\".concat(this.data.fontSize, \"px\");\n            style.direction = this.data.fontDirection < 0 ? \"rtl\" : \"ltr\";\n            if (!font) {\n              return;\n            }\n            var bold = \"normal\";\n            if (font.black) {\n              bold = \"900\";\n            } else if (font.bold) {\n              bold = \"bold\";\n            }\n            style.fontWeight = bold;\n            style.fontStyle = font.italic ? \"italic\" : \"normal\";\n            var fontFamily = font.loadedName ? \"\\\"\".concat(font.loadedName, \"\\\", \") : \"\";\n            var fallbackName = font.fallbackName || \"Helvetica, sans-serif\";\n            style.fontFamily = fontFamily + fallbackName;\n          }\n        }]);\n        return TextWidgetAnnotationElement;\n      }(WidgetAnnotationElement);\n      var CheckboxWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem2) {\n        _inherits(CheckboxWidgetAnnotationElement, _WidgetAnnotationElem2);\n        var _super5 = _createSuper(CheckboxWidgetAnnotationElement);\n        function CheckboxWidgetAnnotationElement(parameters) {\n          _classCallCheck(this, CheckboxWidgetAnnotationElement);\n          return _super5.call(this, parameters, parameters.renderInteractiveForms);\n        }\n        _createClass(CheckboxWidgetAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"buttonWidgetAnnotation checkBox\";\n            var element = document.createElement(\"input\");\n            element.disabled = this.data.readOnly;\n            element.type = \"checkbox\";\n            element.name = this.data.fieldName;\n            if (this.data.fieldValue && this.data.fieldValue !== \"Off\") {\n              element.setAttribute(\"checked\", true);\n            }\n            this.container.appendChild(element);\n            return this.container;\n          }\n        }]);\n        return CheckboxWidgetAnnotationElement;\n      }(WidgetAnnotationElement);\n      var RadioButtonWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem3) {\n        _inherits(RadioButtonWidgetAnnotationElement, _WidgetAnnotationElem3);\n        var _super6 = _createSuper(RadioButtonWidgetAnnotationElement);\n        function RadioButtonWidgetAnnotationElement(parameters) {\n          _classCallCheck(this, RadioButtonWidgetAnnotationElement);\n          return _super6.call(this, parameters, parameters.renderInteractiveForms);\n        }\n        _createClass(RadioButtonWidgetAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"buttonWidgetAnnotation radioButton\";\n            var element = document.createElement(\"input\");\n            element.disabled = this.data.readOnly;\n            element.type = \"radio\";\n            element.name = this.data.fieldName;\n            if (this.data.fieldValue === this.data.buttonValue) {\n              element.setAttribute(\"checked\", true);\n            }\n            this.container.appendChild(element);\n            return this.container;\n          }\n        }]);\n        return RadioButtonWidgetAnnotationElement;\n      }(WidgetAnnotationElement);\n      var PushButtonWidgetAnnotationElement = /*#__PURE__*/function (_LinkAnnotationElemen) {\n        _inherits(PushButtonWidgetAnnotationElement, _LinkAnnotationElemen);\n        var _super7 = _createSuper(PushButtonWidgetAnnotationElement);\n        function PushButtonWidgetAnnotationElement() {\n          _classCallCheck(this, PushButtonWidgetAnnotationElement);\n          return _super7.apply(this, arguments);\n        }\n        _createClass(PushButtonWidgetAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            var container = _get(_getPrototypeOf(PushButtonWidgetAnnotationElement.prototype), \"render\", this).call(this);\n            container.className = \"buttonWidgetAnnotation pushButton\";\n            return container;\n          }\n        }]);\n        return PushButtonWidgetAnnotationElement;\n      }(LinkAnnotationElement);\n      var ChoiceWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem4) {\n        _inherits(ChoiceWidgetAnnotationElement, _WidgetAnnotationElem4);\n        var _super8 = _createSuper(ChoiceWidgetAnnotationElement);\n        function ChoiceWidgetAnnotationElement(parameters) {\n          _classCallCheck(this, ChoiceWidgetAnnotationElement);\n          return _super8.call(this, parameters, parameters.renderInteractiveForms);\n        }\n        _createClass(ChoiceWidgetAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"choiceWidgetAnnotation\";\n            var selectElement = document.createElement(\"select\");\n            selectElement.disabled = this.data.readOnly;\n            selectElement.name = this.data.fieldName;\n            if (!this.data.combo) {\n              selectElement.size = this.data.options.length;\n              if (this.data.multiSelect) {\n                selectElement.multiple = true;\n              }\n            }\n            var _iterator = _createForOfIteratorHelper(this.data.options),\n              _step;\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var option = _step.value;\n                var optionElement = document.createElement(\"option\");\n                optionElement.textContent = option.displayValue;\n                optionElement.value = option.exportValue;\n                if (this.data.fieldValue.includes(option.displayValue)) {\n                  optionElement.setAttribute(\"selected\", true);\n                }\n                selectElement.appendChild(optionElement);\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n            this.container.appendChild(selectElement);\n            return this.container;\n          }\n        }]);\n        return ChoiceWidgetAnnotationElement;\n      }(WidgetAnnotationElement);\n      var PopupAnnotationElement = /*#__PURE__*/function (_AnnotationElement4) {\n        _inherits(PopupAnnotationElement, _AnnotationElement4);\n        var _super9 = _createSuper(PopupAnnotationElement);\n        function PopupAnnotationElement(parameters) {\n          _classCallCheck(this, PopupAnnotationElement);\n          var isRenderable = !!(parameters.data.title || parameters.data.contents);\n          return _super9.call(this, parameters, isRenderable);\n        }\n        _createClass(PopupAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            var IGNORE_TYPES = [\"Line\", \"Square\", \"Circle\", \"PolyLine\", \"Polygon\", \"Ink\"];\n            this.container.className = \"popupAnnotation\";\n            if (IGNORE_TYPES.includes(this.data.parentType)) {\n              return this.container;\n            }\n            var selector = \"[data-annotation-id=\\\"\".concat(this.data.parentId, \"\\\"]\");\n            var parentElement = this.layer.querySelector(selector);\n            if (!parentElement) {\n              return this.container;\n            }\n            var popup = new PopupElement({\n              container: this.container,\n              trigger: parentElement,\n              color: this.data.color,\n              title: this.data.title,\n              modificationDate: this.data.modificationDate,\n              contents: this.data.contents\n            });\n            var parentLeft = parseFloat(parentElement.style.left);\n            var parentWidth = parseFloat(parentElement.style.width);\n            this.container.style.transformOrigin = \"-\".concat(parentLeft + parentWidth, \"px -\").concat(parentElement.style.top);\n            this.container.style.left = \"\".concat(parentLeft + parentWidth, \"px\");\n            this.container.appendChild(popup.render());\n            return this.container;\n          }\n        }]);\n        return PopupAnnotationElement;\n      }(AnnotationElement);\n      var PopupElement = /*#__PURE__*/function () {\n        function PopupElement(parameters) {\n          _classCallCheck(this, PopupElement);\n          this.container = parameters.container;\n          this.trigger = parameters.trigger;\n          this.color = parameters.color;\n          this.title = parameters.title;\n          this.modificationDate = parameters.modificationDate;\n          this.contents = parameters.contents;\n          this.hideWrapper = parameters.hideWrapper || false;\n          this.pinned = false;\n        }\n        _createClass(PopupElement, [{\n          key: \"render\",\n          value: function render() {\n            var BACKGROUND_ENLIGHT = 0.7;\n            var wrapper = document.createElement(\"div\");\n            wrapper.className = \"popupWrapper\";\n            this.hideElement = this.hideWrapper ? wrapper : this.container;\n            this.hideElement.setAttribute(\"hidden\", true);\n            var popup = document.createElement(\"div\");\n            popup.className = \"popup\";\n            var color = this.color;\n            if (color) {\n              var r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n              var g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n              var b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n              popup.style.backgroundColor = _util.Util.makeCssRgb(r | 0, g | 0, b | 0);\n            }\n            var title = document.createElement(\"h1\");\n            title.textContent = this.title;\n            popup.appendChild(title);\n            var dateObject = _display_utils.PDFDateString.toDateObject(this.modificationDate);\n            if (dateObject) {\n              var modificationDate = document.createElement(\"span\");\n              modificationDate.textContent = \"{{date}}, {{time}}\";\n              modificationDate.dataset.l10nId = \"annotation_date_string\";\n              modificationDate.dataset.l10nArgs = JSON.stringify({\n                date: dateObject.toLocaleDateString(),\n                time: dateObject.toLocaleTimeString()\n              });\n              popup.appendChild(modificationDate);\n            }\n            var contents = this._formatContents(this.contents);\n            popup.appendChild(contents);\n            this.trigger.addEventListener(\"click\", this._toggle.bind(this));\n            this.trigger.addEventListener(\"mouseover\", this._show.bind(this, false));\n            this.trigger.addEventListener(\"mouseout\", this._hide.bind(this, false));\n            popup.addEventListener(\"click\", this._hide.bind(this, true));\n            wrapper.appendChild(popup);\n            return wrapper;\n          }\n        }, {\n          key: \"_formatContents\",\n          value: function _formatContents(contents) {\n            var p = document.createElement(\"p\");\n            var lines = contents.split(/(?:\\r\\n?|\\n)/);\n            for (var i = 0, ii = lines.length; i < ii; ++i) {\n              var line = lines[i];\n              p.appendChild(document.createTextNode(line));\n              if (i < ii - 1) {\n                p.appendChild(document.createElement(\"br\"));\n              }\n            }\n            return p;\n          }\n        }, {\n          key: \"_toggle\",\n          value: function _toggle() {\n            if (this.pinned) {\n              this._hide(true);\n            } else {\n              this._show(true);\n            }\n          }\n        }, {\n          key: \"_show\",\n          value: function _show() {\n            var pin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            if (pin) {\n              this.pinned = true;\n            }\n            if (this.hideElement.hasAttribute(\"hidden\")) {\n              this.hideElement.removeAttribute(\"hidden\");\n              this.container.style.zIndex += 1;\n            }\n          }\n        }, {\n          key: \"_hide\",\n          value: function _hide() {\n            var unpin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n            if (unpin) {\n              this.pinned = false;\n            }\n            if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n              this.hideElement.setAttribute(\"hidden\", true);\n              this.container.style.zIndex -= 1;\n            }\n          }\n        }]);\n        return PopupElement;\n      }();\n      var FreeTextAnnotationElement = /*#__PURE__*/function (_AnnotationElement5) {\n        _inherits(FreeTextAnnotationElement, _AnnotationElement5);\n        var _super10 = _createSuper(FreeTextAnnotationElement);\n        function FreeTextAnnotationElement(parameters) {\n          _classCallCheck(this, FreeTextAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super10.call(this, parameters, isRenderable, true);\n        }\n        _createClass(FreeTextAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"freeTextAnnotation\";\n            if (!this.data.hasPopup) {\n              this._createPopup(this.container, null, this.data);\n            }\n            return this.container;\n          }\n        }]);\n        return FreeTextAnnotationElement;\n      }(AnnotationElement);\n      var LineAnnotationElement = /*#__PURE__*/function (_AnnotationElement6) {\n        _inherits(LineAnnotationElement, _AnnotationElement6);\n        var _super11 = _createSuper(LineAnnotationElement);\n        function LineAnnotationElement(parameters) {\n          _classCallCheck(this, LineAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super11.call(this, parameters, isRenderable, true);\n        }\n        _createClass(LineAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"lineAnnotation\";\n            var data = this.data;\n            var width = data.rect[2] - data.rect[0];\n            var height = data.rect[3] - data.rect[1];\n            var svg = this.svgFactory.create(width, height);\n            var line = this.svgFactory.createElement(\"svg:line\");\n            line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n            line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n            line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n            line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n            line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n            line.setAttribute(\"stroke\", \"transparent\");\n            svg.appendChild(line);\n            this.container.append(svg);\n            this._createPopup(this.container, line, data);\n            return this.container;\n          }\n        }]);\n        return LineAnnotationElement;\n      }(AnnotationElement);\n      var SquareAnnotationElement = /*#__PURE__*/function (_AnnotationElement7) {\n        _inherits(SquareAnnotationElement, _AnnotationElement7);\n        var _super12 = _createSuper(SquareAnnotationElement);\n        function SquareAnnotationElement(parameters) {\n          _classCallCheck(this, SquareAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super12.call(this, parameters, isRenderable, true);\n        }\n        _createClass(SquareAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"squareAnnotation\";\n            var data = this.data;\n            var width = data.rect[2] - data.rect[0];\n            var height = data.rect[3] - data.rect[1];\n            var svg = this.svgFactory.create(width, height);\n            var borderWidth = data.borderStyle.width;\n            var square = this.svgFactory.createElement(\"svg:rect\");\n            square.setAttribute(\"x\", borderWidth / 2);\n            square.setAttribute(\"y\", borderWidth / 2);\n            square.setAttribute(\"width\", width - borderWidth);\n            square.setAttribute(\"height\", height - borderWidth);\n            square.setAttribute(\"stroke-width\", borderWidth || 1);\n            square.setAttribute(\"stroke\", \"transparent\");\n            square.setAttribute(\"fill\", \"none\");\n            svg.appendChild(square);\n            this.container.append(svg);\n            this._createPopup(this.container, square, data);\n            return this.container;\n          }\n        }]);\n        return SquareAnnotationElement;\n      }(AnnotationElement);\n      var CircleAnnotationElement = /*#__PURE__*/function (_AnnotationElement8) {\n        _inherits(CircleAnnotationElement, _AnnotationElement8);\n        var _super13 = _createSuper(CircleAnnotationElement);\n        function CircleAnnotationElement(parameters) {\n          _classCallCheck(this, CircleAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super13.call(this, parameters, isRenderable, true);\n        }\n        _createClass(CircleAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"circleAnnotation\";\n            var data = this.data;\n            var width = data.rect[2] - data.rect[0];\n            var height = data.rect[3] - data.rect[1];\n            var svg = this.svgFactory.create(width, height);\n            var borderWidth = data.borderStyle.width;\n            var circle = this.svgFactory.createElement(\"svg:ellipse\");\n            circle.setAttribute(\"cx\", width / 2);\n            circle.setAttribute(\"cy\", height / 2);\n            circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n            circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n            circle.setAttribute(\"stroke-width\", borderWidth || 1);\n            circle.setAttribute(\"stroke\", \"transparent\");\n            circle.setAttribute(\"fill\", \"none\");\n            svg.appendChild(circle);\n            this.container.append(svg);\n            this._createPopup(this.container, circle, data);\n            return this.container;\n          }\n        }]);\n        return CircleAnnotationElement;\n      }(AnnotationElement);\n      var PolylineAnnotationElement = /*#__PURE__*/function (_AnnotationElement9) {\n        _inherits(PolylineAnnotationElement, _AnnotationElement9);\n        var _super14 = _createSuper(PolylineAnnotationElement);\n        function PolylineAnnotationElement(parameters) {\n          var _this3;\n          _classCallCheck(this, PolylineAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          _this3 = _super14.call(this, parameters, isRenderable, true);\n          _this3.containerClassName = \"polylineAnnotation\";\n          _this3.svgElementName = \"svg:polyline\";\n          return _this3;\n        }\n        _createClass(PolylineAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = this.containerClassName;\n            var data = this.data;\n            var width = data.rect[2] - data.rect[0];\n            var height = data.rect[3] - data.rect[1];\n            var svg = this.svgFactory.create(width, height);\n            var points = [];\n            var _iterator2 = _createForOfIteratorHelper(data.vertices),\n              _step2;\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var coordinate = _step2.value;\n                var x = coordinate.x - data.rect[0];\n                var y = data.rect[3] - coordinate.y;\n                points.push(x + \",\" + y);\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n            points = points.join(\" \");\n            var polyline = this.svgFactory.createElement(this.svgElementName);\n            polyline.setAttribute(\"points\", points);\n            polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n            polyline.setAttribute(\"stroke\", \"transparent\");\n            polyline.setAttribute(\"fill\", \"none\");\n            svg.appendChild(polyline);\n            this.container.append(svg);\n            this._createPopup(this.container, polyline, data);\n            return this.container;\n          }\n        }]);\n        return PolylineAnnotationElement;\n      }(AnnotationElement);\n      var PolygonAnnotationElement = /*#__PURE__*/function (_PolylineAnnotationEl) {\n        _inherits(PolygonAnnotationElement, _PolylineAnnotationEl);\n        var _super15 = _createSuper(PolygonAnnotationElement);\n        function PolygonAnnotationElement(parameters) {\n          var _this4;\n          _classCallCheck(this, PolygonAnnotationElement);\n          _this4 = _super15.call(this, parameters);\n          _this4.containerClassName = \"polygonAnnotation\";\n          _this4.svgElementName = \"svg:polygon\";\n          return _this4;\n        }\n        return PolygonAnnotationElement;\n      }(PolylineAnnotationElement);\n      var CaretAnnotationElement = /*#__PURE__*/function (_AnnotationElement10) {\n        _inherits(CaretAnnotationElement, _AnnotationElement10);\n        var _super16 = _createSuper(CaretAnnotationElement);\n        function CaretAnnotationElement(parameters) {\n          _classCallCheck(this, CaretAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super16.call(this, parameters, isRenderable, true);\n        }\n        _createClass(CaretAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"caretAnnotation\";\n            if (!this.data.hasPopup) {\n              this._createPopup(this.container, null, this.data);\n            }\n            return this.container;\n          }\n        }]);\n        return CaretAnnotationElement;\n      }(AnnotationElement);\n      var InkAnnotationElement = /*#__PURE__*/function (_AnnotationElement11) {\n        _inherits(InkAnnotationElement, _AnnotationElement11);\n        var _super17 = _createSuper(InkAnnotationElement);\n        function InkAnnotationElement(parameters) {\n          var _this5;\n          _classCallCheck(this, InkAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          _this5 = _super17.call(this, parameters, isRenderable, true);\n          _this5.containerClassName = \"inkAnnotation\";\n          _this5.svgElementName = \"svg:polyline\";\n          return _this5;\n        }\n        _createClass(InkAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = this.containerClassName;\n            var data = this.data;\n            var width = data.rect[2] - data.rect[0];\n            var height = data.rect[3] - data.rect[1];\n            var svg = this.svgFactory.create(width, height);\n            var _iterator3 = _createForOfIteratorHelper(data.inkLists),\n              _step3;\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var inkList = _step3.value;\n                var points = [];\n                var _iterator4 = _createForOfIteratorHelper(inkList),\n                  _step4;\n                try {\n                  for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                    var coordinate = _step4.value;\n                    var x = coordinate.x - data.rect[0];\n                    var y = data.rect[3] - coordinate.y;\n                    points.push(\"\".concat(x, \",\").concat(y));\n                  }\n                } catch (err) {\n                  _iterator4.e(err);\n                } finally {\n                  _iterator4.f();\n                }\n                points = points.join(\" \");\n                var polyline = this.svgFactory.createElement(this.svgElementName);\n                polyline.setAttribute(\"points\", points);\n                polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n                polyline.setAttribute(\"stroke\", \"transparent\");\n                polyline.setAttribute(\"fill\", \"none\");\n                this._createPopup(this.container, polyline, data);\n                svg.appendChild(polyline);\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n            this.container.append(svg);\n            return this.container;\n          }\n        }]);\n        return InkAnnotationElement;\n      }(AnnotationElement);\n      var HighlightAnnotationElement = /*#__PURE__*/function (_AnnotationElement12) {\n        _inherits(HighlightAnnotationElement, _AnnotationElement12);\n        var _super18 = _createSuper(HighlightAnnotationElement);\n        function HighlightAnnotationElement(parameters) {\n          _classCallCheck(this, HighlightAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super18.call(this, parameters, isRenderable, true);\n        }\n        _createClass(HighlightAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"highlightAnnotation\";\n            if (!this.data.hasPopup) {\n              this._createPopup(this.container, null, this.data);\n            }\n            return this.container;\n          }\n        }]);\n        return HighlightAnnotationElement;\n      }(AnnotationElement);\n      var UnderlineAnnotationElement = /*#__PURE__*/function (_AnnotationElement13) {\n        _inherits(UnderlineAnnotationElement, _AnnotationElement13);\n        var _super19 = _createSuper(UnderlineAnnotationElement);\n        function UnderlineAnnotationElement(parameters) {\n          _classCallCheck(this, UnderlineAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super19.call(this, parameters, isRenderable, true);\n        }\n        _createClass(UnderlineAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"underlineAnnotation\";\n            if (!this.data.hasPopup) {\n              this._createPopup(this.container, null, this.data);\n            }\n            return this.container;\n          }\n        }]);\n        return UnderlineAnnotationElement;\n      }(AnnotationElement);\n      var SquigglyAnnotationElement = /*#__PURE__*/function (_AnnotationElement14) {\n        _inherits(SquigglyAnnotationElement, _AnnotationElement14);\n        var _super20 = _createSuper(SquigglyAnnotationElement);\n        function SquigglyAnnotationElement(parameters) {\n          _classCallCheck(this, SquigglyAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super20.call(this, parameters, isRenderable, true);\n        }\n        _createClass(SquigglyAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"squigglyAnnotation\";\n            if (!this.data.hasPopup) {\n              this._createPopup(this.container, null, this.data);\n            }\n            return this.container;\n          }\n        }]);\n        return SquigglyAnnotationElement;\n      }(AnnotationElement);\n      var StrikeOutAnnotationElement = /*#__PURE__*/function (_AnnotationElement15) {\n        _inherits(StrikeOutAnnotationElement, _AnnotationElement15);\n        var _super21 = _createSuper(StrikeOutAnnotationElement);\n        function StrikeOutAnnotationElement(parameters) {\n          _classCallCheck(this, StrikeOutAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super21.call(this, parameters, isRenderable, true);\n        }\n        _createClass(StrikeOutAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"strikeoutAnnotation\";\n            if (!this.data.hasPopup) {\n              this._createPopup(this.container, null, this.data);\n            }\n            return this.container;\n          }\n        }]);\n        return StrikeOutAnnotationElement;\n      }(AnnotationElement);\n      var StampAnnotationElement = /*#__PURE__*/function (_AnnotationElement16) {\n        _inherits(StampAnnotationElement, _AnnotationElement16);\n        var _super22 = _createSuper(StampAnnotationElement);\n        function StampAnnotationElement(parameters) {\n          _classCallCheck(this, StampAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super22.call(this, parameters, isRenderable, true);\n        }\n        _createClass(StampAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"stampAnnotation\";\n            if (!this.data.hasPopup) {\n              this._createPopup(this.container, null, this.data);\n            }\n            return this.container;\n          }\n        }]);\n        return StampAnnotationElement;\n      }(AnnotationElement);\n      var FileAttachmentAnnotationElement = /*#__PURE__*/function (_AnnotationElement17) {\n        _inherits(FileAttachmentAnnotationElement, _AnnotationElement17);\n        var _super23 = _createSuper(FileAttachmentAnnotationElement);\n        function FileAttachmentAnnotationElement(parameters) {\n          var _this6;\n          _classCallCheck(this, FileAttachmentAnnotationElement);\n          _this6 = _super23.call(this, parameters, true);\n          var _this6$data$file = _this6.data.file,\n            filename = _this6$data$file.filename,\n            content = _this6$data$file.content;\n          _this6.filename = (0, _display_utils.getFilenameFromUrl)(filename);\n          _this6.content = content;\n          if (_this6.linkService.eventBus) {\n            _this6.linkService.eventBus.dispatch(\"fileattachmentannotation\", {\n              source: _assertThisInitialized(_this6),\n              id: (0, _util.stringToPDFString)(filename),\n              filename: filename,\n              content: content\n            });\n          }\n          return _this6;\n        }\n        _createClass(FileAttachmentAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"fileAttachmentAnnotation\";\n            var trigger = document.createElement(\"div\");\n            trigger.style.height = this.container.style.height;\n            trigger.style.width = this.container.style.width;\n            trigger.addEventListener(\"dblclick\", this._download.bind(this));\n            if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n              this._createPopup(this.container, trigger, this.data);\n            }\n            this.container.appendChild(trigger);\n            return this.container;\n          }\n        }, {\n          key: \"_download\",\n          value: function _download() {\n            if (!this.downloadManager) {\n              (0, _util.warn)(\"Download cannot be started due to unavailable download manager\");\n              return;\n            }\n            this.downloadManager.downloadData(this.content, this.filename, \"\");\n          }\n        }]);\n        return FileAttachmentAnnotationElement;\n      }(AnnotationElement);\n      var AnnotationLayer = /*#__PURE__*/function () {\n        function AnnotationLayer() {\n          _classCallCheck(this, AnnotationLayer);\n        }\n        _createClass(AnnotationLayer, null, [{\n          key: \"render\",\n          value: function render(parameters) {\n            var sortedAnnotations = [],\n              popupAnnotations = [];\n            var _iterator5 = _createForOfIteratorHelper(parameters.annotations),\n              _step5;\n            try {\n              for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                var _data = _step5.value;\n                if (!_data) {\n                  continue;\n                }\n                if (_data.annotationType === _util.AnnotationType.POPUP) {\n                  popupAnnotations.push(_data);\n                  continue;\n                }\n                sortedAnnotations.push(_data);\n              }\n            } catch (err) {\n              _iterator5.e(err);\n            } finally {\n              _iterator5.f();\n            }\n            if (popupAnnotations.length) {\n              sortedAnnotations.push.apply(sortedAnnotations, popupAnnotations);\n            }\n            for (var _i = 0, _sortedAnnotations = sortedAnnotations; _i < _sortedAnnotations.length; _i++) {\n              var data = _sortedAnnotations[_i];\n              var element = AnnotationElementFactory.create({\n                data: data,\n                layer: parameters.div,\n                page: parameters.page,\n                viewport: parameters.viewport,\n                linkService: parameters.linkService,\n                downloadManager: parameters.downloadManager,\n                imageResourcesPath: parameters.imageResourcesPath || \"\",\n                renderInteractiveForms: parameters.renderInteractiveForms || false,\n                svgFactory: new _display_utils.DOMSVGFactory()\n              });\n              if (element.isRenderable) {\n                parameters.div.appendChild(element.render());\n              }\n            }\n          }\n        }, {\n          key: \"update\",\n          value: function update(parameters) {\n            var _iterator6 = _createForOfIteratorHelper(parameters.annotations),\n              _step6;\n            try {\n              for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                var data = _step6.value;\n                var element = parameters.div.querySelector(\"[data-annotation-id=\\\"\".concat(data.id, \"\\\"]\"));\n                if (element) {\n                  element.style.transform = \"matrix(\".concat(parameters.viewport.transform.join(\",\"), \")\");\n                }\n              }\n            } catch (err) {\n              _iterator6.e(err);\n            } finally {\n              _iterator6.f();\n            }\n            parameters.div.removeAttribute(\"hidden\");\n          }\n        }]);\n        return AnnotationLayer;\n      }();\n      exports.AnnotationLayer = AnnotationLayer;\n\n      /***/\n    }, /* 210 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.renderTextLayer = void 0;\n      var _util = __w_pdfjs_require__(5);\n      var renderTextLayer = function renderTextLayerClosure() {\n        var MAX_TEXT_DIVS_TO_RENDER = 100000;\n        var NonWhitespaceRegexp = /\\S/;\n        function isAllWhitespace(str) {\n          return !NonWhitespaceRegexp.test(str);\n        }\n        function appendText(task, geom, styles) {\n          var textDiv = document.createElement(\"span\");\n          var textDivProperties = {\n            angle: 0,\n            canvasWidth: 0,\n            isWhitespace: false,\n            originalTransform: null,\n            paddingBottom: 0,\n            paddingLeft: 0,\n            paddingRight: 0,\n            paddingTop: 0,\n            scale: 1\n          };\n          task._textDivs.push(textDiv);\n          if (isAllWhitespace(geom.str)) {\n            textDivProperties.isWhitespace = true;\n            task._textDivProperties.set(textDiv, textDivProperties);\n            return;\n          }\n          var tx = _util.Util.transform(task._viewport.transform, geom.transform);\n          var angle = Math.atan2(tx[1], tx[0]);\n          var style = styles[geom.fontName];\n          if (style.vertical) {\n            angle += Math.PI / 2;\n          }\n          var fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n          var fontAscent = fontHeight;\n          if (style.ascent) {\n            fontAscent = style.ascent * fontAscent;\n          } else if (style.descent) {\n            fontAscent = (1 + style.descent) * fontAscent;\n          }\n          var left, top;\n          if (angle === 0) {\n            left = tx[4];\n            top = tx[5] - fontAscent;\n          } else {\n            left = tx[4] + fontAscent * Math.sin(angle);\n            top = tx[5] - fontAscent * Math.cos(angle);\n          }\n          textDiv.style.left = \"\".concat(left, \"px\");\n          textDiv.style.top = \"\".concat(top, \"px\");\n          textDiv.style.fontSize = \"\".concat(fontHeight, \"px\");\n          textDiv.style.fontFamily = style.fontFamily;\n          textDiv.textContent = geom.str;\n          if (task._fontInspectorEnabled) {\n            textDiv.dataset.fontName = geom.fontName;\n          }\n          if (angle !== 0) {\n            textDivProperties.angle = angle * (180 / Math.PI);\n          }\n          var shouldScaleText = false;\n          if (geom.str.length > 1) {\n            shouldScaleText = true;\n          } else if (geom.transform[0] !== geom.transform[3]) {\n            var absScaleX = Math.abs(geom.transform[0]),\n              absScaleY = Math.abs(geom.transform[3]);\n            if (absScaleX !== absScaleY && Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5) {\n              shouldScaleText = true;\n            }\n          }\n          if (shouldScaleText) {\n            if (style.vertical) {\n              textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n            } else {\n              textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n            }\n          }\n          task._textDivProperties.set(textDiv, textDivProperties);\n          if (task._textContentStream) {\n            task._layoutText(textDiv);\n          }\n          if (task._enhanceTextSelection) {\n            var angleCos = 1,\n              angleSin = 0;\n            if (angle !== 0) {\n              angleCos = Math.cos(angle);\n              angleSin = Math.sin(angle);\n            }\n            var divWidth = (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n            var divHeight = fontHeight;\n            var m, b;\n            if (angle !== 0) {\n              m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n              b = _util.Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n            } else {\n              b = [left, top, left + divWidth, top + divHeight];\n            }\n            task._bounds.push({\n              left: b[0],\n              top: b[1],\n              right: b[2],\n              bottom: b[3],\n              div: textDiv,\n              size: [divWidth, divHeight],\n              m: m\n            });\n          }\n        }\n        function render(task) {\n          if (task._canceled) {\n            return;\n          }\n          var textDivs = task._textDivs;\n          var capability = task._capability;\n          var textDivsLength = textDivs.length;\n          if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n            task._renderingDone = true;\n            capability.resolve();\n            return;\n          }\n          if (!task._textContentStream) {\n            for (var i = 0; i < textDivsLength; i++) {\n              task._layoutText(textDivs[i]);\n            }\n          }\n          task._renderingDone = true;\n          capability.resolve();\n        }\n        function findPositiveMin(ts, offset, count) {\n          var result = 0;\n          for (var i = 0; i < count; i++) {\n            var t = ts[offset++];\n            if (t > 0) {\n              result = result ? Math.min(t, result) : t;\n            }\n          }\n          return result;\n        }\n        function expand(task) {\n          var bounds = task._bounds;\n          var viewport = task._viewport;\n          var expanded = expandBounds(viewport.width, viewport.height, bounds);\n          for (var i = 0; i < expanded.length; i++) {\n            var div = bounds[i].div;\n            var divProperties = task._textDivProperties.get(div);\n            if (divProperties.angle === 0) {\n              divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n              divProperties.paddingTop = bounds[i].top - expanded[i].top;\n              divProperties.paddingRight = expanded[i].right - bounds[i].right;\n              divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n              task._textDivProperties.set(div, divProperties);\n              continue;\n            }\n            var e = expanded[i],\n              b = bounds[i];\n            var m = b.m,\n              c = m[0],\n              s = m[1];\n            var points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n            var ts = new Float64Array(64);\n            points.forEach(function (p, j) {\n              var t = _util.Util.applyTransform(p, m);\n              ts[j + 0] = c && (e.left - t[0]) / c;\n              ts[j + 4] = s && (e.top - t[1]) / s;\n              ts[j + 8] = c && (e.right - t[0]) / c;\n              ts[j + 12] = s && (e.bottom - t[1]) / s;\n              ts[j + 16] = s && (e.left - t[0]) / -s;\n              ts[j + 20] = c && (e.top - t[1]) / c;\n              ts[j + 24] = s && (e.right - t[0]) / -s;\n              ts[j + 28] = c && (e.bottom - t[1]) / c;\n              ts[j + 32] = c && (e.left - t[0]) / -c;\n              ts[j + 36] = s && (e.top - t[1]) / -s;\n              ts[j + 40] = c && (e.right - t[0]) / -c;\n              ts[j + 44] = s && (e.bottom - t[1]) / -s;\n              ts[j + 48] = s && (e.left - t[0]) / s;\n              ts[j + 52] = c && (e.top - t[1]) / -c;\n              ts[j + 56] = s && (e.right - t[0]) / s;\n              ts[j + 60] = c && (e.bottom - t[1]) / -c;\n            });\n            var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n            divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n            divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n            divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n            divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n            task._textDivProperties.set(div, divProperties);\n          }\n        }\n        function expandBounds(width, height, boxes) {\n          var bounds = boxes.map(function (box, i) {\n            return {\n              x1: box.left,\n              y1: box.top,\n              x2: box.right,\n              y2: box.bottom,\n              index: i,\n              x1New: undefined,\n              x2New: undefined\n            };\n          });\n          expandBoundsLTR(width, bounds);\n          var expanded = new Array(boxes.length);\n          bounds.forEach(function (b) {\n            var i = b.index;\n            expanded[i] = {\n              left: b.x1New,\n              top: 0,\n              right: b.x2New,\n              bottom: 0\n            };\n          });\n          boxes.map(function (box, i) {\n            var e = expanded[i],\n              b = bounds[i];\n            b.x1 = box.top;\n            b.y1 = width - e.right;\n            b.x2 = box.bottom;\n            b.y2 = width - e.left;\n            b.index = i;\n            b.x1New = undefined;\n            b.x2New = undefined;\n          });\n          expandBoundsLTR(height, bounds);\n          bounds.forEach(function (b) {\n            var i = b.index;\n            expanded[i].top = b.x1New;\n            expanded[i].bottom = b.x2New;\n          });\n          return expanded;\n        }\n        function expandBoundsLTR(width, bounds) {\n          bounds.sort(function (a, b) {\n            return a.x1 - b.x1 || a.index - b.index;\n          });\n          var fakeBoundary = {\n            x1: -Infinity,\n            y1: -Infinity,\n            x2: 0,\n            y2: Infinity,\n            index: -1,\n            x1New: 0,\n            x2New: 0\n          };\n          var horizon = [{\n            start: -Infinity,\n            end: Infinity,\n            boundary: fakeBoundary\n          }];\n          bounds.forEach(function (boundary) {\n            var i = 0;\n            while (i < horizon.length && horizon[i].end <= boundary.y1) {\n              i++;\n            }\n            var j = horizon.length - 1;\n            while (j >= 0 && horizon[j].start >= boundary.y2) {\n              j--;\n            }\n            var horizonPart, affectedBoundary;\n            var q,\n              k,\n              maxXNew = -Infinity;\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n              var xNew;\n              if (affectedBoundary.x2 > boundary.x1) {\n                xNew = affectedBoundary.index > boundary.index ? affectedBoundary.x1New : boundary.x1;\n              } else if (affectedBoundary.x2New === undefined) {\n                xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n              } else {\n                xNew = affectedBoundary.x2New;\n              }\n              if (xNew > maxXNew) {\n                maxXNew = xNew;\n              }\n            }\n            boundary.x1New = maxXNew;\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n              if (affectedBoundary.x2New === undefined) {\n                if (affectedBoundary.x2 > boundary.x1) {\n                  if (affectedBoundary.index > boundary.index) {\n                    affectedBoundary.x2New = affectedBoundary.x2;\n                  }\n                } else {\n                  affectedBoundary.x2New = maxXNew;\n                }\n              } else if (affectedBoundary.x2New > maxXNew) {\n                affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n              }\n            }\n            var changedHorizon = [],\n              lastBoundary = null;\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n              var useBoundary = affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n              if (lastBoundary === useBoundary) {\n                changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n              } else {\n                changedHorizon.push({\n                  start: horizonPart.start,\n                  end: horizonPart.end,\n                  boundary: useBoundary\n                });\n                lastBoundary = useBoundary;\n              }\n            }\n            if (horizon[i].start < boundary.y1) {\n              changedHorizon[0].start = boundary.y1;\n              changedHorizon.unshift({\n                start: horizon[i].start,\n                end: boundary.y1,\n                boundary: horizon[i].boundary\n              });\n            }\n            if (boundary.y2 < horizon[j].end) {\n              changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n              changedHorizon.push({\n                start: boundary.y2,\n                end: horizon[j].end,\n                boundary: horizon[j].boundary\n              });\n            }\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n              if (affectedBoundary.x2New !== undefined) {\n                continue;\n              }\n              var used = false;\n              for (k = i - 1; !used && k >= 0 && horizon[k].start >= affectedBoundary.y1; k--) {\n                used = horizon[k].boundary === affectedBoundary;\n              }\n              for (k = j + 1; !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2; k++) {\n                used = horizon[k].boundary === affectedBoundary;\n              }\n              for (k = 0; !used && k < changedHorizon.length; k++) {\n                used = changedHorizon[k].boundary === affectedBoundary;\n              }\n              if (!used) {\n                affectedBoundary.x2New = maxXNew;\n              }\n            }\n            Array.prototype.splice.apply(horizon, [i, j - i + 1].concat(changedHorizon));\n          });\n          horizon.forEach(function (horizonPart) {\n            var affectedBoundary = horizonPart.boundary;\n            if (affectedBoundary.x2New === undefined) {\n              affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n            }\n          });\n        }\n        function TextLayerRenderTask(_ref) {\n          var _this = this;\n          var textContent = _ref.textContent,\n            textContentStream = _ref.textContentStream,\n            container = _ref.container,\n            viewport = _ref.viewport,\n            textDivs = _ref.textDivs,\n            textContentItemsStr = _ref.textContentItemsStr,\n            enhanceTextSelection = _ref.enhanceTextSelection;\n          this._textContent = textContent;\n          this._textContentStream = textContentStream;\n          this._container = container;\n          this._viewport = viewport;\n          this._textDivs = textDivs || [];\n          this._textContentItemsStr = textContentItemsStr || [];\n          this._enhanceTextSelection = !!enhanceTextSelection;\n          this._fontInspectorEnabled = !!(globalThis.FontInspector && globalThis.FontInspector.enabled);\n          this._reader = null;\n          this._layoutTextLastFontSize = null;\n          this._layoutTextLastFontFamily = null;\n          this._layoutTextCtx = null;\n          this._textDivProperties = new WeakMap();\n          this._renderingDone = false;\n          this._canceled = false;\n          this._capability = (0, _util.createPromiseCapability)();\n          this._renderTimer = null;\n          this._bounds = [];\n          this._capability.promise[\"finally\"](function () {\n            if (_this._layoutTextCtx) {\n              _this._layoutTextCtx.canvas.width = 0;\n              _this._layoutTextCtx.canvas.height = 0;\n              _this._layoutTextCtx = null;\n            }\n          })[\"catch\"](function () {});\n        }\n        TextLayerRenderTask.prototype = {\n          get promise() {\n            return this._capability.promise;\n          },\n          cancel: function TextLayer_cancel() {\n            this._canceled = true;\n            if (this._reader) {\n              this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\"));\n              this._reader = null;\n            }\n            if (this._renderTimer !== null) {\n              clearTimeout(this._renderTimer);\n              this._renderTimer = null;\n            }\n            this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n          },\n          _processItems: function _processItems(items, styleCache) {\n            for (var i = 0, len = items.length; i < len; i++) {\n              this._textContentItemsStr.push(items[i].str);\n              appendText(this, items[i], styleCache);\n            }\n          },\n          _layoutText: function _layoutText(textDiv) {\n            var textDivProperties = this._textDivProperties.get(textDiv);\n            if (textDivProperties.isWhitespace) {\n              return;\n            }\n            var transform = \"\";\n            if (textDivProperties.canvasWidth !== 0) {\n              var _textDiv$style = textDiv.style,\n                fontSize = _textDiv$style.fontSize,\n                fontFamily = _textDiv$style.fontFamily;\n              if (fontSize !== this._layoutTextLastFontSize || fontFamily !== this._layoutTextLastFontFamily) {\n                this._layoutTextCtx.font = \"\".concat(fontSize, \" \").concat(fontFamily);\n                this._layoutTextLastFontSize = fontSize;\n                this._layoutTextLastFontFamily = fontFamily;\n              }\n              var _this$_layoutTextCtx$ = this._layoutTextCtx.measureText(textDiv.textContent),\n                width = _this$_layoutTextCtx$.width;\n              if (width > 0) {\n                textDivProperties.scale = textDivProperties.canvasWidth / width;\n                transform = \"scaleX(\".concat(textDivProperties.scale, \")\");\n              }\n            }\n            if (textDivProperties.angle !== 0) {\n              transform = \"rotate(\".concat(textDivProperties.angle, \"deg) \").concat(transform);\n            }\n            if (transform.length > 0) {\n              if (this._enhanceTextSelection) {\n                textDivProperties.originalTransform = transform;\n              }\n              textDiv.style.transform = transform;\n            }\n            this._textDivProperties.set(textDiv, textDivProperties);\n            this._container.appendChild(textDiv);\n          },\n          _render: function TextLayer_render(timeout) {\n            var _this2 = this;\n            var capability = (0, _util.createPromiseCapability)();\n            var styleCache = Object.create(null);\n            var canvas = document.createElement(\"canvas\");\n            canvas.mozOpaque = true;\n            this._layoutTextCtx = canvas.getContext(\"2d\", {\n              alpha: false\n            });\n            if (this._textContent) {\n              var textItems = this._textContent.items;\n              var textStyles = this._textContent.styles;\n              this._processItems(textItems, textStyles);\n              capability.resolve();\n            } else if (this._textContentStream) {\n              var pump = function pump() {\n                _this2._reader.read().then(function (_ref2) {\n                  var value = _ref2.value,\n                    done = _ref2.done;\n                  if (done) {\n                    capability.resolve();\n                    return;\n                  }\n                  Object.assign(styleCache, value.styles);\n                  _this2._processItems(value.items, styleCache);\n                  pump();\n                }, capability.reject);\n              };\n              this._reader = this._textContentStream.getReader();\n              pump();\n            } else {\n              throw new Error('Neither \"textContent\" nor \"textContentStream\"' + \" parameters specified.\");\n            }\n            capability.promise.then(function () {\n              styleCache = null;\n              if (!timeout) {\n                render(_this2);\n              } else {\n                _this2._renderTimer = setTimeout(function () {\n                  render(_this2);\n                  _this2._renderTimer = null;\n                }, timeout);\n              }\n            }, this._capability.reject);\n          },\n          expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n            if (!this._enhanceTextSelection || !this._renderingDone) {\n              return;\n            }\n            if (this._bounds !== null) {\n              expand(this);\n              this._bounds = null;\n            }\n            var transformBuf = [],\n              paddingBuf = [];\n            for (var i = 0, ii = this._textDivs.length; i < ii; i++) {\n              var div = this._textDivs[i];\n              var divProps = this._textDivProperties.get(div);\n              if (divProps.isWhitespace) {\n                continue;\n              }\n              if (expandDivs) {\n                transformBuf.length = 0;\n                paddingBuf.length = 0;\n                if (divProps.originalTransform) {\n                  transformBuf.push(divProps.originalTransform);\n                }\n                if (divProps.paddingTop > 0) {\n                  paddingBuf.push(\"\".concat(divProps.paddingTop, \"px\"));\n                  transformBuf.push(\"translateY(\".concat(-divProps.paddingTop, \"px)\"));\n                } else {\n                  paddingBuf.push(0);\n                }\n                if (divProps.paddingRight > 0) {\n                  paddingBuf.push(\"\".concat(divProps.paddingRight / divProps.scale, \"px\"));\n                } else {\n                  paddingBuf.push(0);\n                }\n                if (divProps.paddingBottom > 0) {\n                  paddingBuf.push(\"\".concat(divProps.paddingBottom, \"px\"));\n                } else {\n                  paddingBuf.push(0);\n                }\n                if (divProps.paddingLeft > 0) {\n                  paddingBuf.push(\"\".concat(divProps.paddingLeft / divProps.scale, \"px\"));\n                  transformBuf.push(\"translateX(\".concat(-divProps.paddingLeft / divProps.scale, \"px)\"));\n                } else {\n                  paddingBuf.push(0);\n                }\n                div.style.padding = paddingBuf.join(\" \");\n                if (transformBuf.length) {\n                  div.style.transform = transformBuf.join(\" \");\n                }\n              } else {\n                div.style.padding = null;\n                div.style.transform = divProps.originalTransform;\n              }\n            }\n          }\n        };\n        function renderTextLayer(renderParameters) {\n          var task = new TextLayerRenderTask({\n            textContent: renderParameters.textContent,\n            textContentStream: renderParameters.textContentStream,\n            container: renderParameters.container,\n            viewport: renderParameters.viewport,\n            textDivs: renderParameters.textDivs,\n            textContentItemsStr: renderParameters.textContentItemsStr,\n            enhanceTextSelection: renderParameters.enhanceTextSelection\n          });\n          task._render(renderParameters.timeout);\n          return task;\n        }\n        return renderTextLayer;\n      }();\n      exports.renderTextLayer = renderTextLayer;\n\n      /***/\n    }, /* 211 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.SVGGraphics = void 0;\n      var _util = __w_pdfjs_require__(5);\n      var _display_utils = __w_pdfjs_require__(1);\n      var _is_node = __w_pdfjs_require__(7);\n      function _toConsumableArray(arr) {\n        return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n      }\n      function _nonIterableSpread() {\n        throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n      }\n      function _iterableToArray(iter) {\n        if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n      }\n      function _arrayWithoutHoles(arr) {\n        if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n      }\n      function _slicedToArray(arr, i) {\n        return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n      }\n      function _nonIterableRest() {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n      }\n      function _iterableToArrayLimit(arr, i) {\n        if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n        var _arr = [];\n        var _n = true;\n        var _d = false;\n        var _e = undefined;\n        try {\n          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n          }\n        } catch (err) {\n          _d = true;\n          _e = err;\n        } finally {\n          try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n          } finally {\n            if (_d) throw _e;\n          }\n        }\n        return _arr;\n      }\n      function _arrayWithHoles(arr) {\n        if (Array.isArray(arr)) return arr;\n      }\n      function _createForOfIteratorHelper(o, allowArrayLike) {\n        var it;\n        if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n          if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n            if (it) o = it;\n            var i = 0;\n            var F = function F() {};\n            return {\n              s: F,\n              n: function n() {\n                if (i >= o.length) return {\n                  done: true\n                };\n                return {\n                  done: false,\n                  value: o[i++]\n                };\n              },\n              e: function e(_e2) {\n                throw _e2;\n              },\n              f: F\n            };\n          }\n          throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n        }\n        var normalCompletion = true,\n          didErr = false,\n          err;\n        return {\n          s: function s() {\n            it = o[Symbol.iterator]();\n          },\n          n: function n() {\n            var step = it.next();\n            normalCompletion = step.done;\n            return step;\n          },\n          e: function e(_e3) {\n            didErr = true;\n            err = _e3;\n          },\n          f: function f() {\n            try {\n              if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n            } finally {\n              if (didErr) throw err;\n            }\n          }\n        };\n      }\n      function _unsupportedIterableToArray(o, minLen) {\n        if (!o) return;\n        if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n        var n = Object.prototype.toString.call(o).slice(8, -1);\n        if (n === \"Object\" && o.constructor) n = o.constructor.name;\n        if (n === \"Map\" || n === \"Set\") return Array.from(o);\n        if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n      }\n      function _arrayLikeToArray(arr, len) {\n        if (len == null || len > arr.length) len = arr.length;\n        for (var i = 0, arr2 = new Array(len); i < len; i++) {\n          arr2[i] = arr[i];\n        }\n        return arr2;\n      }\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n      function _defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n      function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        return Constructor;\n      }\n      var SVGGraphics = function SVGGraphics() {\n        throw new Error(\"Not implemented: SVGGraphics\");\n      };\n      exports.SVGGraphics = SVGGraphics;\n      {\n        var opListToTree = function opListToTree(opList) {\n          var opTree = [];\n          var tmp = [];\n          var _iterator = _createForOfIteratorHelper(opList),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var opListElement = _step.value;\n              if (opListElement.fn === \"save\") {\n                opTree.push({\n                  fnId: 92,\n                  fn: \"group\",\n                  items: []\n                });\n                tmp.push(opTree);\n                opTree = opTree[opTree.length - 1].items;\n                continue;\n              }\n              if (opListElement.fn === \"restore\") {\n                opTree = tmp.pop();\n              } else {\n                opTree.push(opListElement);\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n          return opTree;\n        };\n        var pf = function pf(value) {\n          if (Number.isInteger(value)) {\n            return value.toString();\n          }\n          var s = value.toFixed(10);\n          var i = s.length - 1;\n          if (s[i] !== \"0\") {\n            return s;\n          }\n          do {\n            i--;\n          } while (s[i] === \"0\");\n          return s.substring(0, s[i] === \".\" ? i : i + 1);\n        };\n        var pm = function pm(m) {\n          if (m[4] === 0 && m[5] === 0) {\n            if (m[1] === 0 && m[2] === 0) {\n              if (m[0] === 1 && m[3] === 1) {\n                return \"\";\n              }\n              return \"scale(\".concat(pf(m[0]), \" \").concat(pf(m[3]), \")\");\n            }\n            if (m[0] === m[3] && m[1] === -m[2]) {\n              var a = Math.acos(m[0]) * 180 / Math.PI;\n              return \"rotate(\".concat(pf(a), \")\");\n            }\n          } else {\n            if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n              return \"translate(\".concat(pf(m[4]), \" \").concat(pf(m[5]), \")\");\n            }\n          }\n          return \"matrix(\".concat(pf(m[0]), \" \").concat(pf(m[1]), \" \").concat(pf(m[2]), \" \").concat(pf(m[3]), \" \").concat(pf(m[4]), \" \") + \"\".concat(pf(m[5]), \")\");\n        };\n        var SVG_DEFAULTS = {\n          fontStyle: \"normal\",\n          fontWeight: \"normal\",\n          fillColor: \"#000000\"\n        };\n        var XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n        var XLINK_NS = \"http://www.w3.org/1999/xlink\";\n        var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n        var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n        var convertImgDataToPng = function () {\n          var PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n          var CHUNK_WRAPPER_SIZE = 12;\n          var crcTable = new Int32Array(256);\n          for (var i = 0; i < 256; i++) {\n            var c = i;\n            for (var h = 0; h < 8; h++) {\n              if (c & 1) {\n                c = 0xedb88320 ^ c >> 1 & 0x7fffffff;\n              } else {\n                c = c >> 1 & 0x7fffffff;\n              }\n            }\n            crcTable[i] = c;\n          }\n          function crc32(data, start, end) {\n            var crc = -1;\n            for (var _i = start; _i < end; _i++) {\n              var a = (crc ^ data[_i]) & 0xff;\n              var b = crcTable[a];\n              crc = crc >>> 8 ^ b;\n            }\n            return crc ^ -1;\n          }\n          function writePngChunk(type, body, data, offset) {\n            var p = offset;\n            var len = body.length;\n            data[p] = len >> 24 & 0xff;\n            data[p + 1] = len >> 16 & 0xff;\n            data[p + 2] = len >> 8 & 0xff;\n            data[p + 3] = len & 0xff;\n            p += 4;\n            data[p] = type.charCodeAt(0) & 0xff;\n            data[p + 1] = type.charCodeAt(1) & 0xff;\n            data[p + 2] = type.charCodeAt(2) & 0xff;\n            data[p + 3] = type.charCodeAt(3) & 0xff;\n            p += 4;\n            data.set(body, p);\n            p += body.length;\n            var crc = crc32(data, offset + 4, p);\n            data[p] = crc >> 24 & 0xff;\n            data[p + 1] = crc >> 16 & 0xff;\n            data[p + 2] = crc >> 8 & 0xff;\n            data[p + 3] = crc & 0xff;\n          }\n          function adler32(data, start, end) {\n            var a = 1;\n            var b = 0;\n            for (var _i2 = start; _i2 < end; ++_i2) {\n              a = (a + (data[_i2] & 0xff)) % 65521;\n              b = (b + a) % 65521;\n            }\n            return b << 16 | a;\n          }\n          function deflateSync(literals) {\n            if (!_is_node.isNodeJS) {\n              return deflateSyncUncompressed(literals);\n            }\n            try {\n              var input;\n              if (parseInt(process.versions.node) >= 8) {\n                input = literals;\n              } else {\n                input = Buffer.from(literals);\n              }\n              var output = require(\"zlib\").deflateSync(input, {\n                level: 9\n              });\n              return output instanceof Uint8Array ? output : new Uint8Array(output);\n            } catch (e) {\n              (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n            }\n            return deflateSyncUncompressed(literals);\n          }\n          function deflateSyncUncompressed(literals) {\n            var len = literals.length;\n            var maxBlockLength = 0xffff;\n            var deflateBlocks = Math.ceil(len / maxBlockLength);\n            var idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n            var pi = 0;\n            idat[pi++] = 0x78;\n            idat[pi++] = 0x9c;\n            var pos = 0;\n            while (len > maxBlockLength) {\n              idat[pi++] = 0x00;\n              idat[pi++] = 0xff;\n              idat[pi++] = 0xff;\n              idat[pi++] = 0x00;\n              idat[pi++] = 0x00;\n              idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n              pi += maxBlockLength;\n              pos += maxBlockLength;\n              len -= maxBlockLength;\n            }\n            idat[pi++] = 0x01;\n            idat[pi++] = len & 0xff;\n            idat[pi++] = len >> 8 & 0xff;\n            idat[pi++] = ~len & 0xffff & 0xff;\n            idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n            idat.set(literals.subarray(pos), pi);\n            pi += literals.length - pos;\n            var adler = adler32(literals, 0, literals.length);\n            idat[pi++] = adler >> 24 & 0xff;\n            idat[pi++] = adler >> 16 & 0xff;\n            idat[pi++] = adler >> 8 & 0xff;\n            idat[pi++] = adler & 0xff;\n            return idat;\n          }\n          function encode(imgData, kind, forceDataSchema, isMask) {\n            var width = imgData.width;\n            var height = imgData.height;\n            var bitDepth, colorType, lineSize;\n            var bytes = imgData.data;\n            switch (kind) {\n              case _util.ImageKind.GRAYSCALE_1BPP:\n                colorType = 0;\n                bitDepth = 1;\n                lineSize = width + 7 >> 3;\n                break;\n              case _util.ImageKind.RGB_24BPP:\n                colorType = 2;\n                bitDepth = 8;\n                lineSize = width * 3;\n                break;\n              case _util.ImageKind.RGBA_32BPP:\n                colorType = 6;\n                bitDepth = 8;\n                lineSize = width * 4;\n                break;\n              default:\n                throw new Error(\"invalid format\");\n            }\n            var literals = new Uint8Array((1 + lineSize) * height);\n            var offsetLiterals = 0,\n              offsetBytes = 0;\n            for (var y = 0; y < height; ++y) {\n              literals[offsetLiterals++] = 0;\n              literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\n              offsetBytes += lineSize;\n              offsetLiterals += lineSize;\n            }\n            if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {\n              offsetLiterals = 0;\n              for (var _y = 0; _y < height; _y++) {\n                offsetLiterals++;\n                for (var _i3 = 0; _i3 < lineSize; _i3++) {\n                  literals[offsetLiterals++] ^= 0xff;\n                }\n              }\n            }\n            var ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);\n            var idat = deflateSync(literals);\n            var pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n            var data = new Uint8Array(pngLength);\n            var offset = 0;\n            data.set(PNG_HEADER, offset);\n            offset += PNG_HEADER.length;\n            writePngChunk(\"IHDR\", ihdr, data, offset);\n            offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n            writePngChunk(\"IDATA\", idat, data, offset);\n            offset += CHUNK_WRAPPER_SIZE + idat.length;\n            writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n            return (0, _util.createObjectURL)(data, \"image/png\", forceDataSchema);\n          }\n          return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n            var kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\n            return encode(imgData, kind, forceDataSchema, isMask);\n          };\n        }();\n        var SVGExtraState = /*#__PURE__*/function () {\n          function SVGExtraState() {\n            _classCallCheck(this, SVGExtraState);\n            this.fontSizeScale = 1;\n            this.fontWeight = SVG_DEFAULTS.fontWeight;\n            this.fontSize = 0;\n            this.textMatrix = _util.IDENTITY_MATRIX;\n            this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n            this.leading = 0;\n            this.textRenderingMode = _util.TextRenderingMode.FILL;\n            this.textMatrixScale = 1;\n            this.x = 0;\n            this.y = 0;\n            this.lineX = 0;\n            this.lineY = 0;\n            this.charSpacing = 0;\n            this.wordSpacing = 0;\n            this.textHScale = 1;\n            this.textRise = 0;\n            this.fillColor = SVG_DEFAULTS.fillColor;\n            this.strokeColor = \"#000000\";\n            this.fillAlpha = 1;\n            this.strokeAlpha = 1;\n            this.lineWidth = 1;\n            this.lineJoin = \"\";\n            this.lineCap = \"\";\n            this.miterLimit = 0;\n            this.dashArray = [];\n            this.dashPhase = 0;\n            this.dependencies = [];\n            this.activeClipUrl = null;\n            this.clipGroup = null;\n            this.maskId = \"\";\n          }\n          _createClass(SVGExtraState, [{\n            key: \"clone\",\n            value: function clone() {\n              return Object.create(this);\n            }\n          }, {\n            key: \"setCurrentPoint\",\n            value: function setCurrentPoint(x, y) {\n              this.x = x;\n              this.y = y;\n            }\n          }]);\n          return SVGExtraState;\n        }();\n        var clipCount = 0;\n        var maskCount = 0;\n        var shadingCount = 0;\n        exports.SVGGraphics = SVGGraphics = /*#__PURE__*/function () {\n          function SVGGraphics(commonObjs, objs) {\n            var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            _classCallCheck(this, SVGGraphics);\n            this.svgFactory = new _display_utils.DOMSVGFactory();\n            this.current = new SVGExtraState();\n            this.transformMatrix = _util.IDENTITY_MATRIX;\n            this.transformStack = [];\n            this.extraStack = [];\n            this.commonObjs = commonObjs;\n            this.objs = objs;\n            this.pendingClip = null;\n            this.pendingEOFill = false;\n            this.embedFonts = false;\n            this.embeddedFonts = Object.create(null);\n            this.cssStyle = null;\n            this.forceDataSchema = !!forceDataSchema;\n            this._operatorIdMapping = [];\n            for (var op in _util.OPS) {\n              this._operatorIdMapping[_util.OPS[op]] = op;\n            }\n          }\n          _createClass(SVGGraphics, [{\n            key: \"save\",\n            value: function save() {\n              this.transformStack.push(this.transformMatrix);\n              var old = this.current;\n              this.extraStack.push(old);\n              this.current = old.clone();\n            }\n          }, {\n            key: \"restore\",\n            value: function restore() {\n              this.transformMatrix = this.transformStack.pop();\n              this.current = this.extraStack.pop();\n              this.pendingClip = null;\n              this.tgrp = null;\n            }\n          }, {\n            key: \"group\",\n            value: function group(items) {\n              this.save();\n              this.executeOpTree(items);\n              this.restore();\n            }\n          }, {\n            key: \"loadDependencies\",\n            value: function loadDependencies(operatorList) {\n              var _this = this;\n              var fnArray = operatorList.fnArray;\n              var argsArray = operatorList.argsArray;\n              for (var i = 0, ii = fnArray.length; i < ii; i++) {\n                if (fnArray[i] !== _util.OPS.dependency) {\n                  continue;\n                }\n                var _iterator2 = _createForOfIteratorHelper(argsArray[i]),\n                  _step2;\n                try {\n                  var _loop = function _loop() {\n                    var obj = _step2.value;\n                    var objsPool = obj.startsWith(\"g_\") ? _this.commonObjs : _this.objs;\n                    var promise = new Promise(function (resolve) {\n                      objsPool.get(obj, resolve);\n                    });\n                    _this.current.dependencies.push(promise);\n                  };\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    _loop();\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n              }\n              return Promise.all(this.current.dependencies);\n            }\n          }, {\n            key: \"transform\",\n            value: function transform(a, b, c, d, e, f) {\n              var transformMatrix = [a, b, c, d, e, f];\n              this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\n              this.tgrp = null;\n            }\n          }, {\n            key: \"getSVG\",\n            value: function getSVG(operatorList, viewport) {\n              var _this2 = this;\n              this.viewport = viewport;\n              var svgElement = this._initialize(viewport);\n              return this.loadDependencies(operatorList).then(function () {\n                _this2.transformMatrix = _util.IDENTITY_MATRIX;\n                _this2.executeOpTree(_this2.convertOpList(operatorList));\n                return svgElement;\n              });\n            }\n          }, {\n            key: \"convertOpList\",\n            value: function convertOpList(operatorList) {\n              var operatorIdMapping = this._operatorIdMapping;\n              var argsArray = operatorList.argsArray;\n              var fnArray = operatorList.fnArray;\n              var opList = [];\n              for (var i = 0, ii = fnArray.length; i < ii; i++) {\n                var fnId = fnArray[i];\n                opList.push({\n                  fnId: fnId,\n                  fn: operatorIdMapping[fnId],\n                  args: argsArray[i]\n                });\n              }\n              return opListToTree(opList);\n            }\n          }, {\n            key: \"executeOpTree\",\n            value: function executeOpTree(opTree) {\n              var _iterator3 = _createForOfIteratorHelper(opTree),\n                _step3;\n              try {\n                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  var opTreeElement = _step3.value;\n                  var fn = opTreeElement.fn;\n                  var fnId = opTreeElement.fnId;\n                  var args = opTreeElement.args;\n                  switch (fnId | 0) {\n                    case _util.OPS.beginText:\n                      this.beginText();\n                      break;\n                    case _util.OPS.dependency:\n                      break;\n                    case _util.OPS.setLeading:\n                      this.setLeading(args);\n                      break;\n                    case _util.OPS.setLeadingMoveText:\n                      this.setLeadingMoveText(args[0], args[1]);\n                      break;\n                    case _util.OPS.setFont:\n                      this.setFont(args);\n                      break;\n                    case _util.OPS.showText:\n                      this.showText(args[0]);\n                      break;\n                    case _util.OPS.showSpacedText:\n                      this.showText(args[0]);\n                      break;\n                    case _util.OPS.endText:\n                      this.endText();\n                      break;\n                    case _util.OPS.moveText:\n                      this.moveText(args[0], args[1]);\n                      break;\n                    case _util.OPS.setCharSpacing:\n                      this.setCharSpacing(args[0]);\n                      break;\n                    case _util.OPS.setWordSpacing:\n                      this.setWordSpacing(args[0]);\n                      break;\n                    case _util.OPS.setHScale:\n                      this.setHScale(args[0]);\n                      break;\n                    case _util.OPS.setTextMatrix:\n                      this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n                      break;\n                    case _util.OPS.setTextRise:\n                      this.setTextRise(args[0]);\n                      break;\n                    case _util.OPS.setTextRenderingMode:\n                      this.setTextRenderingMode(args[0]);\n                      break;\n                    case _util.OPS.setLineWidth:\n                      this.setLineWidth(args[0]);\n                      break;\n                    case _util.OPS.setLineJoin:\n                      this.setLineJoin(args[0]);\n                      break;\n                    case _util.OPS.setLineCap:\n                      this.setLineCap(args[0]);\n                      break;\n                    case _util.OPS.setMiterLimit:\n                      this.setMiterLimit(args[0]);\n                      break;\n                    case _util.OPS.setFillRGBColor:\n                      this.setFillRGBColor(args[0], args[1], args[2]);\n                      break;\n                    case _util.OPS.setStrokeRGBColor:\n                      this.setStrokeRGBColor(args[0], args[1], args[2]);\n                      break;\n                    case _util.OPS.setStrokeColorN:\n                      this.setStrokeColorN(args);\n                      break;\n                    case _util.OPS.setFillColorN:\n                      this.setFillColorN(args);\n                      break;\n                    case _util.OPS.shadingFill:\n                      this.shadingFill(args[0]);\n                      break;\n                    case _util.OPS.setDash:\n                      this.setDash(args[0], args[1]);\n                      break;\n                    case _util.OPS.setRenderingIntent:\n                      this.setRenderingIntent(args[0]);\n                      break;\n                    case _util.OPS.setFlatness:\n                      this.setFlatness(args[0]);\n                      break;\n                    case _util.OPS.setGState:\n                      this.setGState(args[0]);\n                      break;\n                    case _util.OPS.fill:\n                      this.fill();\n                      break;\n                    case _util.OPS.eoFill:\n                      this.eoFill();\n                      break;\n                    case _util.OPS.stroke:\n                      this.stroke();\n                      break;\n                    case _util.OPS.fillStroke:\n                      this.fillStroke();\n                      break;\n                    case _util.OPS.eoFillStroke:\n                      this.eoFillStroke();\n                      break;\n                    case _util.OPS.clip:\n                      this.clip(\"nonzero\");\n                      break;\n                    case _util.OPS.eoClip:\n                      this.clip(\"evenodd\");\n                      break;\n                    case _util.OPS.paintSolidColorImageMask:\n                      this.paintSolidColorImageMask();\n                      break;\n                    case _util.OPS.paintImageXObject:\n                      this.paintImageXObject(args[0]);\n                      break;\n                    case _util.OPS.paintInlineImageXObject:\n                      this.paintInlineImageXObject(args[0]);\n                      break;\n                    case _util.OPS.paintImageMaskXObject:\n                      this.paintImageMaskXObject(args[0]);\n                      break;\n                    case _util.OPS.paintFormXObjectBegin:\n                      this.paintFormXObjectBegin(args[0], args[1]);\n                      break;\n                    case _util.OPS.paintFormXObjectEnd:\n                      this.paintFormXObjectEnd();\n                      break;\n                    case _util.OPS.closePath:\n                      this.closePath();\n                      break;\n                    case _util.OPS.closeStroke:\n                      this.closeStroke();\n                      break;\n                    case _util.OPS.closeFillStroke:\n                      this.closeFillStroke();\n                      break;\n                    case _util.OPS.closeEOFillStroke:\n                      this.closeEOFillStroke();\n                      break;\n                    case _util.OPS.nextLine:\n                      this.nextLine();\n                      break;\n                    case _util.OPS.transform:\n                      this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n                      break;\n                    case _util.OPS.constructPath:\n                      this.constructPath(args[0], args[1]);\n                      break;\n                    case _util.OPS.endPath:\n                      this.endPath();\n                      break;\n                    case 92:\n                      this.group(opTreeElement.items);\n                      break;\n                    default:\n                      (0, _util.warn)(\"Unimplemented operator \".concat(fn));\n                      break;\n                  }\n                }\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n            }\n          }, {\n            key: \"setWordSpacing\",\n            value: function setWordSpacing(wordSpacing) {\n              this.current.wordSpacing = wordSpacing;\n            }\n          }, {\n            key: \"setCharSpacing\",\n            value: function setCharSpacing(charSpacing) {\n              this.current.charSpacing = charSpacing;\n            }\n          }, {\n            key: \"nextLine\",\n            value: function nextLine() {\n              this.moveText(0, this.current.leading);\n            }\n          }, {\n            key: \"setTextMatrix\",\n            value: function setTextMatrix(a, b, c, d, e, f) {\n              var current = this.current;\n              current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n              current.textMatrixScale = Math.sqrt(a * a + b * b);\n              current.x = current.lineX = 0;\n              current.y = current.lineY = 0;\n              current.xcoords = [];\n              current.ycoords = [];\n              current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n              current.tspan.setAttributeNS(null, \"font-size\", \"\".concat(pf(current.fontSize), \"px\"));\n              current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n              current.txtElement = this.svgFactory.createElement(\"svg:text\");\n              current.txtElement.appendChild(current.tspan);\n            }\n          }, {\n            key: \"beginText\",\n            value: function beginText() {\n              var current = this.current;\n              current.x = current.lineX = 0;\n              current.y = current.lineY = 0;\n              current.textMatrix = _util.IDENTITY_MATRIX;\n              current.lineMatrix = _util.IDENTITY_MATRIX;\n              current.textMatrixScale = 1;\n              current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              current.txtElement = this.svgFactory.createElement(\"svg:text\");\n              current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n              current.xcoords = [];\n              current.ycoords = [];\n            }\n          }, {\n            key: \"moveText\",\n            value: function moveText(x, y) {\n              var current = this.current;\n              current.x = current.lineX += x;\n              current.y = current.lineY += y;\n              current.xcoords = [];\n              current.ycoords = [];\n              current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n              current.tspan.setAttributeNS(null, \"font-size\", \"\".concat(pf(current.fontSize), \"px\"));\n              current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            }\n          }, {\n            key: \"showText\",\n            value: function showText(glyphs) {\n              var current = this.current;\n              var font = current.font;\n              var fontSize = current.fontSize;\n              if (fontSize === 0) {\n                return;\n              }\n              var fontSizeScale = current.fontSizeScale;\n              var charSpacing = current.charSpacing;\n              var wordSpacing = current.wordSpacing;\n              var fontDirection = current.fontDirection;\n              var textHScale = current.textHScale * fontDirection;\n              var vertical = font.vertical;\n              var spacingDir = vertical ? 1 : -1;\n              var defaultVMetrics = font.defaultVMetrics;\n              var widthAdvanceScale = fontSize * current.fontMatrix[0];\n              var x = 0;\n              var _iterator4 = _createForOfIteratorHelper(glyphs),\n                _step4;\n              try {\n                for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                  var glyph = _step4.value;\n                  if (glyph === null) {\n                    x += fontDirection * wordSpacing;\n                    continue;\n                  } else if ((0, _util.isNum)(glyph)) {\n                    x += spacingDir * glyph * fontSize / 1000;\n                    continue;\n                  }\n                  var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n                  var character = glyph.fontChar;\n                  var scaledX = void 0,\n                    scaledY = void 0;\n                  var width = glyph.width;\n                  if (vertical) {\n                    var vx = void 0;\n                    var vmetric = glyph.vmetric || defaultVMetrics;\n                    vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n                    vx = -vx * widthAdvanceScale;\n                    var vy = vmetric[2] * widthAdvanceScale;\n                    width = vmetric ? -vmetric[0] : width;\n                    scaledX = vx / fontSizeScale;\n                    scaledY = (x + vy) / fontSizeScale;\n                  } else {\n                    scaledX = x / fontSizeScale;\n                    scaledY = 0;\n                  }\n                  if (glyph.isInFont || font.missingFile) {\n                    current.xcoords.push(current.x + scaledX);\n                    if (vertical) {\n                      current.ycoords.push(-current.y + scaledY);\n                    }\n                    current.tspan.textContent += character;\n                  } else {}\n                  var charWidth = void 0;\n                  if (vertical) {\n                    charWidth = width * widthAdvanceScale - spacing * fontDirection;\n                  } else {\n                    charWidth = width * widthAdvanceScale + spacing * fontDirection;\n                  }\n                  x += charWidth;\n                }\n              } catch (err) {\n                _iterator4.e(err);\n              } finally {\n                _iterator4.f();\n              }\n              current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n              if (vertical) {\n                current.tspan.setAttributeNS(null, \"y\", current.ycoords.map(pf).join(\" \"));\n              } else {\n                current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n              }\n              if (vertical) {\n                current.y -= x;\n              } else {\n                current.x += x * textHScale;\n              }\n              current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n              current.tspan.setAttributeNS(null, \"font-size\", \"\".concat(pf(current.fontSize), \"px\"));\n              if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n                current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n              }\n              if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n                current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n              }\n              var fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n                  current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n                }\n                if (current.fillAlpha < 1) {\n                  current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n                }\n              } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) {\n                current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n              } else {\n                current.tspan.setAttributeNS(null, \"fill\", \"none\");\n              }\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                var lineWidthScale = 1 / (current.textMatrixScale || 1);\n                this._setStrokeAttributes(current.tspan, lineWidthScale);\n              }\n              var textMatrix = current.textMatrix;\n              if (current.textRise !== 0) {\n                textMatrix = textMatrix.slice();\n                textMatrix[5] += current.textRise;\n              }\n              current.txtElement.setAttributeNS(null, \"transform\", \"\".concat(pm(textMatrix), \" scale(\").concat(pf(textHScale), \", -1)\"));\n              current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n              current.txtElement.appendChild(current.tspan);\n              current.txtgrp.appendChild(current.txtElement);\n              this._ensureTransformGroup().appendChild(current.txtElement);\n            }\n          }, {\n            key: \"setLeadingMoveText\",\n            value: function setLeadingMoveText(x, y) {\n              this.setLeading(-y);\n              this.moveText(x, y);\n            }\n          }, {\n            key: \"addFontStyle\",\n            value: function addFontStyle(fontObj) {\n              if (!fontObj.data) {\n                throw new Error(\"addFontStyle: No font data available, \" + 'ensure that the \"fontExtraProperties\" API parameter is set.');\n              }\n              if (!this.cssStyle) {\n                this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n                this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n                this.defs.appendChild(this.cssStyle);\n              }\n              var url = (0, _util.createObjectURL)(fontObj.data, fontObj.mimetype, this.forceDataSchema);\n              this.cssStyle.textContent += \"@font-face { font-family: \\\"\".concat(fontObj.loadedName, \"\\\";\") + \" src: url(\".concat(url, \"); }\\n\");\n            }\n          }, {\n            key: \"setFont\",\n            value: function setFont(details) {\n              var current = this.current;\n              var fontObj = this.commonObjs.get(details[0]);\n              var size = details[1];\n              current.font = fontObj;\n              if (this.embedFonts && !fontObj.missingFile && !this.embeddedFonts[fontObj.loadedName]) {\n                this.addFontStyle(fontObj);\n                this.embeddedFonts[fontObj.loadedName] = fontObj;\n              }\n              current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : _util.FONT_IDENTITY_MATRIX;\n              var bold = \"normal\";\n              if (fontObj.black) {\n                bold = \"900\";\n              } else if (fontObj.bold) {\n                bold = \"bold\";\n              }\n              var italic = fontObj.italic ? \"italic\" : \"normal\";\n              if (size < 0) {\n                size = -size;\n                current.fontDirection = -1;\n              } else {\n                current.fontDirection = 1;\n              }\n              current.fontSize = size;\n              current.fontFamily = fontObj.loadedName;\n              current.fontWeight = bold;\n              current.fontStyle = italic;\n              current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n              current.xcoords = [];\n              current.ycoords = [];\n            }\n          }, {\n            key: \"endText\",\n            value: function endText() {\n              var current = this.current;\n              if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && current.txtElement && current.txtElement.hasChildNodes()) {\n                current.element = current.txtElement;\n                this.clip(\"nonzero\");\n                this.endPath();\n              }\n            }\n          }, {\n            key: \"setLineWidth\",\n            value: function setLineWidth(width) {\n              if (width > 0) {\n                this.current.lineWidth = width;\n              }\n            }\n          }, {\n            key: \"setLineCap\",\n            value: function setLineCap(style) {\n              this.current.lineCap = LINE_CAP_STYLES[style];\n            }\n          }, {\n            key: \"setLineJoin\",\n            value: function setLineJoin(style) {\n              this.current.lineJoin = LINE_JOIN_STYLES[style];\n            }\n          }, {\n            key: \"setMiterLimit\",\n            value: function setMiterLimit(limit) {\n              this.current.miterLimit = limit;\n            }\n          }, {\n            key: \"setStrokeAlpha\",\n            value: function setStrokeAlpha(strokeAlpha) {\n              this.current.strokeAlpha = strokeAlpha;\n            }\n          }, {\n            key: \"setStrokeRGBColor\",\n            value: function setStrokeRGBColor(r, g, b) {\n              this.current.strokeColor = _util.Util.makeCssRgb(r, g, b);\n            }\n          }, {\n            key: \"setFillAlpha\",\n            value: function setFillAlpha(fillAlpha) {\n              this.current.fillAlpha = fillAlpha;\n            }\n          }, {\n            key: \"setFillRGBColor\",\n            value: function setFillRGBColor(r, g, b) {\n              this.current.fillColor = _util.Util.makeCssRgb(r, g, b);\n              this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              this.current.xcoords = [];\n              this.current.ycoords = [];\n            }\n          }, {\n            key: \"setStrokeColorN\",\n            value: function setStrokeColorN(args) {\n              this.current.strokeColor = this._makeColorN_Pattern(args);\n            }\n          }, {\n            key: \"setFillColorN\",\n            value: function setFillColorN(args) {\n              this.current.fillColor = this._makeColorN_Pattern(args);\n            }\n          }, {\n            key: \"shadingFill\",\n            value: function shadingFill(args) {\n              var width = this.viewport.width;\n              var height = this.viewport.height;\n              var inv = _util.Util.inverseTransform(this.transformMatrix);\n              var bl = _util.Util.applyTransform([0, 0], inv);\n              var br = _util.Util.applyTransform([0, height], inv);\n              var ul = _util.Util.applyTransform([width, 0], inv);\n              var ur = _util.Util.applyTransform([width, height], inv);\n              var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n              var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n              var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n              var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n              var rect = this.svgFactory.createElement(\"svg:rect\");\n              rect.setAttributeNS(null, \"x\", x0);\n              rect.setAttributeNS(null, \"y\", y0);\n              rect.setAttributeNS(null, \"width\", x1 - x0);\n              rect.setAttributeNS(null, \"height\", y1 - y0);\n              rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n              if (this.current.fillAlpha < 1) {\n                rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n              }\n              this._ensureTransformGroup().appendChild(rect);\n            }\n          }, {\n            key: \"_makeColorN_Pattern\",\n            value: function _makeColorN_Pattern(args) {\n              if (args[0] === \"TilingPattern\") {\n                return this._makeTilingPattern(args);\n              }\n              return this._makeShadingPattern(args);\n            }\n          }, {\n            key: \"_makeTilingPattern\",\n            value: function _makeTilingPattern(args) {\n              var color = args[1];\n              var operatorList = args[2];\n              var matrix = args[3] || _util.IDENTITY_MATRIX;\n              var _args$ = _slicedToArray(args[4], 4),\n                x0 = _args$[0],\n                y0 = _args$[1],\n                x1 = _args$[2],\n                y1 = _args$[3];\n              var xstep = args[5];\n              var ystep = args[6];\n              var paintType = args[7];\n              var tilingId = \"shading\".concat(shadingCount++);\n              var _Util$applyTransform = _util.Util.applyTransform([x0, y0], matrix),\n                _Util$applyTransform2 = _slicedToArray(_Util$applyTransform, 2),\n                tx0 = _Util$applyTransform2[0],\n                ty0 = _Util$applyTransform2[1];\n              var _Util$applyTransform3 = _util.Util.applyTransform([x1, y1], matrix),\n                _Util$applyTransform4 = _slicedToArray(_Util$applyTransform3, 2),\n                tx1 = _Util$applyTransform4[0],\n                ty1 = _Util$applyTransform4[1];\n              var _Util$singularValueDe = _util.Util.singularValueDecompose2dScale(matrix),\n                _Util$singularValueDe2 = _slicedToArray(_Util$singularValueDe, 2),\n                xscale = _Util$singularValueDe2[0],\n                yscale = _Util$singularValueDe2[1];\n              var txstep = xstep * xscale;\n              var tystep = ystep * yscale;\n              var tiling = this.svgFactory.createElement(\"svg:pattern\");\n              tiling.setAttributeNS(null, \"id\", tilingId);\n              tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n              tiling.setAttributeNS(null, \"width\", txstep);\n              tiling.setAttributeNS(null, \"height\", tystep);\n              tiling.setAttributeNS(null, \"x\", \"\".concat(tx0));\n              tiling.setAttributeNS(null, \"y\", \"\".concat(ty0));\n              var svg = this.svg;\n              var transformMatrix = this.transformMatrix;\n              var fillColor = this.current.fillColor;\n              var strokeColor = this.current.strokeColor;\n              var bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n              this.svg = bbox;\n              this.transformMatrix = matrix;\n              if (paintType === 2) {\n                var cssColor = _util.Util.makeCssRgb.apply(_util.Util, _toConsumableArray(color));\n                this.current.fillColor = cssColor;\n                this.current.strokeColor = cssColor;\n              }\n              this.executeOpTree(this.convertOpList(operatorList));\n              this.svg = svg;\n              this.transformMatrix = transformMatrix;\n              this.current.fillColor = fillColor;\n              this.current.strokeColor = strokeColor;\n              tiling.appendChild(bbox.childNodes[0]);\n              this.defs.appendChild(tiling);\n              return \"url(#\".concat(tilingId, \")\");\n            }\n          }, {\n            key: \"_makeShadingPattern\",\n            value: function _makeShadingPattern(args) {\n              switch (args[0]) {\n                case \"RadialAxial\":\n                  var shadingId = \"shading\".concat(shadingCount++);\n                  var colorStops = args[3];\n                  var gradient;\n                  switch (args[1]) {\n                    case \"axial\":\n                      var point0 = args[4];\n                      var point1 = args[5];\n                      gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n                      gradient.setAttributeNS(null, \"id\", shadingId);\n                      gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                      gradient.setAttributeNS(null, \"x1\", point0[0]);\n                      gradient.setAttributeNS(null, \"y1\", point0[1]);\n                      gradient.setAttributeNS(null, \"x2\", point1[0]);\n                      gradient.setAttributeNS(null, \"y2\", point1[1]);\n                      break;\n                    case \"radial\":\n                      var focalPoint = args[4];\n                      var circlePoint = args[5];\n                      var focalRadius = args[6];\n                      var circleRadius = args[7];\n                      gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n                      gradient.setAttributeNS(null, \"id\", shadingId);\n                      gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                      gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n                      gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n                      gradient.setAttributeNS(null, \"r\", circleRadius);\n                      gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n                      gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n                      gradient.setAttributeNS(null, \"fr\", focalRadius);\n                      break;\n                    default:\n                      throw new Error(\"Unknown RadialAxial type: \".concat(args[1]));\n                  }\n                  var _iterator5 = _createForOfIteratorHelper(colorStops),\n                    _step5;\n                  try {\n                    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                      var colorStop = _step5.value;\n                      var stop = this.svgFactory.createElement(\"svg:stop\");\n                      stop.setAttributeNS(null, \"offset\", colorStop[0]);\n                      stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n                      gradient.appendChild(stop);\n                    }\n                  } catch (err) {\n                    _iterator5.e(err);\n                  } finally {\n                    _iterator5.f();\n                  }\n                  this.defs.appendChild(gradient);\n                  return \"url(#\".concat(shadingId, \")\");\n                case \"Mesh\":\n                  (0, _util.warn)(\"Unimplemented pattern Mesh\");\n                  return null;\n                case \"Dummy\":\n                  return \"hotpink\";\n                default:\n                  throw new Error(\"Unknown IR type: \".concat(args[0]));\n              }\n            }\n          }, {\n            key: \"setDash\",\n            value: function setDash(dashArray, dashPhase) {\n              this.current.dashArray = dashArray;\n              this.current.dashPhase = dashPhase;\n            }\n          }, {\n            key: \"constructPath\",\n            value: function constructPath(ops, args) {\n              var current = this.current;\n              var x = current.x,\n                y = current.y;\n              var d = [];\n              var j = 0;\n              var _iterator6 = _createForOfIteratorHelper(ops),\n                _step6;\n              try {\n                for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                  var op = _step6.value;\n                  switch (op | 0) {\n                    case _util.OPS.rectangle:\n                      x = args[j++];\n                      y = args[j++];\n                      var width = args[j++];\n                      var height = args[j++];\n                      var xw = x + width;\n                      var yh = y + height;\n                      d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\n                      break;\n                    case _util.OPS.moveTo:\n                      x = args[j++];\n                      y = args[j++];\n                      d.push(\"M\", pf(x), pf(y));\n                      break;\n                    case _util.OPS.lineTo:\n                      x = args[j++];\n                      y = args[j++];\n                      d.push(\"L\", pf(x), pf(y));\n                      break;\n                    case _util.OPS.curveTo:\n                      x = args[j + 4];\n                      y = args[j + 5];\n                      d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\n                      j += 6;\n                      break;\n                    case _util.OPS.curveTo2:\n                      d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\n                      x = args[j + 2];\n                      y = args[j + 3];\n                      j += 4;\n                      break;\n                    case _util.OPS.curveTo3:\n                      x = args[j + 2];\n                      y = args[j + 3];\n                      d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n                      j += 4;\n                      break;\n                    case _util.OPS.closePath:\n                      d.push(\"Z\");\n                      break;\n                  }\n                }\n              } catch (err) {\n                _iterator6.e(err);\n              } finally {\n                _iterator6.f();\n              }\n              d = d.join(\" \");\n              if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) {\n                d = current.path.getAttributeNS(null, \"d\") + d;\n              } else {\n                current.path = this.svgFactory.createElement(\"svg:path\");\n                this._ensureTransformGroup().appendChild(current.path);\n              }\n              current.path.setAttributeNS(null, \"d\", d);\n              current.path.setAttributeNS(null, \"fill\", \"none\");\n              current.element = current.path;\n              current.setCurrentPoint(x, y);\n            }\n          }, {\n            key: \"endPath\",\n            value: function endPath() {\n              var current = this.current;\n              current.path = null;\n              if (!this.pendingClip) {\n                return;\n              }\n              if (!current.element) {\n                this.pendingClip = null;\n                return;\n              }\n              var clipId = \"clippath\".concat(clipCount++);\n              var clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n              clipPath.setAttributeNS(null, \"id\", clipId);\n              clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n              var clipElement = current.element.cloneNode(true);\n              if (this.pendingClip === \"evenodd\") {\n                clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n              } else {\n                clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n              }\n              this.pendingClip = null;\n              clipPath.appendChild(clipElement);\n              this.defs.appendChild(clipPath);\n              if (current.activeClipUrl) {\n                current.clipGroup = null;\n                this.extraStack.forEach(function (prev) {\n                  prev.clipGroup = null;\n                });\n                clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n              }\n              current.activeClipUrl = \"url(#\".concat(clipId, \")\");\n              this.tgrp = null;\n            }\n          }, {\n            key: \"clip\",\n            value: function clip(type) {\n              this.pendingClip = type;\n            }\n          }, {\n            key: \"closePath\",\n            value: function closePath() {\n              var current = this.current;\n              if (current.path) {\n                var d = \"\".concat(current.path.getAttributeNS(null, \"d\"), \"Z\");\n                current.path.setAttributeNS(null, \"d\", d);\n              }\n            }\n          }, {\n            key: \"setLeading\",\n            value: function setLeading(leading) {\n              this.current.leading = -leading;\n            }\n          }, {\n            key: \"setTextRise\",\n            value: function setTextRise(textRise) {\n              this.current.textRise = textRise;\n            }\n          }, {\n            key: \"setTextRenderingMode\",\n            value: function setTextRenderingMode(textRenderingMode) {\n              this.current.textRenderingMode = textRenderingMode;\n            }\n          }, {\n            key: \"setHScale\",\n            value: function setHScale(scale) {\n              this.current.textHScale = scale / 100;\n            }\n          }, {\n            key: \"setRenderingIntent\",\n            value: function setRenderingIntent(intent) {}\n          }, {\n            key: \"setFlatness\",\n            value: function setFlatness(flatness) {}\n          }, {\n            key: \"setGState\",\n            value: function setGState(states) {\n              var _iterator7 = _createForOfIteratorHelper(states),\n                _step7;\n              try {\n                for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                  var _step7$value = _slicedToArray(_step7.value, 2),\n                    key = _step7$value[0],\n                    value = _step7$value[1];\n                  switch (key) {\n                    case \"LW\":\n                      this.setLineWidth(value);\n                      break;\n                    case \"LC\":\n                      this.setLineCap(value);\n                      break;\n                    case \"LJ\":\n                      this.setLineJoin(value);\n                      break;\n                    case \"ML\":\n                      this.setMiterLimit(value);\n                      break;\n                    case \"D\":\n                      this.setDash(value[0], value[1]);\n                      break;\n                    case \"RI\":\n                      this.setRenderingIntent(value);\n                      break;\n                    case \"FL\":\n                      this.setFlatness(value);\n                      break;\n                    case \"Font\":\n                      this.setFont(value);\n                      break;\n                    case \"CA\":\n                      this.setStrokeAlpha(value);\n                      break;\n                    case \"ca\":\n                      this.setFillAlpha(value);\n                      break;\n                    default:\n                      (0, _util.warn)(\"Unimplemented graphic state operator \".concat(key));\n                      break;\n                  }\n                }\n              } catch (err) {\n                _iterator7.e(err);\n              } finally {\n                _iterator7.f();\n              }\n            }\n          }, {\n            key: \"fill\",\n            value: function fill() {\n              var current = this.current;\n              if (current.element) {\n                current.element.setAttributeNS(null, \"fill\", current.fillColor);\n                current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n                this.endPath();\n              }\n            }\n          }, {\n            key: \"stroke\",\n            value: function stroke() {\n              var current = this.current;\n              if (current.element) {\n                this._setStrokeAttributes(current.element);\n                current.element.setAttributeNS(null, \"fill\", \"none\");\n                this.endPath();\n              }\n            }\n          }, {\n            key: \"_setStrokeAttributes\",\n            value: function _setStrokeAttributes(element) {\n              var lineWidthScale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n              var current = this.current;\n              var dashArray = current.dashArray;\n              if (lineWidthScale !== 1 && dashArray.length > 0) {\n                dashArray = dashArray.map(function (value) {\n                  return lineWidthScale * value;\n                });\n              }\n              element.setAttributeNS(null, \"stroke\", current.strokeColor);\n              element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n              element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n              element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n              element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n              element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\n              element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\n              element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\n            }\n          }, {\n            key: \"eoFill\",\n            value: function eoFill() {\n              if (this.current.element) {\n                this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n              }\n              this.fill();\n            }\n          }, {\n            key: \"fillStroke\",\n            value: function fillStroke() {\n              this.stroke();\n              this.fill();\n            }\n          }, {\n            key: \"eoFillStroke\",\n            value: function eoFillStroke() {\n              if (this.current.element) {\n                this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n              }\n              this.fillStroke();\n            }\n          }, {\n            key: \"closeStroke\",\n            value: function closeStroke() {\n              this.closePath();\n              this.stroke();\n            }\n          }, {\n            key: \"closeFillStroke\",\n            value: function closeFillStroke() {\n              this.closePath();\n              this.fillStroke();\n            }\n          }, {\n            key: \"closeEOFillStroke\",\n            value: function closeEOFillStroke() {\n              this.closePath();\n              this.eoFillStroke();\n            }\n          }, {\n            key: \"paintSolidColorImageMask\",\n            value: function paintSolidColorImageMask() {\n              var rect = this.svgFactory.createElement(\"svg:rect\");\n              rect.setAttributeNS(null, \"x\", \"0\");\n              rect.setAttributeNS(null, \"y\", \"0\");\n              rect.setAttributeNS(null, \"width\", \"1px\");\n              rect.setAttributeNS(null, \"height\", \"1px\");\n              rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n              this._ensureTransformGroup().appendChild(rect);\n            }\n          }, {\n            key: \"paintImageXObject\",\n            value: function paintImageXObject(objId) {\n              var imgData = this.objs.get(objId);\n              if (!imgData) {\n                (0, _util.warn)(\"Dependent image with object ID \".concat(objId, \" is not ready yet\"));\n                return;\n              }\n              this.paintInlineImageXObject(imgData);\n            }\n          }, {\n            key: \"paintInlineImageXObject\",\n            value: function paintInlineImageXObject(imgData, mask) {\n              var width = imgData.width;\n              var height = imgData.height;\n              var imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n              var cliprect = this.svgFactory.createElement(\"svg:rect\");\n              cliprect.setAttributeNS(null, \"x\", \"0\");\n              cliprect.setAttributeNS(null, \"y\", \"0\");\n              cliprect.setAttributeNS(null, \"width\", pf(width));\n              cliprect.setAttributeNS(null, \"height\", pf(height));\n              this.current.element = cliprect;\n              this.clip(\"nonzero\");\n              var imgEl = this.svgFactory.createElement(\"svg:image\");\n              imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n              imgEl.setAttributeNS(null, \"x\", \"0\");\n              imgEl.setAttributeNS(null, \"y\", pf(-height));\n              imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n              imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n              imgEl.setAttributeNS(null, \"transform\", \"scale(\".concat(pf(1 / width), \" \").concat(pf(-1 / height), \")\"));\n              if (mask) {\n                mask.appendChild(imgEl);\n              } else {\n                this._ensureTransformGroup().appendChild(imgEl);\n              }\n            }\n          }, {\n            key: \"paintImageMaskXObject\",\n            value: function paintImageMaskXObject(imgData) {\n              var current = this.current;\n              var width = imgData.width;\n              var height = imgData.height;\n              var fillColor = current.fillColor;\n              current.maskId = \"mask\".concat(maskCount++);\n              var mask = this.svgFactory.createElement(\"svg:mask\");\n              mask.setAttributeNS(null, \"id\", current.maskId);\n              var rect = this.svgFactory.createElement(\"svg:rect\");\n              rect.setAttributeNS(null, \"x\", \"0\");\n              rect.setAttributeNS(null, \"y\", \"0\");\n              rect.setAttributeNS(null, \"width\", pf(width));\n              rect.setAttributeNS(null, \"height\", pf(height));\n              rect.setAttributeNS(null, \"fill\", fillColor);\n              rect.setAttributeNS(null, \"mask\", \"url(#\".concat(current.maskId, \")\"));\n              this.defs.appendChild(mask);\n              this._ensureTransformGroup().appendChild(rect);\n              this.paintInlineImageXObject(imgData, mask);\n            }\n          }, {\n            key: \"paintFormXObjectBegin\",\n            value: function paintFormXObjectBegin(matrix, bbox) {\n              if (Array.isArray(matrix) && matrix.length === 6) {\n                this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n              }\n              if (bbox) {\n                var width = bbox[2] - bbox[0];\n                var height = bbox[3] - bbox[1];\n                var cliprect = this.svgFactory.createElement(\"svg:rect\");\n                cliprect.setAttributeNS(null, \"x\", bbox[0]);\n                cliprect.setAttributeNS(null, \"y\", bbox[1]);\n                cliprect.setAttributeNS(null, \"width\", pf(width));\n                cliprect.setAttributeNS(null, \"height\", pf(height));\n                this.current.element = cliprect;\n                this.clip(\"nonzero\");\n                this.endPath();\n              }\n            }\n          }, {\n            key: \"paintFormXObjectEnd\",\n            value: function paintFormXObjectEnd() {}\n          }, {\n            key: \"_initialize\",\n            value: function _initialize(viewport) {\n              var svg = this.svgFactory.create(viewport.width, viewport.height);\n              var definitions = this.svgFactory.createElement(\"svg:defs\");\n              svg.appendChild(definitions);\n              this.defs = definitions;\n              var rootGroup = this.svgFactory.createElement(\"svg:g\");\n              rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n              svg.appendChild(rootGroup);\n              this.svg = rootGroup;\n              return svg;\n            }\n          }, {\n            key: \"_ensureClipGroup\",\n            value: function _ensureClipGroup() {\n              if (!this.current.clipGroup) {\n                var clipGroup = this.svgFactory.createElement(\"svg:g\");\n                clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n                this.svg.appendChild(clipGroup);\n                this.current.clipGroup = clipGroup;\n              }\n              return this.current.clipGroup;\n            }\n          }, {\n            key: \"_ensureTransformGroup\",\n            value: function _ensureTransformGroup() {\n              if (!this.tgrp) {\n                this.tgrp = this.svgFactory.createElement(\"svg:g\");\n                this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n                if (this.current.activeClipUrl) {\n                  this._ensureClipGroup().appendChild(this.tgrp);\n                } else {\n                  this.svg.appendChild(this.tgrp);\n                }\n              }\n              return this.tgrp;\n            }\n          }]);\n          return SVGGraphics;\n        }();\n      }\n\n      /***/\n    }, /* 212 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFNodeStream = void 0;\n      var _regenerator = _interopRequireDefault(__w_pdfjs_require__(2));\n      var _util = __w_pdfjs_require__(5);\n      var _network_utils = __w_pdfjs_require__(213);\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          \"default\": obj\n        };\n      }\n      function _typeof(obj) {\n        \"@babel/helpers - typeof\";\n\n        if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n          _typeof = function _typeof(obj) {\n            return typeof obj;\n          };\n        } else {\n          _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n          };\n        }\n        return _typeof(obj);\n      }\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function\");\n        }\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) _setPrototypeOf(subClass, superClass);\n      }\n      function _setPrototypeOf(o, p) {\n        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n          o.__proto__ = p;\n          return o;\n        };\n        return _setPrototypeOf(o, p);\n      }\n      function _createSuper(Derived) {\n        var hasNativeReflectConstruct = _isNativeReflectConstruct();\n        return function _createSuperInternal() {\n          var Super = _getPrototypeOf(Derived),\n            result;\n          if (hasNativeReflectConstruct) {\n            var NewTarget = _getPrototypeOf(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n          } else {\n            result = Super.apply(this, arguments);\n          }\n          return _possibleConstructorReturn(this, result);\n        };\n      }\n      function _possibleConstructorReturn(self, call) {\n        if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n          return call;\n        }\n        return _assertThisInitialized(self);\n      }\n      function _assertThisInitialized(self) {\n        if (self === void 0) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n        return self;\n      }\n      function _isNativeReflectConstruct() {\n        if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n        if (Reflect.construct.sham) return false;\n        if (typeof Proxy === \"function\") return true;\n        try {\n          Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n          return true;\n        } catch (e) {\n          return false;\n        }\n      }\n      function _getPrototypeOf(o) {\n        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n          return o.__proto__ || Object.getPrototypeOf(o);\n        };\n        return _getPrototypeOf(o);\n      }\n      function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n        if (info.done) {\n          resolve(value);\n        } else {\n          Promise.resolve(value).then(_next, _throw);\n        }\n      }\n      function _asyncToGenerator(fn) {\n        return function () {\n          var self = this,\n            args = arguments;\n          return new Promise(function (resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n          });\n        };\n      }\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n      function _defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n      function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        return Constructor;\n      }\n      ;\n      var fs = require(\"fs\");\n      var http = require(\"http\");\n      var https = require(\"https\");\n      var url = require(\"url\");\n      var fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n      function parseUrl(sourceUrl) {\n        var parsedUrl = url.parse(sourceUrl);\n        if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n          return parsedUrl;\n        }\n        if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n          return url.parse(\"file:///\".concat(sourceUrl));\n        }\n        if (!parsedUrl.host) {\n          parsedUrl.protocol = \"file:\";\n        }\n        return parsedUrl;\n      }\n      var PDFNodeStream = /*#__PURE__*/function () {\n        function PDFNodeStream(source) {\n          _classCallCheck(this, PDFNodeStream);\n          this.source = source;\n          this.url = parseUrl(source.url);\n          this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n          this.isFsUrl = this.url.protocol === \"file:\";\n          this.httpHeaders = this.isHttp && source.httpHeaders || {};\n          this._fullRequestReader = null;\n          this._rangeRequestReaders = [];\n        }\n        _createClass(PDFNodeStream, [{\n          key: \"getFullReader\",\n          value: function getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFNodeStream.getFullReader can only be called once.\");\n            this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\n            return this._fullRequestReader;\n          }\n        }, {\n          key: \"getRangeReader\",\n          value: function getRangeReader(start, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n            var rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\n            this._rangeRequestReaders.push(rangeReader);\n            return rangeReader;\n          }\n        }, {\n          key: \"cancelAllRequests\",\n          value: function cancelAllRequests(reason) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.cancel(reason);\n            }\n            var readers = this._rangeRequestReaders.slice(0);\n            readers.forEach(function (reader) {\n              reader.cancel(reason);\n            });\n          }\n        }, {\n          key: \"_progressiveDataLength\",\n          get: function get() {\n            return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n          }\n        }]);\n        return PDFNodeStream;\n      }();\n      exports.PDFNodeStream = PDFNodeStream;\n      var BaseFullReader = /*#__PURE__*/function () {\n        function BaseFullReader(stream) {\n          _classCallCheck(this, BaseFullReader);\n          this._url = stream.url;\n          this._done = false;\n          this._storedError = null;\n          this.onProgress = null;\n          var source = stream.source;\n          this._contentLength = source.length;\n          this._loaded = 0;\n          this._filename = null;\n          this._disableRange = source.disableRange || false;\n          this._rangeChunkSize = source.rangeChunkSize;\n          if (!this._rangeChunkSize && !this._disableRange) {\n            this._disableRange = true;\n          }\n          this._isStreamingSupported = !source.disableStream;\n          this._isRangeSupported = !source.disableRange;\n          this._readableStream = null;\n          this._readCapability = (0, _util.createPromiseCapability)();\n          this._headersCapability = (0, _util.createPromiseCapability)();\n        }\n        _createClass(BaseFullReader, [{\n          key: \"read\",\n          value: function () {\n            var _read = _asyncToGenerator( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n              var chunk, buffer;\n              return _regenerator[\"default\"].wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return this._readCapability.promise;\n                    case 2:\n                      if (!this._done) {\n                        _context.next = 4;\n                        break;\n                      }\n                      return _context.abrupt(\"return\", {\n                        value: undefined,\n                        done: true\n                      });\n                    case 4:\n                      if (!this._storedError) {\n                        _context.next = 6;\n                        break;\n                      }\n                      throw this._storedError;\n                    case 6:\n                      chunk = this._readableStream.read();\n                      if (!(chunk === null)) {\n                        _context.next = 10;\n                        break;\n                      }\n                      this._readCapability = (0, _util.createPromiseCapability)();\n                      return _context.abrupt(\"return\", this.read());\n                    case 10:\n                      this._loaded += chunk.length;\n                      if (this.onProgress) {\n                        this.onProgress({\n                          loaded: this._loaded,\n                          total: this._contentLength\n                        });\n                      }\n                      buffer = new Uint8Array(chunk).buffer;\n                      return _context.abrupt(\"return\", {\n                        value: buffer,\n                        done: false\n                      });\n                    case 14:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee, this);\n            }));\n            function read() {\n              return _read.apply(this, arguments);\n            }\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            if (!this._readableStream) {\n              this._error(reason);\n              return;\n            }\n            this._readableStream.destroy(reason);\n          }\n        }, {\n          key: \"_error\",\n          value: function _error(reason) {\n            this._storedError = reason;\n            this._readCapability.resolve();\n          }\n        }, {\n          key: \"_setReadableStream\",\n          value: function _setReadableStream(readableStream) {\n            var _this = this;\n            this._readableStream = readableStream;\n            readableStream.on(\"readable\", function () {\n              _this._readCapability.resolve();\n            });\n            readableStream.on(\"end\", function () {\n              readableStream.destroy();\n              _this._done = true;\n              _this._readCapability.resolve();\n            });\n            readableStream.on(\"error\", function (reason) {\n              _this._error(reason);\n            });\n            if (!this._isStreamingSupported && this._isRangeSupported) {\n              this._error(new _util.AbortException(\"streaming is disabled\"));\n            }\n            if (this._storedError) {\n              this._readableStream.destroy(this._storedError);\n            }\n          }\n        }, {\n          key: \"headersReady\",\n          get: function get() {\n            return this._headersCapability.promise;\n          }\n        }, {\n          key: \"filename\",\n          get: function get() {\n            return this._filename;\n          }\n        }, {\n          key: \"contentLength\",\n          get: function get() {\n            return this._contentLength;\n          }\n        }, {\n          key: \"isRangeSupported\",\n          get: function get() {\n            return this._isRangeSupported;\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return this._isStreamingSupported;\n          }\n        }]);\n        return BaseFullReader;\n      }();\n      var BaseRangeReader = /*#__PURE__*/function () {\n        function BaseRangeReader(stream) {\n          _classCallCheck(this, BaseRangeReader);\n          this._url = stream.url;\n          this._done = false;\n          this._storedError = null;\n          this.onProgress = null;\n          this._loaded = 0;\n          this._readableStream = null;\n          this._readCapability = (0, _util.createPromiseCapability)();\n          var source = stream.source;\n          this._isStreamingSupported = !source.disableStream;\n        }\n        _createClass(BaseRangeReader, [{\n          key: \"read\",\n          value: function () {\n            var _read2 = _asyncToGenerator( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n              var chunk, buffer;\n              return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _context2.next = 2;\n                      return this._readCapability.promise;\n                    case 2:\n                      if (!this._done) {\n                        _context2.next = 4;\n                        break;\n                      }\n                      return _context2.abrupt(\"return\", {\n                        value: undefined,\n                        done: true\n                      });\n                    case 4:\n                      if (!this._storedError) {\n                        _context2.next = 6;\n                        break;\n                      }\n                      throw this._storedError;\n                    case 6:\n                      chunk = this._readableStream.read();\n                      if (!(chunk === null)) {\n                        _context2.next = 10;\n                        break;\n                      }\n                      this._readCapability = (0, _util.createPromiseCapability)();\n                      return _context2.abrupt(\"return\", this.read());\n                    case 10:\n                      this._loaded += chunk.length;\n                      if (this.onProgress) {\n                        this.onProgress({\n                          loaded: this._loaded\n                        });\n                      }\n                      buffer = new Uint8Array(chunk).buffer;\n                      return _context2.abrupt(\"return\", {\n                        value: buffer,\n                        done: false\n                      });\n                    case 14:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2, this);\n            }));\n            function read() {\n              return _read2.apply(this, arguments);\n            }\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            if (!this._readableStream) {\n              this._error(reason);\n              return;\n            }\n            this._readableStream.destroy(reason);\n          }\n        }, {\n          key: \"_error\",\n          value: function _error(reason) {\n            this._storedError = reason;\n            this._readCapability.resolve();\n          }\n        }, {\n          key: \"_setReadableStream\",\n          value: function _setReadableStream(readableStream) {\n            var _this2 = this;\n            this._readableStream = readableStream;\n            readableStream.on(\"readable\", function () {\n              _this2._readCapability.resolve();\n            });\n            readableStream.on(\"end\", function () {\n              readableStream.destroy();\n              _this2._done = true;\n              _this2._readCapability.resolve();\n            });\n            readableStream.on(\"error\", function (reason) {\n              _this2._error(reason);\n            });\n            if (this._storedError) {\n              this._readableStream.destroy(this._storedError);\n            }\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return this._isStreamingSupported;\n          }\n        }]);\n        return BaseRangeReader;\n      }();\n      function createRequestOptions(parsedUrl, headers) {\n        return {\n          protocol: parsedUrl.protocol,\n          auth: parsedUrl.auth,\n          host: parsedUrl.hostname,\n          port: parsedUrl.port,\n          path: parsedUrl.path,\n          method: \"GET\",\n          headers: headers\n        };\n      }\n      var PDFNodeStreamFullReader = /*#__PURE__*/function (_BaseFullReader) {\n        _inherits(PDFNodeStreamFullReader, _BaseFullReader);\n        var _super = _createSuper(PDFNodeStreamFullReader);\n        function PDFNodeStreamFullReader(stream) {\n          var _this3;\n          _classCallCheck(this, PDFNodeStreamFullReader);\n          _this3 = _super.call(this, stream);\n          var handleResponse = function handleResponse(response) {\n            if (response.statusCode === 404) {\n              var error = new _util.MissingPDFException(\"Missing PDF \\\"\".concat(_this3._url, \"\\\".\"));\n              _this3._storedError = error;\n              _this3._headersCapability.reject(error);\n              return;\n            }\n            _this3._headersCapability.resolve();\n            _this3._setReadableStream(response);\n            var getResponseHeader = function getResponseHeader(name) {\n              return _this3._readableStream.headers[name.toLowerCase()];\n            };\n            var _validateRangeRequest = (0, _network_utils.validateRangeRequestCapabilities)({\n                getResponseHeader: getResponseHeader,\n                isHttp: stream.isHttp,\n                rangeChunkSize: _this3._rangeChunkSize,\n                disableRange: _this3._disableRange\n              }),\n              allowRangeRequests = _validateRangeRequest.allowRangeRequests,\n              suggestedLength = _validateRangeRequest.suggestedLength;\n            _this3._isRangeSupported = allowRangeRequests;\n            _this3._contentLength = suggestedLength || _this3._contentLength;\n            _this3._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n          };\n          _this3._request = null;\n          if (_this3._url.protocol === \"http:\") {\n            _this3._request = http.request(createRequestOptions(_this3._url, stream.httpHeaders), handleResponse);\n          } else {\n            _this3._request = https.request(createRequestOptions(_this3._url, stream.httpHeaders), handleResponse);\n          }\n          _this3._request.on(\"error\", function (reason) {\n            _this3._storedError = reason;\n            _this3._headersCapability.reject(reason);\n          });\n          _this3._request.end();\n          return _this3;\n        }\n        return PDFNodeStreamFullReader;\n      }(BaseFullReader);\n      var PDFNodeStreamRangeReader = /*#__PURE__*/function (_BaseRangeReader) {\n        _inherits(PDFNodeStreamRangeReader, _BaseRangeReader);\n        var _super2 = _createSuper(PDFNodeStreamRangeReader);\n        function PDFNodeStreamRangeReader(stream, start, end) {\n          var _this4;\n          _classCallCheck(this, PDFNodeStreamRangeReader);\n          _this4 = _super2.call(this, stream);\n          _this4._httpHeaders = {};\n          for (var property in stream.httpHeaders) {\n            var value = stream.httpHeaders[property];\n            if (typeof value === \"undefined\") {\n              continue;\n            }\n            _this4._httpHeaders[property] = value;\n          }\n          _this4._httpHeaders.Range = \"bytes=\".concat(start, \"-\").concat(end - 1);\n          var handleResponse = function handleResponse(response) {\n            if (response.statusCode === 404) {\n              var error = new _util.MissingPDFException(\"Missing PDF \\\"\".concat(_this4._url, \"\\\".\"));\n              _this4._storedError = error;\n              return;\n            }\n            _this4._setReadableStream(response);\n          };\n          _this4._request = null;\n          if (_this4._url.protocol === \"http:\") {\n            _this4._request = http.request(createRequestOptions(_this4._url, _this4._httpHeaders), handleResponse);\n          } else {\n            _this4._request = https.request(createRequestOptions(_this4._url, _this4._httpHeaders), handleResponse);\n          }\n          _this4._request.on(\"error\", function (reason) {\n            _this4._storedError = reason;\n          });\n          _this4._request.end();\n          return _this4;\n        }\n        return PDFNodeStreamRangeReader;\n      }(BaseRangeReader);\n      var PDFNodeStreamFsFullReader = /*#__PURE__*/function (_BaseFullReader2) {\n        _inherits(PDFNodeStreamFsFullReader, _BaseFullReader2);\n        var _super3 = _createSuper(PDFNodeStreamFsFullReader);\n        function PDFNodeStreamFsFullReader(stream) {\n          var _this5;\n          _classCallCheck(this, PDFNodeStreamFsFullReader);\n          _this5 = _super3.call(this, stream);\n          var path = decodeURIComponent(_this5._url.path);\n          if (fileUriRegex.test(_this5._url.href)) {\n            path = path.replace(/^\\//, \"\");\n          }\n          fs.lstat(path, function (error, stat) {\n            if (error) {\n              if (error.code === \"ENOENT\") {\n                error = new _util.MissingPDFException(\"Missing PDF \\\"\".concat(path, \"\\\".\"));\n              }\n              _this5._storedError = error;\n              _this5._headersCapability.reject(error);\n              return;\n            }\n            _this5._contentLength = stat.size;\n            _this5._setReadableStream(fs.createReadStream(path));\n            _this5._headersCapability.resolve();\n          });\n          return _this5;\n        }\n        return PDFNodeStreamFsFullReader;\n      }(BaseFullReader);\n      var PDFNodeStreamFsRangeReader = /*#__PURE__*/function (_BaseRangeReader2) {\n        _inherits(PDFNodeStreamFsRangeReader, _BaseRangeReader2);\n        var _super4 = _createSuper(PDFNodeStreamFsRangeReader);\n        function PDFNodeStreamFsRangeReader(stream, start, end) {\n          var _this6;\n          _classCallCheck(this, PDFNodeStreamFsRangeReader);\n          _this6 = _super4.call(this, stream);\n          var path = decodeURIComponent(_this6._url.path);\n          if (fileUriRegex.test(_this6._url.href)) {\n            path = path.replace(/^\\//, \"\");\n          }\n          _this6._setReadableStream(fs.createReadStream(path, {\n            start: start,\n            end: end - 1\n          }));\n          return _this6;\n        }\n        return PDFNodeStreamFsRangeReader;\n      }(BaseRangeReader);\n\n      /***/\n    }, /* 213 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.createResponseStatusError = createResponseStatusError;\n      exports.extractFilenameFromHeader = extractFilenameFromHeader;\n      exports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\n      exports.validateResponseStatus = validateResponseStatus;\n      var _util = __w_pdfjs_require__(5);\n      var _content_disposition = __w_pdfjs_require__(214);\n      function validateRangeRequestCapabilities(_ref) {\n        var getResponseHeader = _ref.getResponseHeader,\n          isHttp = _ref.isHttp,\n          rangeChunkSize = _ref.rangeChunkSize,\n          disableRange = _ref.disableRange;\n        (0, _util.assert)(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n        var returnValues = {\n          allowRangeRequests: false,\n          suggestedLength: undefined\n        };\n        var length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n        if (!Number.isInteger(length)) {\n          return returnValues;\n        }\n        returnValues.suggestedLength = length;\n        if (length <= 2 * rangeChunkSize) {\n          return returnValues;\n        }\n        if (disableRange || !isHttp) {\n          return returnValues;\n        }\n        if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n          return returnValues;\n        }\n        var contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n        if (contentEncoding !== \"identity\") {\n          return returnValues;\n        }\n        returnValues.allowRangeRequests = true;\n        return returnValues;\n      }\n      function extractFilenameFromHeader(getResponseHeader) {\n        var contentDisposition = getResponseHeader(\"Content-Disposition\");\n        if (contentDisposition) {\n          var filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);\n          if (filename.includes(\"%\")) {\n            try {\n              filename = decodeURIComponent(filename);\n            } catch (ex) {}\n          }\n          if (/\\.pdf$/i.test(filename)) {\n            return filename;\n          }\n        }\n        return null;\n      }\n      function createResponseStatusError(status, url) {\n        if (status === 404 || status === 0 && url.startsWith(\"file:\")) {\n          return new _util.MissingPDFException('Missing PDF \"' + url + '\".');\n        }\n        return new _util.UnexpectedResponseException(\"Unexpected server response (\" + status + ') while retrieving PDF \"' + url + '\".', status);\n      }\n      function validateResponseStatus(status) {\n        return status === 200 || status === 206;\n      }\n\n      /***/\n    }, /* 214 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;\n      function _slicedToArray(arr, i) {\n        return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n      }\n      function _nonIterableRest() {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n      }\n      function _unsupportedIterableToArray(o, minLen) {\n        if (!o) return;\n        if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n        var n = Object.prototype.toString.call(o).slice(8, -1);\n        if (n === \"Object\" && o.constructor) n = o.constructor.name;\n        if (n === \"Map\" || n === \"Set\") return Array.from(o);\n        if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n      }\n      function _arrayLikeToArray(arr, len) {\n        if (len == null || len > arr.length) len = arr.length;\n        for (var i = 0, arr2 = new Array(len); i < len; i++) {\n          arr2[i] = arr[i];\n        }\n        return arr2;\n      }\n      function _iterableToArrayLimit(arr, i) {\n        if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n        var _arr = [];\n        var _n = true;\n        var _d = false;\n        var _e = undefined;\n        try {\n          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n          }\n        } catch (err) {\n          _d = true;\n          _e = err;\n        } finally {\n          try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n          } finally {\n            if (_d) throw _e;\n          }\n        }\n        return _arr;\n      }\n      function _arrayWithHoles(arr) {\n        if (Array.isArray(arr)) return arr;\n      }\n      function getFilenameFromContentDispositionHeader(contentDisposition) {\n        var needsEncodingFixup = true;\n        var tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n        if (tmp) {\n          tmp = tmp[1];\n          var filename = rfc2616unquote(tmp);\n          filename = unescape(filename);\n          filename = rfc5987decode(filename);\n          filename = rfc2047decode(filename);\n          return fixupEncoding(filename);\n        }\n        tmp = rfc2231getparam(contentDisposition);\n        if (tmp) {\n          var _filename = rfc2047decode(tmp);\n          return fixupEncoding(_filename);\n        }\n        tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n        if (tmp) {\n          tmp = tmp[1];\n          var _filename2 = rfc2616unquote(tmp);\n          _filename2 = rfc2047decode(_filename2);\n          return fixupEncoding(_filename2);\n        }\n        function toParamRegExp(attributePattern, flags) {\n          return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n        }\n        function textdecode(encoding, value) {\n          if (encoding) {\n            if (!/^[\\x00-\\xFF]+$/.test(value)) {\n              return value;\n            }\n            try {\n              var decoder = new TextDecoder(encoding, {\n                fatal: true\n              });\n              var bytes = Array.from(value, function (ch) {\n                return ch.charCodeAt(0) & 0xff;\n              });\n              value = decoder.decode(new Uint8Array(bytes));\n              needsEncodingFixup = false;\n            } catch (e) {\n              if (/^utf-?8$/i.test(encoding)) {\n                try {\n                  value = decodeURIComponent(escape(value));\n                  needsEncodingFixup = false;\n                } catch (err) {}\n              }\n            }\n          }\n          return value;\n        }\n        function fixupEncoding(value) {\n          if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n            value = textdecode(\"utf-8\", value);\n            if (needsEncodingFixup) {\n              value = textdecode(\"iso-8859-1\", value);\n            }\n          }\n          return value;\n        }\n        function rfc2231getparam(contentDispositionStr) {\n          var matches = [];\n          var match;\n          var iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n          while ((match = iter.exec(contentDispositionStr)) !== null) {\n            var _match = match,\n              _match2 = _slicedToArray(_match, 4),\n              n = _match2[1],\n              quot = _match2[2],\n              part = _match2[3];\n            n = parseInt(n, 10);\n            if (n in matches) {\n              if (n === 0) {\n                break;\n              }\n              continue;\n            }\n            matches[n] = [quot, part];\n          }\n          var parts = [];\n          for (var _n2 = 0; _n2 < matches.length; ++_n2) {\n            if (!(_n2 in matches)) {\n              break;\n            }\n            var _matches$_n = _slicedToArray(matches[_n2], 2),\n              _quot = _matches$_n[0],\n              _part = _matches$_n[1];\n            _part = rfc2616unquote(_part);\n            if (_quot) {\n              _part = unescape(_part);\n              if (_n2 === 0) {\n                _part = rfc5987decode(_part);\n              }\n            }\n            parts.push(_part);\n          }\n          return parts.join(\"\");\n        }\n        function rfc2616unquote(value) {\n          if (value.startsWith('\"')) {\n            var parts = value.slice(1).split('\\\\\"');\n            for (var i = 0; i < parts.length; ++i) {\n              var quotindex = parts[i].indexOf('\"');\n              if (quotindex !== -1) {\n                parts[i] = parts[i].slice(0, quotindex);\n                parts.length = i + 1;\n              }\n              parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n            }\n            value = parts.join('\"');\n          }\n          return value;\n        }\n        function rfc5987decode(extvalue) {\n          var encodingend = extvalue.indexOf(\"'\");\n          if (encodingend === -1) {\n            return extvalue;\n          }\n          var encoding = extvalue.slice(0, encodingend);\n          var langvalue = extvalue.slice(encodingend + 1);\n          var value = langvalue.replace(/^[^']*'/, \"\");\n          return textdecode(encoding, value);\n        }\n        function rfc2047decode(value) {\n          if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n            return value;\n          }\n          return value.replace(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (matches, charset, encoding, text) {\n            if (encoding === \"q\" || encoding === \"Q\") {\n              text = text.replace(/_/g, \" \");\n              text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n                return String.fromCharCode(parseInt(hex, 16));\n              });\n              return textdecode(charset, text);\n            }\n            try {\n              text = atob(text);\n            } catch (e) {}\n            return textdecode(charset, text);\n          });\n        }\n        return \"\";\n      }\n\n      /***/\n    }, /* 215 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFNetworkStream = void 0;\n      var _regenerator = _interopRequireDefault(__w_pdfjs_require__(2));\n      var _util = __w_pdfjs_require__(5);\n      var _network_utils = __w_pdfjs_require__(213);\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n      function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n        if (info.done) {\n          resolve(value);\n        } else {\n          Promise.resolve(value).then(_next, _throw);\n        }\n      }\n      function _asyncToGenerator(fn) {\n        return function () {\n          var self = this,\n            args = arguments;\n          return new Promise(function (resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n          });\n        };\n      }\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n      function _defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n      function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        return Constructor;\n      }\n      ;\n      var OK_RESPONSE = 200;\n      var PARTIAL_CONTENT_RESPONSE = 206;\n      function getArrayBuffer(xhr) {\n        var data = xhr.response;\n        if (typeof data !== \"string\") {\n          return data;\n        }\n        var array = (0, _util.stringToBytes)(data);\n        return array.buffer;\n      }\n      var NetworkManager = /*#__PURE__*/function () {\n        function NetworkManager(url, args) {\n          _classCallCheck(this, NetworkManager);\n          this.url = url;\n          args = args || {};\n          this.isHttp = /^https?:/i.test(url);\n          this.httpHeaders = this.isHttp && args.httpHeaders || {};\n          this.withCredentials = args.withCredentials || false;\n          this.getXhr = args.getXhr || function NetworkManager_getXhr() {\n            return new XMLHttpRequest();\n          };\n          this.currXhrId = 0;\n          this.pendingRequests = Object.create(null);\n        }\n        _createClass(NetworkManager, [{\n          key: \"requestRange\",\n          value: function requestRange(begin, end, listeners) {\n            var args = {\n              begin: begin,\n              end: end\n            };\n            for (var prop in listeners) {\n              args[prop] = listeners[prop];\n            }\n            return this.request(args);\n          }\n        }, {\n          key: \"requestFull\",\n          value: function requestFull(listeners) {\n            return this.request(listeners);\n          }\n        }, {\n          key: \"request\",\n          value: function request(args) {\n            var xhr = this.getXhr();\n            var xhrId = this.currXhrId++;\n            var pendingRequest = this.pendingRequests[xhrId] = {\n              xhr: xhr\n            };\n            xhr.open(\"GET\", this.url);\n            xhr.withCredentials = this.withCredentials;\n            for (var property in this.httpHeaders) {\n              var value = this.httpHeaders[property];\n              if (typeof value === \"undefined\") {\n                continue;\n              }\n              xhr.setRequestHeader(property, value);\n            }\n            if (this.isHttp && \"begin\" in args && \"end\" in args) {\n              xhr.setRequestHeader(\"Range\", \"bytes=\".concat(args.begin, \"-\").concat(args.end - 1));\n              pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n            } else {\n              pendingRequest.expectedStatus = OK_RESPONSE;\n            }\n            xhr.responseType = \"arraybuffer\";\n            if (args.onError) {\n              xhr.onerror = function (evt) {\n                args.onError(xhr.status);\n              };\n            }\n            xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n            xhr.onprogress = this.onProgress.bind(this, xhrId);\n            pendingRequest.onHeadersReceived = args.onHeadersReceived;\n            pendingRequest.onDone = args.onDone;\n            pendingRequest.onError = args.onError;\n            pendingRequest.onProgress = args.onProgress;\n            xhr.send(null);\n            return xhrId;\n          }\n        }, {\n          key: \"onProgress\",\n          value: function onProgress(xhrId, evt) {\n            var pendingRequest = this.pendingRequests[xhrId];\n            if (!pendingRequest) {\n              return;\n            }\n            if (pendingRequest.onProgress) {\n              pendingRequest.onProgress(evt);\n            }\n          }\n        }, {\n          key: \"onStateChange\",\n          value: function onStateChange(xhrId, evt) {\n            var pendingRequest = this.pendingRequests[xhrId];\n            if (!pendingRequest) {\n              return;\n            }\n            var xhr = pendingRequest.xhr;\n            if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n              pendingRequest.onHeadersReceived();\n              delete pendingRequest.onHeadersReceived;\n            }\n            if (xhr.readyState !== 4) {\n              return;\n            }\n            if (!(xhrId in this.pendingRequests)) {\n              return;\n            }\n            delete this.pendingRequests[xhrId];\n            if (xhr.status === 0 && this.isHttp) {\n              if (pendingRequest.onError) {\n                pendingRequest.onError(xhr.status);\n              }\n              return;\n            }\n            var xhrStatus = xhr.status || OK_RESPONSE;\n            var ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n            if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n              if (pendingRequest.onError) {\n                pendingRequest.onError(xhr.status);\n              }\n              return;\n            }\n            var chunk = getArrayBuffer(xhr);\n            if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n              var rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n              var matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n              pendingRequest.onDone({\n                begin: parseInt(matches[1], 10),\n                chunk: chunk\n              });\n            } else if (chunk) {\n              pendingRequest.onDone({\n                begin: 0,\n                chunk: chunk\n              });\n            } else if (pendingRequest.onError) {\n              pendingRequest.onError(xhr.status);\n            }\n          }\n        }, {\n          key: \"hasPendingRequests\",\n          value: function hasPendingRequests() {\n            for (var xhrId in this.pendingRequests) {\n              return true;\n            }\n            return false;\n          }\n        }, {\n          key: \"getRequestXhr\",\n          value: function getRequestXhr(xhrId) {\n            return this.pendingRequests[xhrId].xhr;\n          }\n        }, {\n          key: \"isPendingRequest\",\n          value: function isPendingRequest(xhrId) {\n            return xhrId in this.pendingRequests;\n          }\n        }, {\n          key: \"abortAllRequests\",\n          value: function abortAllRequests() {\n            for (var xhrId in this.pendingRequests) {\n              this.abortRequest(xhrId | 0);\n            }\n          }\n        }, {\n          key: \"abortRequest\",\n          value: function abortRequest(xhrId) {\n            var xhr = this.pendingRequests[xhrId].xhr;\n            delete this.pendingRequests[xhrId];\n            xhr.abort();\n          }\n        }]);\n        return NetworkManager;\n      }();\n      var PDFNetworkStream = /*#__PURE__*/function () {\n        function PDFNetworkStream(source) {\n          _classCallCheck(this, PDFNetworkStream);\n          this._source = source;\n          this._manager = new NetworkManager(source.url, {\n            httpHeaders: source.httpHeaders,\n            withCredentials: source.withCredentials\n          });\n          this._rangeChunkSize = source.rangeChunkSize;\n          this._fullRequestReader = null;\n          this._rangeRequestReaders = [];\n        }\n        _createClass(PDFNetworkStream, [{\n          key: \"_onRangeRequestReaderClosed\",\n          value: function _onRangeRequestReaderClosed(reader) {\n            var i = this._rangeRequestReaders.indexOf(reader);\n            if (i >= 0) {\n              this._rangeRequestReaders.splice(i, 1);\n            }\n          }\n        }, {\n          key: \"getFullReader\",\n          value: function getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFNetworkStream.getFullReader can only be called once.\");\n            this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n            return this._fullRequestReader;\n          }\n        }, {\n          key: \"getRangeReader\",\n          value: function getRangeReader(begin, end) {\n            var reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n            reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n            this._rangeRequestReaders.push(reader);\n            return reader;\n          }\n        }, {\n          key: \"cancelAllRequests\",\n          value: function cancelAllRequests(reason) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.cancel(reason);\n            }\n            var readers = this._rangeRequestReaders.slice(0);\n            readers.forEach(function (reader) {\n              reader.cancel(reason);\n            });\n          }\n        }]);\n        return PDFNetworkStream;\n      }();\n      exports.PDFNetworkStream = PDFNetworkStream;\n      var PDFNetworkStreamFullRequestReader = /*#__PURE__*/function () {\n        function PDFNetworkStreamFullRequestReader(manager, source) {\n          _classCallCheck(this, PDFNetworkStreamFullRequestReader);\n          this._manager = manager;\n          var args = {\n            onHeadersReceived: this._onHeadersReceived.bind(this),\n            onDone: this._onDone.bind(this),\n            onError: this._onError.bind(this),\n            onProgress: this._onProgress.bind(this)\n          };\n          this._url = source.url;\n          this._fullRequestId = manager.requestFull(args);\n          this._headersReceivedCapability = (0, _util.createPromiseCapability)();\n          this._disableRange = source.disableRange || false;\n          this._contentLength = source.length;\n          this._rangeChunkSize = source.rangeChunkSize;\n          if (!this._rangeChunkSize && !this._disableRange) {\n            this._disableRange = true;\n          }\n          this._isStreamingSupported = false;\n          this._isRangeSupported = false;\n          this._cachedChunks = [];\n          this._requests = [];\n          this._done = false;\n          this._storedError = undefined;\n          this._filename = null;\n          this.onProgress = null;\n        }\n        _createClass(PDFNetworkStreamFullRequestReader, [{\n          key: \"_onHeadersReceived\",\n          value: function _onHeadersReceived() {\n            var fullRequestXhrId = this._fullRequestId;\n            var fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n            var getResponseHeader = function getResponseHeader(name) {\n              return fullRequestXhr.getResponseHeader(name);\n            };\n            var _validateRangeRequest = (0, _network_utils.validateRangeRequestCapabilities)({\n                getResponseHeader: getResponseHeader,\n                isHttp: this._manager.isHttp,\n                rangeChunkSize: this._rangeChunkSize,\n                disableRange: this._disableRange\n              }),\n              allowRangeRequests = _validateRangeRequest.allowRangeRequests,\n              suggestedLength = _validateRangeRequest.suggestedLength;\n            if (allowRangeRequests) {\n              this._isRangeSupported = true;\n            }\n            this._contentLength = suggestedLength || this._contentLength;\n            this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n            if (this._isRangeSupported) {\n              this._manager.abortRequest(fullRequestXhrId);\n            }\n            this._headersReceivedCapability.resolve();\n          }\n        }, {\n          key: \"_onDone\",\n          value: function _onDone(args) {\n            if (args) {\n              if (this._requests.length > 0) {\n                var requestCapability = this._requests.shift();\n                requestCapability.resolve({\n                  value: args.chunk,\n                  done: false\n                });\n              } else {\n                this._cachedChunks.push(args.chunk);\n              }\n            }\n            this._done = true;\n            if (this._cachedChunks.length > 0) {\n              return;\n            }\n            this._requests.forEach(function (requestCapability) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            });\n            this._requests = [];\n          }\n        }, {\n          key: \"_onError\",\n          value: function _onError(status) {\n            var url = this._url;\n            var exception = (0, _network_utils.createResponseStatusError)(status, url);\n            this._storedError = exception;\n            this._headersReceivedCapability.reject(exception);\n            this._requests.forEach(function (requestCapability) {\n              requestCapability.reject(exception);\n            });\n            this._requests = [];\n            this._cachedChunks = [];\n          }\n        }, {\n          key: \"_onProgress\",\n          value: function _onProgress(data) {\n            if (this.onProgress) {\n              this.onProgress({\n                loaded: data.loaded,\n                total: data.lengthComputable ? data.total : this._contentLength\n              });\n            }\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read = _asyncToGenerator( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n              var chunk, requestCapability;\n              return _regenerator[\"default\"].wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      if (!this._storedError) {\n                        _context.next = 2;\n                        break;\n                      }\n                      throw this._storedError;\n                    case 2:\n                      if (!(this._cachedChunks.length > 0)) {\n                        _context.next = 5;\n                        break;\n                      }\n                      chunk = this._cachedChunks.shift();\n                      return _context.abrupt(\"return\", {\n                        value: chunk,\n                        done: false\n                      });\n                    case 5:\n                      if (!this._done) {\n                        _context.next = 7;\n                        break;\n                      }\n                      return _context.abrupt(\"return\", {\n                        value: undefined,\n                        done: true\n                      });\n                    case 7:\n                      requestCapability = (0, _util.createPromiseCapability)();\n                      this._requests.push(requestCapability);\n                      return _context.abrupt(\"return\", requestCapability.promise);\n                    case 10:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee, this);\n            }));\n            function read() {\n              return _read.apply(this, arguments);\n            }\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            this._done = true;\n            this._headersReceivedCapability.reject(reason);\n            this._requests.forEach(function (requestCapability) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            });\n            this._requests = [];\n            if (this._manager.isPendingRequest(this._fullRequestId)) {\n              this._manager.abortRequest(this._fullRequestId);\n            }\n            this._fullRequestReader = null;\n          }\n        }, {\n          key: \"filename\",\n          get: function get() {\n            return this._filename;\n          }\n        }, {\n          key: \"isRangeSupported\",\n          get: function get() {\n            return this._isRangeSupported;\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return this._isStreamingSupported;\n          }\n        }, {\n          key: \"contentLength\",\n          get: function get() {\n            return this._contentLength;\n          }\n        }, {\n          key: \"headersReady\",\n          get: function get() {\n            return this._headersReceivedCapability.promise;\n          }\n        }]);\n        return PDFNetworkStreamFullRequestReader;\n      }();\n      var PDFNetworkStreamRangeRequestReader = /*#__PURE__*/function () {\n        function PDFNetworkStreamRangeRequestReader(manager, begin, end) {\n          _classCallCheck(this, PDFNetworkStreamRangeRequestReader);\n          this._manager = manager;\n          var args = {\n            onDone: this._onDone.bind(this),\n            onProgress: this._onProgress.bind(this)\n          };\n          this._requestId = manager.requestRange(begin, end, args);\n          this._requests = [];\n          this._queuedChunk = null;\n          this._done = false;\n          this.onProgress = null;\n          this.onClosed = null;\n        }\n        _createClass(PDFNetworkStreamRangeRequestReader, [{\n          key: \"_close\",\n          value: function _close() {\n            if (this.onClosed) {\n              this.onClosed(this);\n            }\n          }\n        }, {\n          key: \"_onDone\",\n          value: function _onDone(data) {\n            var chunk = data.chunk;\n            if (this._requests.length > 0) {\n              var requestCapability = this._requests.shift();\n              requestCapability.resolve({\n                value: chunk,\n                done: false\n              });\n            } else {\n              this._queuedChunk = chunk;\n            }\n            this._done = true;\n            this._requests.forEach(function (requestCapability) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            });\n            this._requests = [];\n            this._close();\n          }\n        }, {\n          key: \"_onProgress\",\n          value: function _onProgress(evt) {\n            if (!this.isStreamingSupported && this.onProgress) {\n              this.onProgress({\n                loaded: evt.loaded\n              });\n            }\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read2 = _asyncToGenerator( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n              var chunk, requestCapability;\n              return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      if (!(this._queuedChunk !== null)) {\n                        _context2.next = 4;\n                        break;\n                      }\n                      chunk = this._queuedChunk;\n                      this._queuedChunk = null;\n                      return _context2.abrupt(\"return\", {\n                        value: chunk,\n                        done: false\n                      });\n                    case 4:\n                      if (!this._done) {\n                        _context2.next = 6;\n                        break;\n                      }\n                      return _context2.abrupt(\"return\", {\n                        value: undefined,\n                        done: true\n                      });\n                    case 6:\n                      requestCapability = (0, _util.createPromiseCapability)();\n                      this._requests.push(requestCapability);\n                      return _context2.abrupt(\"return\", requestCapability.promise);\n                    case 9:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2, this);\n            }));\n            function read() {\n              return _read2.apply(this, arguments);\n            }\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            this._done = true;\n            this._requests.forEach(function (requestCapability) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            });\n            this._requests = [];\n            if (this._manager.isPendingRequest(this._requestId)) {\n              this._manager.abortRequest(this._requestId);\n            }\n            this._close();\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return false;\n          }\n        }]);\n        return PDFNetworkStreamRangeRequestReader;\n      }();\n\n      /***/\n    }, /* 216 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFFetchStream = void 0;\n      var _regenerator = _interopRequireDefault(__w_pdfjs_require__(2));\n      var _util = __w_pdfjs_require__(5);\n      var _network_utils = __w_pdfjs_require__(213);\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n      function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n        if (info.done) {\n          resolve(value);\n        } else {\n          Promise.resolve(value).then(_next, _throw);\n        }\n      }\n      function _asyncToGenerator(fn) {\n        return function () {\n          var self = this,\n            args = arguments;\n          return new Promise(function (resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n          });\n        };\n      }\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n      function _defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n      function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        return Constructor;\n      }\n      ;\n      function createFetchOptions(headers, withCredentials, abortController) {\n        return {\n          method: \"GET\",\n          headers: headers,\n          signal: abortController && abortController.signal,\n          mode: \"cors\",\n          credentials: withCredentials ? \"include\" : \"same-origin\",\n          redirect: \"follow\"\n        };\n      }\n      function createHeaders(httpHeaders) {\n        var headers = new Headers();\n        for (var property in httpHeaders) {\n          var value = httpHeaders[property];\n          if (typeof value === \"undefined\") {\n            continue;\n          }\n          headers.append(property, value);\n        }\n        return headers;\n      }\n      var PDFFetchStream = /*#__PURE__*/function () {\n        function PDFFetchStream(source) {\n          _classCallCheck(this, PDFFetchStream);\n          this.source = source;\n          this.isHttp = /^https?:/i.test(source.url);\n          this.httpHeaders = this.isHttp && source.httpHeaders || {};\n          this._fullRequestReader = null;\n          this._rangeRequestReaders = [];\n        }\n        _createClass(PDFFetchStream, [{\n          key: \"getFullReader\",\n          value: function getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFFetchStream.getFullReader can only be called once.\");\n            this._fullRequestReader = new PDFFetchStreamReader(this);\n            return this._fullRequestReader;\n          }\n        }, {\n          key: \"getRangeReader\",\n          value: function getRangeReader(begin, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n            var reader = new PDFFetchStreamRangeReader(this, begin, end);\n            this._rangeRequestReaders.push(reader);\n            return reader;\n          }\n        }, {\n          key: \"cancelAllRequests\",\n          value: function cancelAllRequests(reason) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.cancel(reason);\n            }\n            var readers = this._rangeRequestReaders.slice(0);\n            readers.forEach(function (reader) {\n              reader.cancel(reason);\n            });\n          }\n        }, {\n          key: \"_progressiveDataLength\",\n          get: function get() {\n            return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n          }\n        }]);\n        return PDFFetchStream;\n      }();\n      exports.PDFFetchStream = PDFFetchStream;\n      var PDFFetchStreamReader = /*#__PURE__*/function () {\n        function PDFFetchStreamReader(stream) {\n          var _this = this;\n          _classCallCheck(this, PDFFetchStreamReader);\n          this._stream = stream;\n          this._reader = null;\n          this._loaded = 0;\n          this._filename = null;\n          var source = stream.source;\n          this._withCredentials = source.withCredentials || false;\n          this._contentLength = source.length;\n          this._headersCapability = (0, _util.createPromiseCapability)();\n          this._disableRange = source.disableRange || false;\n          this._rangeChunkSize = source.rangeChunkSize;\n          if (!this._rangeChunkSize && !this._disableRange) {\n            this._disableRange = true;\n          }\n          if (typeof AbortController !== \"undefined\") {\n            this._abortController = new AbortController();\n          }\n          this._isStreamingSupported = !source.disableStream;\n          this._isRangeSupported = !source.disableRange;\n          this._headers = createHeaders(this._stream.httpHeaders);\n          var url = source.url;\n          fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(function (response) {\n            if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n              throw (0, _network_utils.createResponseStatusError)(response.status, url);\n            }\n            _this._reader = response.body.getReader();\n            _this._headersCapability.resolve();\n            var getResponseHeader = function getResponseHeader(name) {\n              return response.headers.get(name);\n            };\n            var _validateRangeRequest = (0, _network_utils.validateRangeRequestCapabilities)({\n                getResponseHeader: getResponseHeader,\n                isHttp: _this._stream.isHttp,\n                rangeChunkSize: _this._rangeChunkSize,\n                disableRange: _this._disableRange\n              }),\n              allowRangeRequests = _validateRangeRequest.allowRangeRequests,\n              suggestedLength = _validateRangeRequest.suggestedLength;\n            _this._isRangeSupported = allowRangeRequests;\n            _this._contentLength = suggestedLength || _this._contentLength;\n            _this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n            if (!_this._isStreamingSupported && _this._isRangeSupported) {\n              _this.cancel(new _util.AbortException(\"Streaming is disabled.\"));\n            }\n          })[\"catch\"](this._headersCapability.reject);\n          this.onProgress = null;\n        }\n        _createClass(PDFFetchStreamReader, [{\n          key: \"read\",\n          value: function () {\n            var _read = _asyncToGenerator( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n              var _yield$this$_reader$r, value, done, buffer;\n              return _regenerator[\"default\"].wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return this._headersCapability.promise;\n                    case 2:\n                      _context.next = 4;\n                      return this._reader.read();\n                    case 4:\n                      _yield$this$_reader$r = _context.sent;\n                      value = _yield$this$_reader$r.value;\n                      done = _yield$this$_reader$r.done;\n                      if (!done) {\n                        _context.next = 9;\n                        break;\n                      }\n                      return _context.abrupt(\"return\", {\n                        value: value,\n                        done: done\n                      });\n                    case 9:\n                      this._loaded += value.byteLength;\n                      if (this.onProgress) {\n                        this.onProgress({\n                          loaded: this._loaded,\n                          total: this._contentLength\n                        });\n                      }\n                      buffer = new Uint8Array(value).buffer;\n                      return _context.abrupt(\"return\", {\n                        value: buffer,\n                        done: false\n                      });\n                    case 13:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee, this);\n            }));\n            function read() {\n              return _read.apply(this, arguments);\n            }\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            if (this._reader) {\n              this._reader.cancel(reason);\n            }\n            if (this._abortController) {\n              this._abortController.abort();\n            }\n          }\n        }, {\n          key: \"headersReady\",\n          get: function get() {\n            return this._headersCapability.promise;\n          }\n        }, {\n          key: \"filename\",\n          get: function get() {\n            return this._filename;\n          }\n        }, {\n          key: \"contentLength\",\n          get: function get() {\n            return this._contentLength;\n          }\n        }, {\n          key: \"isRangeSupported\",\n          get: function get() {\n            return this._isRangeSupported;\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return this._isStreamingSupported;\n          }\n        }]);\n        return PDFFetchStreamReader;\n      }();\n      var PDFFetchStreamRangeReader = /*#__PURE__*/function () {\n        function PDFFetchStreamRangeReader(stream, begin, end) {\n          var _this2 = this;\n          _classCallCheck(this, PDFFetchStreamRangeReader);\n          this._stream = stream;\n          this._reader = null;\n          this._loaded = 0;\n          var source = stream.source;\n          this._withCredentials = source.withCredentials || false;\n          this._readCapability = (0, _util.createPromiseCapability)();\n          this._isStreamingSupported = !source.disableStream;\n          if (typeof AbortController !== \"undefined\") {\n            this._abortController = new AbortController();\n          }\n          this._headers = createHeaders(this._stream.httpHeaders);\n          this._headers.append(\"Range\", \"bytes=\".concat(begin, \"-\").concat(end - 1));\n          var url = source.url;\n          fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(function (response) {\n            if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n              throw (0, _network_utils.createResponseStatusError)(response.status, url);\n            }\n            _this2._readCapability.resolve();\n            _this2._reader = response.body.getReader();\n          });\n          this.onProgress = null;\n        }\n        _createClass(PDFFetchStreamRangeReader, [{\n          key: \"read\",\n          value: function () {\n            var _read2 = _asyncToGenerator( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n              var _yield$this$_reader$r2, value, done, buffer;\n              return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _context2.next = 2;\n                      return this._readCapability.promise;\n                    case 2:\n                      _context2.next = 4;\n                      return this._reader.read();\n                    case 4:\n                      _yield$this$_reader$r2 = _context2.sent;\n                      value = _yield$this$_reader$r2.value;\n                      done = _yield$this$_reader$r2.done;\n                      if (!done) {\n                        _context2.next = 9;\n                        break;\n                      }\n                      return _context2.abrupt(\"return\", {\n                        value: value,\n                        done: done\n                      });\n                    case 9:\n                      this._loaded += value.byteLength;\n                      if (this.onProgress) {\n                        this.onProgress({\n                          loaded: this._loaded\n                        });\n                      }\n                      buffer = new Uint8Array(value).buffer;\n                      return _context2.abrupt(\"return\", {\n                        value: buffer,\n                        done: false\n                      });\n                    case 13:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2, this);\n            }));\n            function read() {\n              return _read2.apply(this, arguments);\n            }\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            if (this._reader) {\n              this._reader.cancel(reason);\n            }\n            if (this._abortController) {\n              this._abortController.abort();\n            }\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return this._isStreamingSupported;\n          }\n        }]);\n        return PDFFetchStreamRangeReader;\n      }();\n\n      /***/\n    }\n    /******/])\n  );\n});\n//# sourceMappingURL=pdf.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}