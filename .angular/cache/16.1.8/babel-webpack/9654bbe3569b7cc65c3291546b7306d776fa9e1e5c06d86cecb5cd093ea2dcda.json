{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { EmptyLayoutComponent } from './core/layouts/empty/empty-layout.component';\nimport { DynamicLayoutComponent } from './core/layouts/dynamic/dynamic-layout.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [\n/*\n  Default route\n*/\n{\n  path: '',\n  redirectTo: '/authentication/signin',\n  pathMatch: 'full'\n},\n// { path: '', redirectTo: '/authentication/signup', pathMatch: 'full' },\n/*\n  Auth routes + layout\n*/\n{\n  path: '',\n  component: EmptyLayoutComponent,\n  children: [{\n    path: 'authentication',\n    loadChildren: () => import('./modules/authentication/authentication.module').then(m => m.AuthenticationModule)\n  }]\n},\n/*\n  Main routes + dynamic layouts\n*/\n{\n  path: '',\n  component: DynamicLayoutComponent,\n  children: [{\n    path: 'authentication',\n    loadChildren: () => import('./modules/authentication/authentication.module').then(m => m.AuthenticationModule)\n  }, {\n    path: 'crm',\n    loadChildren: () => import('./modules/crm/crm.module').then(m => m.CrmModule)\n  }, {\n    path: 'inventory',\n    loadChildren: () => import('./modules/inventory/inventory.module').then(m => m.InventoryModule)\n  }, {\n    path: 'supply-chain',\n    loadChildren: () => import('./modules/supply-chain/supply-chain.module').then(m => m.SupplyChainModule)\n  }, {\n    path: 'analysis',\n    loadChildren: () => import('./modules/analysis/analysis.module').then(m => m.AnalysisModule)\n  }, {\n    path: 'home',\n    loadChildren: () => import('./modules/home/home.module').then(m => m.HomeModule)\n  }]\n},\n/*\n  Undefined routes (should redirect to a 404 page)\n*/\n{\n  path: '**',\n  redirectTo: 'home/dashboard'\n}];\nexport let AppRoutingModule = /*#__PURE__*/(() => {\n  class AppRoutingModule {\n    static #_ = this.ɵfac = function AppRoutingModule_Factory(t) {\n      return new (t || AppRoutingModule)();\n    };\n    static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppRoutingModule\n    });\n    static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [RouterModule.forRoot(routes, {\n        // If you want to preload all lazy routes when the app loads, uncomment the following line\n        // preloadingStrategy: PreloadAllModules,\n        onSameUrlNavigation: 'reload',\n        // This value is required for server-side rendering to work.\n        initialNavigation: 'enabled'\n      }), RouterModule]\n    });\n  }\n  return AppRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}