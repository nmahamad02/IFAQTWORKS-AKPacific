{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst _c0 = [\"*\"];\nexport let AspectRatioComponent = /*#__PURE__*/(() => {\n  class AspectRatioComponent {\n    set ratio(ratio) {\n      ratio = ratio !== undefined && ratio !== null ? ratio : {\n        w: 1,\n        h: 1\n      };\n      const heightRatio = ratio.h / ratio.w * 100 + '%';\n      // Conserve aspect ratio (see: http://stackoverflow.com/a/10441480/1116959)\n      this.ratioPadding = '0px 0px ' + heightRatio + ' 0px';\n    }\n    constructor() {\n      this.ratioPadding = '0px';\n    }\n    static #_ = this.ɵfac = function AspectRatioComponent_Factory(t) {\n      return new (t || AspectRatioComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AspectRatioComponent,\n      selectors: [[\"cc-aspect-ratio\"]],\n      hostVars: 2,\n      hostBindings: function AspectRatioComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"padding\", ctx.ratioPadding);\n        }\n      },\n      inputs: {\n        ratio: \"ratio\"\n      },\n      ngContentSelectors: _c0,\n      decls: 2,\n      vars: 0,\n      consts: [[1, \"content-wrapper\"]],\n      template: function AspectRatioComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵprojection(1);\n          i0.ɵɵelementEnd();\n        }\n      },\n      styles: [\"[_nghost-%COMP%]{display:block;overflow:hidden;position:relative;width:100%}[_nghost-%COMP%]   .content-wrapper[_ngcontent-%COMP%]{position:absolute;inset:0}\"]\n    });\n  }\n  return AspectRatioComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}