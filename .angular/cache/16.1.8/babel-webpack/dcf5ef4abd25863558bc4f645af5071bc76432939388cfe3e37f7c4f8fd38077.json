{"ast":null,"code":"import { CdkPortalOutlet, ComponentPortal } from '@angular/cdk/portal';\nimport { NotificationsMenuComponent } from '../notifications-menu/notifications-menu.component';\nimport { SettingsMenuComponent } from '../settings-menu/settings-menu.component';\nimport { SearchMenuComponent } from '../search-menu/search-menu.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../side-menus.service\";\nfunction DynamicMenuComponent_ng_template_0_Template(rf, ctx) {}\nexport let DynamicMenuComponent = /*#__PURE__*/(() => {\n  class DynamicMenuComponent {\n    constructor(sideMenusService) {\n      this.sideMenusService = sideMenusService;\n    }\n    ngOnInit() {}\n    ngOnDestroy() {\n      this.dynamicMenuPortalSubscription.unsubscribe();\n      this.dynamicMenuContentSubscription.unsubscribe();\n    }\n    ngAfterViewInit() {\n      this.dynamicMenuPortalSubscription = this.dynamicMenuPortalOutlet.attached.subscribe(event => {}, error => {\n        console.log('DynamicMenu attached [DynamicMenuComponent] - error', error);\n      }, () => {});\n      this.dynamicMenuContentSubscription = this.sideMenusService.renderAltMenuSubject.subscribe(event => {\n        switch (event) {\n          case 'notifications':\n            if (!this.notificationsMenuComponentPortal) {\n              this.notificationsMenuComponentPortal = new ComponentPortal(NotificationsMenuComponent);\n            }\n            this.dynamicMenuPortal = this.notificationsMenuComponentPortal;\n            break;\n          case 'settings':\n            if (!this.settingsMenuComponentPortal) {\n              this.settingsMenuComponentPortal = new ComponentPortal(SettingsMenuComponent);\n            }\n            this.dynamicMenuPortal = this.settingsMenuComponentPortal;\n            break;\n          case 'search':\n            if (!this.searchMenuComponentPortal) {\n              this.searchMenuComponentPortal = new ComponentPortal(SearchMenuComponent);\n            }\n            this.dynamicMenuPortal = this.searchMenuComponentPortal;\n            break;\n          default:\n          // Do nothing or render an error component?\n        }\n      }, error => {\n        console.log('renderAltMenu [DynamicMenuComponent] - error', error);\n      }, () => {});\n    }\n    static #_ = this.ɵfac = function DynamicMenuComponent_Factory(t) {\n      return new (t || DynamicMenuComponent)(i0.ɵɵdirectiveInject(i1.SideMenusService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DynamicMenuComponent,\n      selectors: [[\"app-dynamic-menu\"]],\n      viewQuery: function DynamicMenuComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(CdkPortalOutlet, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicMenuPortalOutlet = _t.first);\n        }\n      },\n      decls: 1,\n      vars: 1,\n      consts: [[3, \"cdkPortalOutlet\"]],\n      template: function DynamicMenuComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, DynamicMenuComponent_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"cdkPortalOutlet\", ctx.dynamicMenuPortal);\n        }\n      },\n      styles: [\"[_nghost-%COMP%]{--dynamic-menu-background: palette-color(\\\"grey-0\\\");--dynamic-menu-color: #CCCCCC;--dynamic-menu-alt-color: #CCCCCC;--dynamic-menu-padding: 35px;--dynamic-menu-spacing: 10px}\"]\n    });\n  }\n  return DynamicMenuComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}