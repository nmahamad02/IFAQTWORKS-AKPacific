{"ast":null,"code":"import { PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"./core/layouts/layouts.service\";\nimport * as i3 from \"@angular/router\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(platformId, breakpointObserver, layoutsService) {\n      this.platformId = platformId;\n      this.breakpointObserver = breakpointObserver;\n      this.layoutsService = layoutsService;\n      this.title = 'fully-angular-admin-template';\n    }\n    ngOnInit() {\n      // Listen to device size changes to dynamically adjust the layout\n      if (isPlatformBrowser(this.platformId)) {\n        // Use Angular CDK Breakpoint Observer to detect changes on the screen size\n        this.breakpointObserver.observe([Breakpoints.XSmall]).subscribe(result => {\n          if (result.breakpoints[Breakpoints.XSmall]) {\n            // Switch to mobile layout\n            const mobileLayoutName = 'mobile';\n            this.layoutsService.switchLayout(mobileLayoutName);\n          } else {\n            // Switch back to previous layout (or the default one)\n            const previousLayoutName = this.layoutsService.previousLayout.name;\n            this.layoutsService.switchLayout(previousLayoutName);\n          }\n        });\n      }\n    }\n    static #_ = this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i1.BreakpointObserver), i0.ɵɵdirectiveInject(i2.LayoutsService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 1,\n      vars: 0,\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"router-outlet\");\n        }\n      },\n      dependencies: [i3.RouterOutlet],\n      encapsulation: 2\n    });\n  }\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}