{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let LookupService = /*#__PURE__*/(() => {\n  class LookupService {\n    constructor(http) {\n      this.http = http;\n      this.serviceUrl = 'https://dummyjson.com/users';\n      this.url = 'http://15.185.46.105:5045/api';\n    }\n    getUsers() {\n      return this.http.get(this.serviceUrl).pipe(map(data => data.users));\n    }\n    updateUser(user) {\n      return this.http.patch(`${this.serviceUrl}/${user.id}`, user);\n    }\n    addUser(user) {\n      return this.http.post(`${this.serviceUrl}/add`, user);\n    }\n    getSalesman() {\n      return this.http.get(this.url + '/lookup/salesman').pipe(map(data => data.recordset));\n    }\n    getSalesmenDetails(code) {\n      return this.http.get(this.url + '/lookup/salesman/check/' + code);\n    }\n    postSalesman(salesmanId, salesmanCode, salesmanName, mobile, emailId) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n      const newTran = {\n        salesmanId: salesmanId,\n        salesmanCode: salesmanCode,\n        salesmanName: salesmanName,\n        mobile: mobile,\n        emailId: emailId\n      };\n      this.http.post(this.url + '/lookup/salesman/new', JSON.stringify(newTran), {\n        headers: headers\n      }).subscribe(res => {\n        console.log(res);\n      });\n    }\n    updateSalesman(salesmanCode, salesmanName, mobile, emailId) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n      const newTran = {\n        salesmanCode: salesmanCode,\n        salesmanName: salesmanName,\n        mobile: mobile,\n        emailId: emailId\n      };\n      this.http.post(this.url + '/lookup/salesman/update', JSON.stringify(newTran), {\n        headers: headers\n      }).subscribe(res => {\n        console.log(res);\n      });\n    }\n    getManufacturer() {\n      return this.http.get(this.url + '/lookup/manufacturer').pipe(map(data => data.recordset));\n    }\n    getManufacturerDetails(code) {\n      return this.http.get(this.url + '/lookup/manufacturer/check/' + code);\n    }\n    postManufacturer(manufacturerId, manufacturerCode, manufacturerName, mobile) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n      const newTran = {\n        manufacturerId: manufacturerId,\n        manufacturerCode: manufacturerCode,\n        manufacturerName: manufacturerName,\n        mobile: mobile\n      };\n      this.http.post(this.url + '/lookup/manufacturer/new', JSON.stringify(newTran), {\n        headers: headers\n      }).subscribe(res => {\n        console.log(res);\n      });\n    }\n    updateManufacturer(manufacturerId, manufacturerCode, manufacturerName, mobile) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n      const newTran = {\n        manufacturerId: manufacturerId,\n        manufacturerCode: manufacturerCode,\n        manufacturerName: manufacturerName,\n        mobile: mobile\n      };\n      this.http.post(this.url + '/lookup/manufacturer/update', JSON.stringify(newTran), {\n        headers: headers\n      }).subscribe(res => {\n        console.log(res);\n      });\n    }\n    getCategory() {\n      return this.http.get(this.url + '/lookup/category').pipe(map(data => data.recordset));\n    }\n    getCategoryDetails(code) {\n      return this.http.get(this.url + '/lookup/category/check/' + code);\n    }\n    postCategory(categoryId, categoryCode, categoryName, categoryDetails) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n      const newTran = {\n        categoryId: categoryId,\n        categoryCode: categoryCode,\n        categoryName: categoryName,\n        categoryDetails: categoryDetails\n      };\n      this.http.post(this.url + '/lookup/category/new', JSON.stringify(newTran), {\n        headers: headers\n      }).subscribe(res => {\n        console.log(res);\n      });\n    }\n    updateCategory(categoryId, categoryCode, categoryName, categoryDetails) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n      const newTran = {\n        categoryId: categoryId,\n        categoryCode: categoryCode,\n        categoryName: categoryName,\n        categoryDetails: categoryDetails\n      };\n      this.http.post(this.url + '/lookup/category/update', JSON.stringify(newTran), {\n        headers: headers\n      }).subscribe(res => {\n        console.log(res);\n      });\n    }\n    getBrand() {\n      return this.http.get(this.url + '/lookup/brand').pipe(map(data => data.recordset));\n    }\n    getBrandDetails(code) {\n      return this.http.get(this.url + '/lookup/brand/check/' + code);\n    }\n    postBrand(brandId, brandCode, brandName, manufacturerCd) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n      const newTran = {\n        brandId: brandId,\n        brandCode: brandCode,\n        brandName: brandName,\n        manufacturerCd: manufacturerCd\n      };\n      this.http.post(this.url + '/lookup/brand/new', JSON.stringify(newTran), {\n        headers: headers\n      }).subscribe(res => {\n        console.log(res);\n      });\n    }\n    updateBrand(brandId, brandCode, brandName, manufacturerCd) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n      const newTran = {\n        brandId: brandId,\n        brandCode: brandCode,\n        brandName: brandName,\n        manufacturerCd: manufacturerCd\n      };\n      this.http.post(this.url + '/lookup/brand/update', JSON.stringify(newTran), {\n        headers: headers\n      }).subscribe(res => {\n        console.log(res);\n      });\n    }\n    getSubcategory() {\n      return this.http.get(this.url + '/lookup/subcategory').pipe(map(data => data.recordset));\n    }\n    getSubcategoryDetails(code) {\n      return this.http.get(this.url + '/lookup/subcategory/check/' + code);\n    }\n    getSubcategoryDetailsFromCategory(code) {\n      return this.http.get(this.url + '/lookup/subcategory/category/' + code);\n    }\n    postSubcategory(subcategoryId, subcategoryCode, subcategoryName, subcategoryDetails, categoryId) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n      const newTran = {\n        subcategoryId: subcategoryId,\n        subcategoryCode: subcategoryCode,\n        subcategoryName: subcategoryName,\n        subcategoryDetails: subcategoryDetails,\n        categoryId: categoryId\n      };\n      this.http.post(this.url + '/lookup/subcategory/new', JSON.stringify(newTran), {\n        headers: headers\n      }).subscribe(res => {\n        console.log(res);\n      });\n    }\n    updateSubcategory(subcategoryId, subcategoryCode, subcategoryName, subcategoryDetails, categoryId) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n      const newTran = {\n        subcategoryId: subcategoryId,\n        subcategoryCode: subcategoryCode,\n        subcategoryName: subcategoryName,\n        subcategoryDetails: subcategoryDetails,\n        categoryId: categoryId\n      };\n      this.http.post(this.url + '/lookup/subcategory/update', JSON.stringify(newTran), {\n        headers: headers\n      }).subscribe(res => {\n        console.log(res);\n      });\n    }\n    getLocation() {\n      return this.http.get(this.url + '/lookup/location').pipe(map(data => data.recordset));\n    }\n    getLocationDetails(code) {\n      return this.http.get(this.url + '/lookup/location/check/' + code);\n    }\n    postLocation(locationId, locationName) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n      const newTran = {\n        locationId: locationId,\n        locationName: locationName\n      };\n      this.http.post(this.url + '/lookup/location/new', JSON.stringify(newTran), {\n        headers: headers\n      }).subscribe(res => {\n        console.log(res);\n      });\n    }\n    updateLocation(locationId, locationName) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n      const newTran = {\n        locationId: locationId,\n        locationName: locationName\n      };\n      this.http.post(this.url + '/lookup/location/update', JSON.stringify(newTran), {\n        headers: headers\n      }).subscribe(res => {\n        console.log(res);\n      });\n    }\n    static #_ = this.ɵfac = function LookupService_Factory(t) {\n      return new (t || LookupService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LookupService,\n      factory: LookupService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return LookupService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}